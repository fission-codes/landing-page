{"version":3,"sources":["webpack://gatsby-starter-ghost/./src/templates/page.js"],"names":["data","location","page","ghostPage","type","codeinjection_styles","className","title","dangerouslySetInnerHTML","__html","html"],"mappings":"mLAwDA,UA1Ca,SAAC,GAAwB,IAAtBA,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACZC,EAAOF,EAAKG,UAElB,OACI,gCACI,gBAAC,IAAD,CACIH,KAAMA,EACNC,SAAUA,EACVG,KAAK,YAET,gBAAC,IAAD,KACI,yBAAOA,KAAK,YAAZ,GAA2BF,EAAKG,uBAEpC,gBAAC,KAAD,KACI,uBAAKC,UAAU,aACX,2BAASA,UAAU,WACf,sBAAIA,UAAU,iBAAiBJ,EAAKK,OAGpC,2BACID,UAAU,qCACVE,wBAAyB,CAAEC,OAAQP,EAAKQ","file":"component---src-templates-page-js-ed58a426ce0248de1419.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport { Helmet } from 'react-helmet'\n\nimport { Layout } from '../components/common'\nimport { MetaData } from '../components/common/meta'\n\n/**\n* Single page (/:slug)\n*\n* This file renders a single page and loads all the content.\n*\n*/\nconst Page = ({ data, location }) => {\n    const page = data.ghostPage\n\n    return (\n        <>\n            <MetaData\n                data={data}\n                location={location}\n                type=\"website\"\n            />\n            <Helmet>\n                <style type=\"text/css\">{`${page.codeinjection_styles}`}</style>\n            </Helmet>\n            <Layout>\n                <div className=\"container\">\n                    <article className=\"content\">\n                        <h1 className=\"content-title\">{page.title}</h1>\n\n                        {/* The main page content */}\n                        <section\n                            className=\"content-body load-external-scripts\"\n                            dangerouslySetInnerHTML={{ __html: page.html }}\n                        />\n                    </article>\n                </div>\n            </Layout>\n        </>\n    )\n}\n\nPage.propTypes = {\n    data: PropTypes.shape({\n        ghostPage: PropTypes.shape({\n            codeinjection_styles: PropTypes.object,\n            title: PropTypes.string.isRequired,\n            html: PropTypes.string.isRequired,\n            feature_image: PropTypes.string,\n        }).isRequired,\n    }).isRequired,\n    location: PropTypes.object.isRequired,\n}\n\nexport default Page\n\nexport const postQuery = graphql`\n    query($slug: String!) {\n        ghostPage(slug: { eq: $slug }) {\n            ...GhostPageFields\n        }\n    }\n`\n"],"sourceRoot":""}