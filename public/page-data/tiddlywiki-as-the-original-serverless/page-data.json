{"componentChunkName":"component---src-templates-post-js","path":"/tiddlywiki-as-the-original-serverless/","result":{"data":{"ghostPost":{"id":"Ghost__Post__5eb0b3c3847394001e25cfe8","title":"TiddlyWiki as the original serverless","slug":"tiddlywiki-as-the-original-serverless","featured":true,"feature_image":"https://images.unsplash.com/photo-1506784881475-0e408bbca849?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","excerpt":"Using TiddlyWiki as your own open source Roam or Notion using the Git saver, plus an App Idea for running this on Fission","custom_excerpt":"Using TiddlyWiki as your own open source Roam or Notion using the Git saver, plus an App Idea for running this on Fission","created_at_pretty":"05 May, 2020","published_at_pretty":"05 May, 2020","updated_at_pretty":"08 October, 2020","created_at":"2020-05-04T17:30:59.000-07:00","published_at":"2020-05-05T11:28:24.000-07:00","updated_at":"2020-10-08T12:33:45.000-07:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"}],"primary_author":{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"},"primary_tag":{"name":"App Ideas","slug":"app-ideas","description":null,"feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"App Ideas","slug":"app-ideas","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"TiddlyWiki","slug":"tiddlywiki","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"serverless","slug":"serverless","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"TiddlyWiki is a really interesting \"non linear personal notebook\" that's\ncurrently getting a lot of people tinkering with it because it's a bit like an\nopen source, build your own Roam Research or Notion: a tool for building second\nbrains.\n\nI've used TiddlyWiki [https://tiddlywiki.com]  off and on over many years. I can\ntrace back to a post from May 2005 on my old blog\n[https://bmannconsulting.com/archive/2005/05/19/tiddlywiki-as-note-system/],\nalthough even there I mention running it earlier than that. A couple of years\nago, I even ran it on Google App Engine with the Go-based TiddlyWiki App Engine\nServer [https://github.com/rsc/tiddly]. That was multi-user, using Google\naccounts to restrict read/write.\n\nAlthough we didn't really appreciate it at the time, it had this lovely aspect\nof all your \"stuff\" being in this one file. You could move the file around,\nwhether it be on a USB stick or an FTP folder or a cloud service. Any web\nbrowser opens it and \"runs\" it – no servers involved.\n\nJeremy Ruston @Jermolene [https://twitter.com/Jermolene], the creator of\nTiddlyWiki, posted a great tweetstorm about how TiddlyWiki has been serverless\nall the way back to 2004:\n\n> TiddlyWiki was literally serverless in 2004, but it was at @Osmosoft\n[https://twitter.com/osmosoft?ref_src=twsrc%5Etfw]  in 2007/8 with @jayfresh\n[https://twitter.com/jayfresh?ref_src=twsrc%5Etfw], @psd\n[https://twitter.com/psd?ref_src=twsrc%5Etfw]  and others that we understood the\nvalue\n\n— Jeremy Ruston (@Jermolene) July 6, 2016\n[https://twitter.com/Jermolene/status/750677048021094400?ref_src=twsrc%5Etfw]\nRun your own Roam with TiddlyWiki plus Git\nThere has been a lot of excitement about Roam Research\n[https://roamresearch.com], which describes itself on the home page as:\n\n> A note-taking tool for networked thought.\nAs easy to use as a document. As powerful as a graph database. Roam helps you\norganize your research for the long haul.\nThe #roamcult  Twitter hashtag or community run @CultRoam account\n[https://twitter.com/CultRoam]  should give you an idea of how excited people\nare, as well as surfacing lots of great tutorials and tips.\n\n(Insert Notion [https://www.notion.so/]  love here if you're a fan of it\ninstead)\n\nVenkatesh Rao wrote about A Text Renaissance\n[https://www.ribbonfarm.com/2020/02/24/a-text-renaissance/]  which covers a bit\nabout why this is all coming up now:\n\n> The text renaissance is an actual renaissance. It’s a story of history-inspired\nrenewal in a very fundamental way: exciting recent developments are due in part\nto a new generation of young product visionaries circling back to the early\nhistory of digital text, rediscovering old, abandoned ideas, and reimagining the\nbleeding edge in terms of the unexplored adjacent possible of the 80s and 90s.\n\n--------------------------------------------------------------------------------\n\nBut of course, both Notion and Roam are hosted SaaS apps, neither of them with\nofficial APIs yet. They have markdown exports, but ultimately your personal\ndata, your notes, or \"Second Brain\" [https://www.buildingasecondbrain.com/]  as\nsome people call it, isn't fully under your control.\n\nEnter TiddlyWiki, which is open source and thus can be hosted and backed up and\nmodified as you desire.\n\nTiddlyBlink [https://giffmex.org/gifts/tiddlyblink.html]  and Drift\n[https://akhater.github.io/drift/]  are two distros / plugins for TiddlyWiki\nthat include the bi-directional linking capability\n\nToday, TiddlyWiki has the concept of \"Savers\"\n[https://tiddlywiki.com/dev/static/Saver.html]. You can still save updates to\nyour local machine, but you can also connect it up to a Git service of your\nchoice and \"save\" by committing the HTML back through an API call.\n\nPesho Ivanov documents this as Two-click TiddlyWiki with Github Pages\n[https://pesho-ivanov.github.io/#Two-click%20TiddlyWiki%20with%20GitHub-pages],\nor you can read the extended edition from Chris Aldrich, Self-hosting\nTiddlyWiki\nwith Github Pages\n[https://boffosocko.com/2020/04/04/self-hosting-tiddlywiki-with-github-pages/].\n\nI set Drift up for myself, including turning on password-based encryption in\nTiddlyWiki [https://tiddlywiki.com/static/Encryption.html]. Here's my publicly\nhosted Drift TiddlyWiki [https://projects.bmannconsulting.com/tiddlywiki-drift/]\n. I can enter the password, and use it in the browser, and then periodically the\nencrypted version is saved back to my own private Github repo.\n\nMy second brain, publicly available everywhere, backed up and versioned. Pretty\nnice!\n\nApp Idea: Fission Saver for TiddlyWiki\nOf course, git is still pretty complex to learn, for someone who mainly wants to\ntake personal notes and make sure they're around forever. What I've described\nabove was a fun exercise for me, but it's very <insert-yak-shaving\n[https://talk.fission.codes/t/yak-shaving-programming-term/582]-gif>.\n\nThe Fission tech stack gives users and developers a web native file system.\nHaving files available everywhere, read/write, encrypted, and accessible through\njust a browser, means that developers can build apps that keep users in control\nof their files, and that a lot of existing apps can easily be connected to\nFission. Serverless, as it were.\n\nI wrote up what a \"Fission Saver\" would look like for TiddlyWiki\n[https://talk.fission.codes/t/fission-saver-for-tiddlywiki/616]  on our App\nIdeas forum, which is a very basic start. Since you can publish files with\nFission, the TiddlyWiki would be hosted on Fission, but also write back to\nitself over the HTTP API. This is pretty much the same as the Git savers today.\n\nBut we can do better than that, since we have portable user IDs and a\npasswordless login which can do encryption. A \"native\" Fission adapter for\nTiddlyWiki would mean offline and online access to your data available\neverywhere, and encrypted or public data as needed. \n\nI'm looking forward to more \"serverless\" thinking with the tools we now have,\nwhich TiddlyWiki had figured out 15+ years ago.","html":"<p>TiddlyWiki is a really interesting \"non linear personal notebook\" that's currently getting a lot of people tinkering with it because it's a bit like an open source, build your own Roam Research or Notion: a tool for building second brains.</p><p>I've used <a href=\"https://tiddlywiki.com\">TiddlyWiki</a> off and on over many years. I can trace back to a <a href=\"https://bmannconsulting.com/archive/2005/05/19/tiddlywiki-as-note-system/\">post from May 2005 on my old blog</a>, although even there I mention running it earlier than that. A couple of years ago, I even ran it on Google App Engine with the <a href=\"https://github.com/rsc/tiddly\">Go-based TiddlyWiki App Engine Server</a>. That was multi-user, using Google accounts to restrict read/write.</p><p>Although we didn't really appreciate it at the time, it had this lovely aspect of all your \"stuff\" being in this one file. You could move the file around, whether it be on a USB stick or an FTP folder or a cloud service. Any web browser opens it and \"runs\" it – no servers involved.</p><p><a href=\"https://twitter.com/Jermolene\">Jeremy Ruston @Jermolene</a>, the creator of TiddlyWiki, posted a great tweetstorm about how TiddlyWiki has been serverless all the way back to 2004:</p><!--kg-card-begin: embed--><figure class=\"kg-card kg-embed-card\"><blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">TiddlyWiki was literally serverless in 2004, but it was at <a href=\"https://twitter.com/osmosoft?ref_src=twsrc%5Etfw\">@Osmosoft</a> in 2007/8 with <a href=\"https://twitter.com/jayfresh?ref_src=twsrc%5Etfw\">@jayfresh</a>, <a href=\"https://twitter.com/psd?ref_src=twsrc%5Etfw\">@psd</a> and others that we understood the value</p>&mdash; Jeremy Ruston (@Jermolene) <a href=\"https://twitter.com/Jermolene/status/750677048021094400?ref_src=twsrc%5Etfw\">July 6, 2016</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n</figure><!--kg-card-end: embed--><h2 id=\"run-your-own-roam-with-tiddlywiki-plus-git\">Run your own Roam with TiddlyWiki plus Git</h2><p>There has been a lot of excitement about <a href=\"https://roamresearch.com\">Roam Research</a>, which describes itself on the home page as:</p><blockquote><strong>A note-taking tool for networked thought.</strong><br>As easy to use as a document. As powerful as a graph database. Roam helps you organize your research for the long haul.</blockquote><p>The <em>#roamcult</em> Twitter hashtag or community run <a href=\"https://twitter.com/CultRoam\">@CultRoam account</a> should give you an idea of how excited people are, as well as surfacing lots of great tutorials and tips.</p><p>(Insert <a href=\"https://www.notion.so/\">Notion</a> love here if you're a fan of it instead)</p><p><a href=\"https://www.ribbonfarm.com/2020/02/24/a-text-renaissance/\">Venkatesh Rao wrote about A Text Renaissance</a> which covers a bit about why this is all coming up now:</p><blockquote>The text renaissance is an actual <em>renaissance. </em>It’s a story of history-inspired renewal in a very fundamental way: exciting recent developments are due in part to a new generation of young product visionaries circling back to the early history of digital text, rediscovering old, abandoned ideas, and reimagining the bleeding edge in terms of the unexplored adjacent possible of the 80s and 90s.</blockquote><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p>But of course, both Notion and Roam are hosted SaaS apps, neither of them with official APIs yet. They have markdown exports, but ultimately your personal data, your notes, or <a href=\"https://www.buildingasecondbrain.com/\">\"Second Brain\"</a> as some people call it, isn't fully under your control.</p><p>Enter TiddlyWiki, which is open source and thus can be hosted and backed up and modified as you desire.</p><p><a href=\"https://giffmex.org/gifts/tiddlyblink.html\">TiddlyBlink</a> and <a href=\"https://akhater.github.io/drift/\">Drift</a> are two distros / plugins for TiddlyWiki that include the bi-directional linking capability</p><p>Today, TiddlyWiki has the concept of <a href=\"https://tiddlywiki.com/dev/static/Saver.html\">\"Savers\"</a>. You can still save updates to your local machine, but you can also connect it up to a Git service of your choice and \"save\" by committing the HTML back through an API call.</p><p>Pesho Ivanov documents this as <a href=\"https://pesho-ivanov.github.io/#Two-click%20TiddlyWiki%20with%20GitHub-pages\">Two-click TiddlyWiki with Github Pages</a>, or you can read the extended edition from <a href=\"https://boffosocko.com/2020/04/04/self-hosting-tiddlywiki-with-github-pages/\">Chris Aldrich, Self-hosting TiddlyWiki with Github Pages</a>.</p><p>I set Drift up for myself, including turning on <a href=\"https://tiddlywiki.com/static/Encryption.html\">password-based encryption in TiddlyWiki</a>. Here's my <a href=\"https://projects.bmannconsulting.com/tiddlywiki-drift/\">publicly hosted Drift TiddlyWiki</a>. I can enter the password, and use it in the browser, and then periodically the encrypted version is saved back to my own private Github repo.</p><p>My second brain, publicly available everywhere, backed up and versioned. Pretty nice!</p><h2 id=\"app-idea-fission-saver-for-tiddlywiki\">App Idea: Fission Saver for TiddlyWiki</h2><p>Of course, git is still pretty complex to learn, for someone who mainly wants to take personal notes and make sure they're around forever. What I've described above was a fun exercise for me, but it's very &lt;insert-<a href=\"https://talk.fission.codes/t/yak-shaving-programming-term/582\">yak-shaving</a>-gif&gt;.</p><p>The Fission tech stack gives users and developers a web native file system. Having files available everywhere, read/write, encrypted, and accessible through just a browser, means that developers can build apps that keep users in control of their files, and that a lot of existing apps can easily be connected to Fission. Serverless, as it were.</p><p>I wrote up what a <a href=\"https://talk.fission.codes/t/fission-saver-for-tiddlywiki/616\">\"Fission Saver\" would look like for TiddlyWiki</a> on our App Ideas forum, which is a very basic start. Since you can publish files with Fission, the TiddlyWiki would be hosted on Fission, but also write back to itself over the HTTP API. This is pretty much the same as the Git savers today.</p><p>But we can do better than that, since we have portable user IDs and a passwordless login which can do encryption. A \"native\" Fission adapter for TiddlyWiki would mean offline and online access to your data available everywhere, and encrypted or public data as needed. </p><p>I'm looking forward to more \"serverless\" thinking with the tools we now have, which TiddlyWiki had figured out 15+ years ago.</p>","url":"https://blog.fission.codes/tiddlywiki-as-the-original-serverless/","canonical_url":null,"uuid":"639e84ca-a7a1-4f62-b6c0-ede9ff32629a","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5eb0b3c3847394001e25cfe8","reading_time":null}},"pageContext":{"slug":"tiddlywiki-as-the-original-serverless"}},"staticQueryHashes":["1752937443","2358152166","2561578252","2731221146","4145280475"]}