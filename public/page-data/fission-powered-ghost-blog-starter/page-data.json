{"componentChunkName":"component---src-templates-post-js","path":"/fission-powered-ghost-blog-starter/","result":{"data":{"ghostPost":{"id":"Ghost__Post__60390451d064ac001e8042de","title":"Zero-Config Fission-Powered Ghost Blog","slug":"fission-powered-ghost-blog-starter","featured":false,"feature_image":"https://s3.fission.codes/2021/03/dawit-sCKjl0AyO-4-unsplash.jpg","excerpt":"In five minutes, anyone can have a Ghost blog up and running, with media uploads hosted on IPFS thanks to Fission.","custom_excerpt":"In five minutes, anyone can have a Ghost blog up and running, with media uploads hosted on IPFS thanks to Fission.","created_at_pretty":"26 February, 2021","published_at_pretty":"08 March, 2021","updated_at_pretty":"08 March, 2021","created_at":"2021-02-26T06:23:13.000-08:00","published_at":"2021-03-08T09:09:17.000-08:00","updated_at":"2021-03-08T09:09:16.000-08:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Helder S Ribeiro","slug":"agentofuser","bio":"Deleting the chasm between using and programming computers.","profile_image":"https://s3.fission.codes/2021/02/2020-1024px.jpg","twitter":"@agentofuser","facebook":null,"website":"https://agentofuser.com"}],"primary_author":{"name":"Helder S Ribeiro","slug":"agentofuser","bio":"Deleting the chasm between using and programming computers.","profile_image":"https://s3.fission.codes/2021/02/2020-1024px.jpg","twitter":"@agentofuser","facebook":null,"website":"https://agentofuser.com"},"primary_tag":{"name":"Headless CMS","slug":"headless-cms","description":null,"feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"Headless CMS","slug":"headless-cms","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Headless Ghost","slug":"headless-ghost","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Heroku","slug":"heroku","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Ghost","slug":"ghost-tag","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"IPFS","slug":"ipfs","description":"InterPlanetary File System","feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"In five minutes, anyone can have a Ghost blog up and running, with media uploads\nhosted on IPFS thanks to Fission.\n\n\n\nThinking of starting a Ghost blog but leaning towards \"nah, too much work\"?\n\nHere's how you do it with Fission's Ghost Blog Starter\n[https://github.com/fission-suite/heroku-ipfs-ghost]: click a button, choose a\nURL, watch a couple of spinners do their thing, and voilà: a production-ready\nGhost blog instance is live on Heroku in less than 5 minutes.\n\nBest of all? Image and video uploads—which aren't supported by default on Heroku\ndue to its read-only filesystem—are built-in and work seamlessly. The Fission\nHeroku Add-on [https://elements.heroku.com/addons/interplanetary-fission]  takes\ncare of everything without intervention, creating a new Fission account for your\nblog, handling media uploads, and serving those assets for you on HTTPS and on\nthe peer-to-peer IPFS network.\n\nGoing Headless\nGhost is a great platform for authors, with almost a decade of accumulated\nimprovements in user experience.\n\nOne shortcoming though is that it doesn't scale beyond a single server:\n\n> Ghost doesn’t support load-balanced clustering or multi-server setups of any\ndescription, there should only be one  Ghost instance per site.\n— Ghost documentation\n[https://ghost.org/docs/faq/clustering-sharding-multi-server/]\nCaching pages and serving them via a content delivery network  (CDN) is one way\nto mitigate this. But if content has to be turned into static files and served\nfrom the edge anyway, why not go a step further and decouple Ghost, the\nauthoring interface, from the code that generates those files based on the\ncontent?\n\nThat's the Headless CMS  approach, where a static site generator\n[https://jamstack.org/generators/]  pulls the content from the content\nmanagement system and builds the pages that can be served super-fast at scale at\nthe edge. This opens up the possibility to tap into a rich ecosystem of frontend\ndevelopment tools and components (like React and others) for a much richer\ncontent experience, along with security and performance benefits.\n\nOn a previous post, we described how we're moving our own blog to a Headless\nGhost + Next.js [https://blog.fission.codes/headless-ghost-blog-fission/] \nsetup. This allows us not only to make the best out of what the frontend can do,\nbut also to showcase how Fission enables personalization at the edge, something\nthat used to be possible only with dynamically-rendered server-hosted websites.\n\nBy using our Ghost blog starter\n[https://github.com/fission-suite/heroku-ipfs-ghost], you can try this setup for\nyourself and follow along as we continue to share tools, process, and lessons on\nour own path to a webnative publishing experience.","html":"<p>In five minutes, anyone can have a Ghost blog up and running, with media uploads hosted on IPFS thanks to Fission.</p><!--kg-card-begin: markdown--><p><img src=\"https://demos.fission.app/fission-heroku-ipfs-ghost-2x.gif\" alt=\"demo of fission's ghost starter deploying to heroku\"></p>\n<!--kg-card-end: markdown--><p>Thinking of starting a Ghost blog but leaning towards \"nah, too much work\"?</p><p>Here's how you do it with <a href=\"https://github.com/fission-suite/heroku-ipfs-ghost\">Fission's Ghost Blog Starter</a>: click a button, choose a URL, watch a couple of spinners do their thing, and <em>voilà</em>: a production-ready Ghost blog instance is live on Heroku in less than 5 minutes.</p><p>Best of all? Image and video uploads—which aren't supported by default on Heroku due to its read-only filesystem—are built-in and work seamlessly. The <a href=\"https://elements.heroku.com/addons/interplanetary-fission\">Fission Heroku Add-on</a> takes care of everything without intervention, creating a new Fission account for your blog, handling media uploads, and serving those assets for you on HTTPS and on the peer-to-peer IPFS network.</p><h3 id=\"going-headless\">Going Headless</h3><p>Ghost is a great platform for authors, with almost a decade of accumulated improvements in user experience.</p><p>One shortcoming though is that it doesn't scale beyond a single server:</p><blockquote>Ghost doesn’t support load-balanced clustering or multi-server setups of any description, there should only be <em><strong>one</strong></em> Ghost instance per site.<br>— <a href=\"https://ghost.org/docs/faq/clustering-sharding-multi-server/\">Ghost documentation</a></blockquote><p>Caching pages and serving them via a <em>content delivery network</em> (CDN) is one way to mitigate this. But if content has to be turned into static files and served from the edge anyway, why not go a step further and decouple Ghost, the authoring interface, from the code that generates those files based on the content?</p><p>That's the <strong>Headless CMS</strong> approach, where a <a href=\"https://jamstack.org/generators/\">static site generator</a> pulls the content from the content management system and builds the pages that can be served super-fast at scale at the edge. This opens up the possibility to tap into a rich ecosystem of frontend development tools and components (like React and others) for a much richer content experience, along with security and performance benefits.</p><p>On a previous post, we described how we're moving our own blog to a <a href=\"https://blog.fission.codes/headless-ghost-blog-fission/\">Headless Ghost + Next.js</a> setup. This allows us not only to make the best out of what the frontend can do, but also to showcase how Fission enables personalization at the edge, something that used to be possible only with dynamically-rendered server-hosted websites.</p><p>By using our <a href=\"https://github.com/fission-suite/heroku-ipfs-ghost\">Ghost blog starter</a>, you can try this setup for yourself and follow along as we continue to share tools, process, and lessons on our own path to a webnative publishing experience.</p>","url":"https://blog.fission.codes/fission-powered-ghost-blog-starter/","canonical_url":null,"uuid":"d60a1fa2-0ae9-48f5-aa0e-c3755d66116d","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"60390451d064ac001e8042de","reading_time":null}},"pageContext":{"slug":"fission-powered-ghost-blog-starter"}},"staticQueryHashes":["1752937443","2358152166","2561578252","2731221146","4145280475"]}