{"componentChunkName":"component---src-templates-index-js","path":"/","result":{"data":{"allGhostPost":{"edges":[{"node":{"id":"Ghost__Post__604fbe1f2f1c41001e841060","title":"Building Actual Budget, with James Long","slug":"building-actual-budget-with-james-long","featured":false,"feature_image":"https://s3.fission.codes/2021/03/actualbudget.jpeg","excerpt":"James Long presented at Fission's weekly video tech talk on March 11th, 2021. He is the creator of Actual Budget, a local first app with a unique approach to using SQLite and CRDTs for syncing across web, mobile and desktop apps.","custom_excerpt":"James Long presented at Fission's weekly video tech talk on March 11th, 2021. He is the creator of Actual Budget, a local first app with a unique approach to using SQLite and CRDTs for syncing across web, mobile and desktop apps.","created_at_pretty":"15 March, 2021","published_at_pretty":"11 March, 2021","updated_at_pretty":"15 March, 2021","created_at":"2021-03-15T13:05:51.000-07:00","published_at":"2021-03-11T13:05:00.000-08:00","updated_at":"2021-03-15T13:32:15.000-07:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":"James Long presented March 11th, 2021. He is the creator of Actual Budget, a local first app with a unique approach to using SQLite and CRDTs for syncing across web, mobile and desktop apps.","twitter_image":"https://s3.fission.codes/2021/03/actualbudget-screenshot-1.png","twitter_title":null,"authors":[{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"}],"primary_author":{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"},"primary_tag":{"name":"Presentations","slug":"presentation","description":null,"feature_image":"https://images.unsplash.com/photo-1535016120720-40c646be5580?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","meta_description":null,"meta_title":null},"tags":[{"name":"Presentations","slug":"presentation","description":null,"feature_image":"https://images.unsplash.com/photo-1535016120720-40c646be5580?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","meta_description":null,"meta_title":null},{"name":"CRDT","slug":"crdt","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Local Software","slug":"local-software","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"SQLite","slug":"sqlite","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"encryption","slug":"encryption","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"e2ee","slug":"e2ee","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"James Long @jlongster [https://twitter.com/jlongster]  presented at Fission's\nweekly video tech talks on March 11th, 2021. He is the creator of Actual Budget,\na \"personal finance app for nerds\". Actual Budget [https://actualbudget.com'] \nis a local first app with a unique approach to using SQLite and CRDTs for\nsyncing across web, mobile and desktop apps. James described why and how he\nbuilt and how it has evolved to its present form.\n\n> Actual is a super fast privacy-focused app for managing your finances. You own\nyour data, and we will sync it across all devices with optional end-to-end\nencryption.\nactualbudget.com [https://actualbudget.com]The Porting a 100% local app to the web on the Actual blog\n[https://actualbudget.com/blog/porting-local-app-web]  is also an excellent\nread.\n\nVideo\nThe slides are available as a PDF »\n[https://ipfs.runfission.com/ipfs/bafybeia34x2uwwlq6jpt4k5rsjjbp4hxxmiiileghtdjbaiqeewih7ihju/p/fission-actual.pdf]\n\n> General architecture of the project: Electron on desktop, React Native +\nnodejs-mobile on phones, and web version in browser, including in a worker.\n\nWeb version is the one @jlongster\n[https://twitter.com/jlongster?ref_src=twsrc%5Etfw]  is most excited about. Lots\nof opinions on native apps, web, etc. after having done this. \npic.twitter.com/6IgcDn15Ac [https://t.co/6IgcDn15Ac]\n\n— FISSION (@FISSIONcodes) March 11, 2021\n[https://twitter.com/FISSIONcodes/status/1370045155344928771?ref_src=twsrc%5Etfw]\nThanks to James for presenting! His pioneering work is the kind of stack that we\nare aiming to provide to all app developers, and it was great to hear from James\nabout how and why he integrated the features and components that he did.\n\n\n--------------------------------------------------------------------------------\n\nInterested in more talks like this? Visit the Fission events page\n[https://lu.ma/fission]  to sign up to get notified about new events, and join\nus most Thursdays for new tech talks.","html":"<p><a href=\"https://twitter.com/jlongster\">James Long @jlongster</a> presented at Fission's weekly video tech talks on March 11th, 2021. He is the creator of Actual Budget, a \"personal finance app for nerds\". <a href=\"https://actualbudget.com'\">Actual Budget</a> is a local first app with a unique approach to using SQLite and CRDTs for syncing across web, mobile and desktop apps. James described why and how he built and how it has evolved to its present form.</p><blockquote>Actual is a super fast privacy-focused app for managing your finances. You own your data, and we will sync it across all devices with optional end-to-end encryption.</blockquote><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://s3.fission.codes/2021/03/actualbudget-screenshot.png\" class=\"kg-image\"><figcaption><a href=\"https://actualbudget.com\">actualbudget.com</a></figcaption></figure><!--kg-card-end: image--><p>The <a href=\"https://actualbudget.com/blog/porting-local-app-web\">Porting a 100% local app to the web on the Actual blog</a> is also an excellent read.</p><h2 id=\"video\">Video</h2><!--kg-card-begin: embed--><figure class=\"kg-card kg-embed-card\"><iframe src=\"https://player.vimeo.com/video/522581747?app_id=122963\" width=\"640\" height=\"328\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen title=\"Building Actual Budget, with James Long\"></iframe></figure><!--kg-card-end: embed--><p>The slides are <a href=\"https://ipfs.runfission.com/ipfs/bafybeia34x2uwwlq6jpt4k5rsjjbp4hxxmiiileghtdjbaiqeewih7ihju/p/fission-actual.pdf\">available as a PDF » </a></p><!--kg-card-begin: embed--><figure class=\"kg-card kg-embed-card\"><blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">General architecture of the project: Electron on desktop, React Native + nodejs-mobile on phones, and web version in browser, including in a worker.<br><br>Web version is the one <a href=\"https://twitter.com/jlongster?ref_src=twsrc%5Etfw\">@jlongster</a> is most excited about. Lots of opinions on native apps, web, etc. after having done this. <a href=\"https://t.co/6IgcDn15Ac\">pic.twitter.com/6IgcDn15Ac</a></p>&mdash; FISSION (@FISSIONcodes) <a href=\"https://twitter.com/FISSIONcodes/status/1370045155344928771?ref_src=twsrc%5Etfw\">March 11, 2021</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n</figure><!--kg-card-end: embed--><p>Thanks to James for presenting! His pioneering work is the kind of stack that we are aiming to provide to all app developers, and it was great to hear from James about how and why he integrated the features and components that he did.</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p>Interested in more talks like this? <a href=\"https://lu.ma/fission\">Visit the Fission events page</a> to sign up to get notified about new events, and join us most Thursdays for new tech talks.</p>","url":"https://blog.fission.codes/building-actual-budget-with-james-long/","canonical_url":null,"uuid":"bb72a356-4dea-418c-891f-d5686b4c941f","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"604fbe1f2f1c41001e841060","reading_time":null}},{"node":{"id":"Ghost__Post__6049c1d0c695c4001e8c7e86","title":"IPFS Local Offline Collaboration SIG","slug":"ipfs-local-offline-collaboration-sig","featured":false,"feature_image":"https://s3.fission.codes/2021/03/Screen-Shot-2021-03-10-at-11.13.36-PM-1.png","excerpt":"We presented Fission's approach to local first apps on IPFS to the Local Offline Collaboration SIG on March 10th, 2021.","custom_excerpt":"We presented Fission's approach to local first apps on IPFS to the Local Offline Collaboration SIG on March 10th, 2021.","created_at_pretty":"11 March, 2021","published_at_pretty":"10 March, 2021","updated_at_pretty":"11 March, 2021","created_at":"2021-03-10T23:08:00.000-08:00","published_at":"2021-03-10T09:00:00.000-08:00","updated_at":"2021-03-11T11:20:13.000-08:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"},{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"}],"primary_author":{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"},"primary_tag":{"name":"Presentations","slug":"presentation","description":null,"feature_image":"https://images.unsplash.com/photo-1535016120720-40c646be5580?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","meta_description":null,"meta_title":null},"tags":[{"name":"Presentations","slug":"presentation","description":null,"feature_image":"https://images.unsplash.com/photo-1535016120720-40c646be5580?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","meta_description":null,"meta_title":null},{"name":"DWeb","slug":"dweb","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"IPFS","slug":"ipfs","description":"InterPlanetary File System","feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"We presented Fission's approach to local first apps on IPFS with the Fission\npublishing platform and webnative SDK.\n\nOur guiding principle for using IPFS is: Everything should work in the browser,\nincluding on mobile, with no extensions required.\n\nThe Special Interest Group (SIG) focused on IPFS and local offline collaboration\nhas its home base on Github [https://github.com/ipfs/local-offline-collab/],\nwhich you can follow for updates and future meetings. \n\nThe slides are available on IPFS of course »\n[https://ipfs.runfission.com/ipfs/bafybeigr4crq5fe5kwump3pp3a2z74udgsgwum2yxb6cfwfntzez7rs4hu/p/2021-03-10%20IPFS%20Local%20Offline%20Collab.pdf]\n\nA great quote from Brooklyn:\n\n> We're trying to make IPFS boring!\nMeaning: it should just work, and be reliable, and provide great capabilities to\ndevelopers and app users alike.\n\nThe two key links from follow up are:\n\n * Leveraging ws://localhost provided by local IPFS node \n   https://github.com/ipfs/in-web-browsers/issues/177\n * Manifest file for IPFS gateway https://github.com/ipfs/go-ipfs/issues/6214\n\nThanks for inviting us to present!\n\n\n--------------------------------------------------------------------------------\n\nSubscribe to be notified of future events Fission is hosting or presenting at »\n[https://lu.ma/fission]","html":"<p>We presented Fission's approach to local first apps on IPFS with the Fission publishing platform and webnative SDK.</p><p>Our guiding principle for using IPFS is: Everything should work in the browser, including on mobile, with no extensions required.</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://s3.fission.codes/2021/03/Screen-Shot-2021-03-10-at-11.17.42-PM.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><p>The Special Interest Group (SIG) focused on IPFS and local offline collaboration has its <a href=\"https://github.com/ipfs/local-offline-collab/\">home base on Github</a>, which you can follow for updates and future meetings. </p><!--kg-card-begin: embed--><figure class=\"kg-card kg-embed-card\"><iframe width=\"200\" height=\"113\" src=\"https://www.youtube.com/embed/0zUg20816hU?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></figure><!--kg-card-end: embed--><p>The slides are <a href=\"https://ipfs.runfission.com/ipfs/bafybeigr4crq5fe5kwump3pp3a2z74udgsgwum2yxb6cfwfntzez7rs4hu/p/2021-03-10%20IPFS%20Local%20Offline%20Collab.pdf\">available on IPFS of course »</a></p><p>A great quote from Brooklyn:</p><blockquote>We're trying to make IPFS boring!</blockquote><p>Meaning: it should just work, and be reliable, and provide great capabilities to developers and app users alike.</p><p>The two key links from follow up are:</p><ul><li>Leveraging ws://localhost provided by local IPFS node <a href=\"https://github.com/ipfs/in-web-browsers/issues/177\">https://github.com/ipfs/in-web-browsers/issues/177</a></li><li>Manifest file for IPFS gateway <a href=\"https://github.com/ipfs/go-ipfs/issues/6214\">https://github.com/ipfs/go-ipfs/issues/6214</a></li></ul><p>Thanks for inviting us to present!</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p><a href=\"https://lu.ma/fission\"><strong>Subscribe to be notified of future events Fission is hosting or presenting at »</strong></a></p>","url":"https://blog.fission.codes/ipfs-local-offline-collaboration-sig/","canonical_url":null,"uuid":"bf9daf16-d543-4ac3-bb2c-89508654c2ce","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"6049c1d0c695c4001e8c7e86","reading_time":null}},{"node":{"id":"Ghost__Post__604661ba187f09001ee65147","title":"Video: Cortex Tools for Action with Dylan Steck","slug":"video-tools-for-action-with-dylan-steck","featured":false,"feature_image":"https://s3.fission.codes/2021/03/undraw_data_processing_yrrv.png","excerpt":"This past Thursday we had the opportunity to hear from one of the industry’s youngest rising talents. Dylan Steck @Dylan_Steck  is the creator of Cortex, an organization whose mission is to create what he calls valuable Tools for Action. ","custom_excerpt":"This past Thursday we had the opportunity to hear from one of the industry’s youngest rising talents. Dylan Steck @Dylan_Steck  is the creator of Cortex, an organization whose mission is to create what he calls valuable Tools for Action. ","created_at_pretty":"08 March, 2021","published_at_pretty":"08 March, 2021","updated_at_pretty":"08 March, 2021","created_at":"2021-03-08T09:41:14.000-08:00","published_at":"2021-03-08T10:39:55.000-08:00","updated_at":"2021-03-08T10:39:55.000-08:00","meta_title":"Fission Event Video: Cortex Tools for Action with Dylan Steck","meta_description":"Dylan Steck is the creator of Cortex, an organization whose mission is creating what he calls valuable Tools for Action.","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"},{"name":"Courtney Hall","slug":"courtney","bio":"I'm a content writer and marketer in Charlotte, NC.","profile_image":"https://s3.fission.codes/2021/02/me.jpg","twitter":"@contentcourtney","facebook":null,"website":null}],"primary_author":{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"},"primary_tag":{"name":"Presentations","slug":"presentation","description":null,"feature_image":"https://images.unsplash.com/photo-1535016120720-40c646be5580?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","meta_description":null,"meta_title":null},"tags":[{"name":"Presentations","slug":"presentation","description":null,"feature_image":"https://images.unsplash.com/photo-1535016120720-40c646be5580?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","meta_description":null,"meta_title":null},{"name":"productivity","slug":"productivity","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"tools for thought","slug":"tools-for-thought","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"tools for action","slug":"tools-for-action","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Cortex","slug":"cortex","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"This past Thursday March 4th we had the opportunity to hear from one of the\nindustry’s youngest rising talents. Dylan Steck @Dylan_Steck\n[https://twitter.com/Dylan_Steck]  is the creator of Cortex\n[https://t.co/hOwfaKQ8oV?amp=1], an organization whose mission is creating what\nhe calls valuable Tools for Action\n[https://uxdesign.cc/tools-for-action-6475cf3343f1].\n\nWhat are \"Tools for Action\"?\nTools for Action are implementations designed with the goal of helping people\norganize their thoughts, and ultimately their actions, in the same way a \"Tool\nfor Thought\" does. Recently, we wrote about Zettelkasten\n[https://blog.fission.codes/zettelkasten-method-and-digital-notetaking/], the\nTool for Thought conceived by a prolific German academic that's been embraced by\nRoam Research enthusiasts (often dubbed the #RoamCult).\n\nDylan wants to take these existing Tools for Thought and build upon them to\ncreate new and effective action-oriented tools. A key part of Cortex’s mission\nis to prioritize the repurposing of existing tools. From the Cortex website:\n\n> Cortex is a value-based technology organization. We want to reassemble tools to\ndemocratize knowledge and creation. All of the work that we do is led by a\nguiding thesis:  we can re-purpose pre-existing tools to solve the easiest\nproblems without starting from scratch.\nBetween his interest in supporting portable and secure user data across the\ninternet as well as empowering users to create without being encumbered by the\nburden of starting-from-scratch, Dylan is a natural friend of the Fission\ncommunity. \n\nWatch the video\nCheck out the video below where we hear from Dylan and get to see and hear what\nhe’s working on first hand. There’s also a lively discussion after Dylan’s\npresentation where many members of the community chimed in on Dylan’s work and\nthe future of Tools for Action. \n\nAlso be sure to stop by the Fission forum\n[https://talk.fission.codes/t/cortex-tools-for-action-by-dylan-steck/1499] \nwhere we have a thread dedicated to the event and Dylan’s work with Cortex.\n\nWeekly Fission Video Chats\nFission hosts weekly video chats with invited presenters. View the upcoming\nevents and register to join us » [https://lu.ma/fission]","html":"<p>This past Thursday March 4th we had the opportunity to hear from one of the industry’s youngest rising talents. Dylan Steck <a href=\"https://twitter.com/Dylan_Steck\">@Dylan_Steck </a> is the creator of <a href=\"https://t.co/hOwfaKQ8oV?amp=1\">Cortex</a>, an organization whose mission is creating what he calls valuable <a href=\"https://uxdesign.cc/tools-for-action-6475cf3343f1\">Tools for Action</a>.</p><h3 id=\"what-are-tools-for-action\">What are \"Tools for Action\"?</h3><p>Tools for Action are implementations designed with the goal of helping people organize their thoughts, and ultimately their actions, in the same way a \"Tool for Thought\" does. Recently, we wrote about <a href=\"https://blog.fission.codes/zettelkasten-method-and-digital-notetaking/\">Zettelkasten</a>, the Tool for Thought conceived by a prolific German academic that's been embraced by Roam Research enthusiasts (often dubbed the #RoamCult).</p><p>Dylan wants to take these existing Tools for Thought and build upon them to create new and effective action-oriented tools. A key part of Cortex’s mission is to prioritize the repurposing of existing tools. From the Cortex website:</p><blockquote><em>Cortex is a value-based technology organization. We want to reassemble tools to democratize knowledge and creation. All of the work that we do is led by a guiding thesis:<strong> we can re-purpose pre-existing tools to solve the easiest problems without starting from scratch.</strong></em></blockquote><p>Between his interest in supporting portable and secure user data across the internet as well as empowering users to create without being encumbered by the burden of starting-from-scratch, Dylan is a natural friend of the Fission community. </p><h2 id=\"watch-the-video\">Watch the video</h2><p>Check out the video below where we hear from Dylan and get to see and hear what he’s working on first hand. There’s also a lively discussion after Dylan’s presentation where many members of the community chimed in on Dylan’s work and the future of Tools for Action. </p><!--kg-card-begin: embed--><figure class=\"kg-card kg-embed-card\"><iframe src=\"https://player.vimeo.com/video/520260254?app_id=122963\" width=\"640\" height=\"270\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen title=\"Cortex: Tools for Action, by Dylan Steck\"></iframe></figure><!--kg-card-end: embed--><p>Also be sure to stop by the <a href=\"https://talk.fission.codes/t/cortex-tools-for-action-by-dylan-steck/1499\">Fission forum</a> where we have a thread dedicated to the event and Dylan’s work with Cortex.</p><h3 id=\"weekly-fission-video-chats\">Weekly Fission Video Chats</h3><p>Fission hosts weekly video chats with invited presenters. <a href=\"https://lu.ma/fission\">View the upcoming events and register to join us »</a></p><p></p>","url":"https://blog.fission.codes/video-tools-for-action-with-dylan-steck/","canonical_url":"https://blog.fission.codes/video-tools-for-action-with-dylan-steck/","uuid":"5f1d9803-6c69-4b30-962a-c616ad32ca8a","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"604661ba187f09001ee65147","reading_time":null}},{"node":{"id":"Ghost__Post__60390451d064ac001e8042de","title":"Zero-Config Fission-Powered Ghost Blog","slug":"fission-powered-ghost-blog-starter","featured":false,"feature_image":"https://s3.fission.codes/2021/03/dawit-sCKjl0AyO-4-unsplash.jpg","excerpt":"In five minutes, anyone can have a Ghost blog up and running, with media uploads hosted on IPFS thanks to Fission.","custom_excerpt":"In five minutes, anyone can have a Ghost blog up and running, with media uploads hosted on IPFS thanks to Fission.","created_at_pretty":"26 February, 2021","published_at_pretty":"08 March, 2021","updated_at_pretty":"08 March, 2021","created_at":"2021-02-26T06:23:13.000-08:00","published_at":"2021-03-08T09:09:17.000-08:00","updated_at":"2021-03-08T09:09:16.000-08:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Helder S Ribeiro","slug":"agentofuser","bio":"Deleting the chasm between using and programming computers.","profile_image":"https://s3.fission.codes/2021/02/2020-1024px.jpg","twitter":"@agentofuser","facebook":null,"website":"https://agentofuser.com"}],"primary_author":{"name":"Helder S Ribeiro","slug":"agentofuser","bio":"Deleting the chasm between using and programming computers.","profile_image":"https://s3.fission.codes/2021/02/2020-1024px.jpg","twitter":"@agentofuser","facebook":null,"website":"https://agentofuser.com"},"primary_tag":{"name":"Headless CMS","slug":"headless-cms","description":null,"feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"Headless CMS","slug":"headless-cms","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Headless Ghost","slug":"headless-ghost","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Heroku","slug":"heroku","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Ghost","slug":"ghost-tag","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"IPFS","slug":"ipfs","description":"InterPlanetary File System","feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"In five minutes, anyone can have a Ghost blog up and running, with media uploads\nhosted on IPFS thanks to Fission.\n\n\n\nThinking of starting a Ghost blog but leaning towards \"nah, too much work\"?\n\nHere's how you do it with Fission's Ghost Blog Starter\n[https://github.com/fission-suite/heroku-ipfs-ghost]: click a button, choose a\nURL, watch a couple of spinners do their thing, and voilà: a production-ready\nGhost blog instance is live on Heroku in less than 5 minutes.\n\nBest of all? Image and video uploads—which aren't supported by default on Heroku\ndue to its read-only filesystem—are built-in and work seamlessly. The Fission\nHeroku Add-on [https://elements.heroku.com/addons/interplanetary-fission]  takes\ncare of everything without intervention, creating a new Fission account for your\nblog, handling media uploads, and serving those assets for you on HTTPS and on\nthe peer-to-peer IPFS network.\n\nGoing Headless\nGhost is a great platform for authors, with almost a decade of accumulated\nimprovements in user experience.\n\nOne shortcoming though is that it doesn't scale beyond a single server:\n\n> Ghost doesn’t support load-balanced clustering or multi-server setups of any\ndescription, there should only be one  Ghost instance per site.\n— Ghost documentation\n[https://ghost.org/docs/faq/clustering-sharding-multi-server/]\nCaching pages and serving them via a content delivery network  (CDN) is one way\nto mitigate this. But if content has to be turned into static files and served\nfrom the edge anyway, why not go a step further and decouple Ghost, the\nauthoring interface, from the code that generates those files based on the\ncontent?\n\nThat's the Headless CMS  approach, where a static site generator\n[https://jamstack.org/generators/]  pulls the content from the content\nmanagement system and builds the pages that can be served super-fast at scale at\nthe edge. This opens up the possibility to tap into a rich ecosystem of frontend\ndevelopment tools and components (like React and others) for a much richer\ncontent experience, along with security and performance benefits.\n\nOn a previous post, we described how we're moving our own blog to a Headless\nGhost + Next.js [https://blog.fission.codes/headless-ghost-blog-fission/] \nsetup. This allows us not only to make the best out of what the frontend can do,\nbut also to showcase how Fission enables personalization at the edge, something\nthat used to be possible only with dynamically-rendered server-hosted websites.\n\nBy using our Ghost blog starter\n[https://github.com/fission-suite/heroku-ipfs-ghost], you can try this setup for\nyourself and follow along as we continue to share tools, process, and lessons on\nour own path to a webnative publishing experience.","html":"<p>In five minutes, anyone can have a Ghost blog up and running, with media uploads hosted on IPFS thanks to Fission.</p><!--kg-card-begin: markdown--><p><img src=\"https://demos.fission.app/fission-heroku-ipfs-ghost-2x.gif\" alt=\"demo of fission's ghost starter deploying to heroku\"></p>\n<!--kg-card-end: markdown--><p>Thinking of starting a Ghost blog but leaning towards \"nah, too much work\"?</p><p>Here's how you do it with <a href=\"https://github.com/fission-suite/heroku-ipfs-ghost\">Fission's Ghost Blog Starter</a>: click a button, choose a URL, watch a couple of spinners do their thing, and <em>voilà</em>: a production-ready Ghost blog instance is live on Heroku in less than 5 minutes.</p><p>Best of all? Image and video uploads—which aren't supported by default on Heroku due to its read-only filesystem—are built-in and work seamlessly. The <a href=\"https://elements.heroku.com/addons/interplanetary-fission\">Fission Heroku Add-on</a> takes care of everything without intervention, creating a new Fission account for your blog, handling media uploads, and serving those assets for you on HTTPS and on the peer-to-peer IPFS network.</p><h3 id=\"going-headless\">Going Headless</h3><p>Ghost is a great platform for authors, with almost a decade of accumulated improvements in user experience.</p><p>One shortcoming though is that it doesn't scale beyond a single server:</p><blockquote>Ghost doesn’t support load-balanced clustering or multi-server setups of any description, there should only be <em><strong>one</strong></em> Ghost instance per site.<br>— <a href=\"https://ghost.org/docs/faq/clustering-sharding-multi-server/\">Ghost documentation</a></blockquote><p>Caching pages and serving them via a <em>content delivery network</em> (CDN) is one way to mitigate this. But if content has to be turned into static files and served from the edge anyway, why not go a step further and decouple Ghost, the authoring interface, from the code that generates those files based on the content?</p><p>That's the <strong>Headless CMS</strong> approach, where a <a href=\"https://jamstack.org/generators/\">static site generator</a> pulls the content from the content management system and builds the pages that can be served super-fast at scale at the edge. This opens up the possibility to tap into a rich ecosystem of frontend development tools and components (like React and others) for a much richer content experience, along with security and performance benefits.</p><p>On a previous post, we described how we're moving our own blog to a <a href=\"https://blog.fission.codes/headless-ghost-blog-fission/\">Headless Ghost + Next.js</a> setup. This allows us not only to make the best out of what the frontend can do, but also to showcase how Fission enables personalization at the edge, something that used to be possible only with dynamically-rendered server-hosted websites.</p><p>By using our <a href=\"https://github.com/fission-suite/heroku-ipfs-ghost\">Ghost blog starter</a>, you can try this setup for yourself and follow along as we continue to share tools, process, and lessons on our own path to a webnative publishing experience.</p>","url":"https://blog.fission.codes/fission-powered-ghost-blog-starter/","canonical_url":null,"uuid":"d60a1fa2-0ae9-48f5-aa0e-c3755d66116d","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"60390451d064ac001e8042de","reading_time":null}},{"node":{"id":"Ghost__Post__603d33819ae96d001e956b16","title":"The Zettelkasten Method & Digital Note-taking","slug":"zettelkasten-method-and-digital-notetaking","featured":false,"feature_image":"https://s3.fission.codes/2021/03/david-travis-5bYxXawHOQg-unsplash.jpg","excerpt":"What does a prolific 20th-century German scholar have to do with digital note-taking? Turns out quite a bit. We're looking at the note-taking system known as \"Zettlekasten,\" and how you can use Fission and TiddlyWiki to create your own version. ","custom_excerpt":"What does a prolific 20th-century German scholar have to do with digital note-taking? Turns out quite a bit. We're looking at the note-taking system known as \"Zettlekasten,\" and how you can use Fission and TiddlyWiki to create your own version. ","created_at_pretty":"01 March, 2021","published_at_pretty":"02 March, 2021","updated_at_pretty":"02 March, 2021","created_at":"2021-03-01T10:33:37.000-08:00","published_at":"2021-03-02T08:04:09.000-08:00","updated_at":"2021-03-02T10:28:28.000-08:00","meta_title":"Zettelkasten Method, Fission and TiddlyWiki","meta_description":"We're looking at the note-taking system known as \"Zettlekasten,\" and how you can use Fission and TiddlyWiki to create your own version. ","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Courtney Hall","slug":"courtney","bio":"I'm a content writer and marketer in Charlotte, NC.","profile_image":"https://s3.fission.codes/2021/02/me.jpg","twitter":"@contentcourtney","facebook":null,"website":null},{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"}],"primary_author":{"name":"Courtney Hall","slug":"courtney","bio":"I'm a content writer and marketer in Charlotte, NC.","profile_image":"https://s3.fission.codes/2021/02/me.jpg","twitter":"@contentcourtney","facebook":null,"website":null},"primary_tag":{"name":"TiddlyWiki","slug":"tiddlywiki","description":null,"feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"TiddlyWiki","slug":"tiddlywiki","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"app","slug":"app-tag","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"productivity","slug":"productivity","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"encryption","slug":"encryption","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"FISSION","slug":"fission","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"open source","slug":"open-source","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"web native","slug":"web-native","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"What does a prolific 20th-century German scholar have to do with digital\nnote-taking? Turns out quite a bit. We're looking at the note-taking system\nknown as \"Zettlekasten,\" and how you can use Fission and TiddlyWiki\n[https://blog.fission.codes/announcing-tiddlywiki-on-fission/]to create your own\nversion. \n\n\n--------------------------------------------------------------------------------\n\nThis is Niklas Luhmann. Niklas was a prolific scholar and writer--he wrote and\npublished more than 70 books and more than 400 scholarly articles.\n\nThis is Niklas LuhmannNiklas Luhmann was such an intellectually productive\nbadass because of the relatively ingenious yet straightforward note-taking\nmethod he developed known as “Zettelkasten.” Like so many other German words,\nZettelkasten as a word is both literal and perfectly descriptive. “Zettel” means\nslip or note, and “kasten” means box. In essence, the Zettelkasten method is\nabout creating a box (or any storage receptacle) in which to keep notes.\n\nHow Zettelkasten works\nTo use the Zettelkasten method, you only need three simple things:\n\n * A way to take notes\n * A system with bidirectional linking\n * A collection of tags\n\nThat’s it! But now, let’s break down each piece a little bit.\n\nA note-taking system\nLuhmann was old school--he owned no computers and used paper, pens, and a\ntypewriter for most of his impressive writing career. He didn’t even type very\nquickly--he used the hunt and peck method.\n\nIn fact, his Zettelkasten was literally a box of notes in the form of a piece of\nfurniture--sort of like a card catalog.\n\nNot Luhmann's Zettelkasten, but you get the idea\n\nWhile Luhmann’s Zettelkasten was a piece of furniture stuffed with slips of\npaper, today, the concept translates very well to any of the many digital\nnote-taking systems available. Web apps like Evernote, Notion, and Google Keep\noffer free or low-cost ways to take notes on desktop or mobile devices.\nTiddlyWiki is also a great option because of it’s bidirectional linking power,\nwhich is the next crucial ingredient of a Zettelkasten.\n\nA system with bidirectional linking\nSo what is bidirectional linking? It’s exactly what it sounds like--the ability\nto connect ideas back and forth to each other in more than one direction. One\npopular option of a program with this capability is the paid product Roam\nResearch; however, TiddlyWiki offers bidirectional linking function in its free,\nopen-source program.\n\nA collection of tags\nThe last component of a Zettelkasten is a collection of tags, or labels, for\nyour thoughts/entries. We’re used to seeing tags used frequently with blog posts\nor online articles. On the Fission blog, we use categories like security, apps,\nopen-source, or headless to help readers find relevant content. Categorizing\nyour ideas with different tags allows you to find relevant information in a\nnote-taking system quickly. And because one idea may have more than one tag, you\ncan easily find the relevant idea from any number of search terms.\n\nUsing TiddlyWiki for Zettelkasten\nThe great thing about TiddlyWiki is that it gives us the three things we need to\nuse the Zettelkasten system.\n\n 1. A note-taking method.\n 2. Bidirectional linking\n 3. A system of Tags\n\nTiddlyWiki offers a note-taking method with its simple interface with entries\ncalled “Tiddlers.” A new Tiddler looks like this:\n\n\n\n\nTiddlers are simple to tag. In our example, I added three different tags--open\nsource, super rad ideas, and TiddlyWiki:\n\n\n\nLet’s create a second note. This one is titled “Even New Tiddler.” And for this\none, I only added one tag--Super rad ideas:\n\n\n\n\nNow, if you search for Tiddlers with the tag “Super rad ideas,” both of our\nTiddlers come up in the search results:\n\n\n\nTiddlyWiki and Fission\nAs you can see, TiddlyWiki provides a simple and effective way to organize your\nnotes using the Zettelkasten method. And now that TiddlyWiki is building a\nversion of the TiddlyWiki app on the Fission platform, users will have a web\nnative option to share content across browsers and devices. You get all of the\nbenefits of TiddlyWiki’s open-source program for note-taking, tagging, and\nbidirectional linking, while Fission acts as a flexible container for your\nZettelkasten. And Fission’s strong encryption keeps your data secure and\nprotected.\n\nWe are working on this project out in the open. You can check out the \nTiddlyWiki\ngroup on the Fission forum [https://talk.fission.codes/c/apps/tiddlywiki/57]  to\nkeep track of this project. You can look for the launch of TiddlyWiki for\nFission later this spring!\n\nAlso, check out the Fission Discord\n[https://discord.com/channels/478735028319158273/478735028319158277], where we\nare having lots of exciting conversations with other devs about current projects\nand all things open source. We started a channel dedicated to the TiddlyWiki on\nFission experience, so be sure to drop by.","html":"<p>What does a prolific 20th-century German scholar have to do with digital note-taking? Turns out quite a bit. We're looking at the note-taking system known as \"Zettlekasten,\" and how you can use <a href=\"https://blog.fission.codes/announcing-tiddlywiki-on-fission/\">Fission and TiddlyWiki </a>to create your own version. </p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p>This is Niklas Luhmann. Niklas was a prolific scholar and writer--he wrote and published more than 70 books and more than 400 scholarly articles.</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://s3.fission.codes/2021/03/Screen-Shot-2021-03-01-at-1.01.30-PM.png\" class=\"kg-image\"><figcaption>This is Niklas Luhmann</figcaption></figure><!--kg-card-end: image--><p>Niklas Luhmann was such an intellectually productive badass because of the relatively ingenious yet straightforward note-taking method he developed known as “Zettelkasten.” Like so many other German words, Zettelkasten as a word is both literal and perfectly descriptive. “Zettel” means slip or note, and “kasten” means box. In essence, the Zettelkasten method is about creating a box (or any storage receptacle) in which to keep notes.</p><h2 id=\"how-zettelkasten-works\">How Zettelkasten works</h2><p>To use the Zettelkasten method, you only need three simple things:</p><ul><li>A way to take notes</li><li>A system with bidirectional linking</li><li>A collection of tags</li></ul><p>That’s it! But now, let’s break down each piece a little bit.</p><h3 id=\"a-note-taking-system\">A note-taking system</h3><p>Luhmann was old school--he owned no computers and used paper, pens, and a typewriter for most of his impressive writing career. He didn’t even type very quickly--he used the hunt and peck method.</p><p>In fact, his Zettelkasten was literally a box of notes in the form of a piece of furniture--sort of like a card catalog.</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://s3.fission.codes/2021/03/Screen-Shot-2021-03-01-at-1.40.56-PM.png\" class=\"kg-image\"><figcaption>Not Luhmann's Zettelkasten, but you get the idea</figcaption></figure><!--kg-card-end: image--><p></p><p>While Luhmann’s Zettelkasten was a piece of furniture stuffed with slips of paper, today, the concept translates very well to any of the many digital note-taking systems available. Web apps like Evernote, Notion, and Google Keep offer free or low-cost ways to take notes on desktop or mobile devices. TiddlyWiki is also a great option because of it’s bidirectional linking power, which is the next crucial ingredient of a Zettelkasten.</p><h3 id=\"a-system-with-bidirectional-linking\">A system with bidirectional linking</h3><p>So what is bidirectional linking? It’s exactly what it sounds like--the ability to connect ideas back and forth to each other in more than one direction. One popular option of a program with this capability is the paid product Roam Research; however, TiddlyWiki offers bidirectional linking function in its free, open-source program.</p><h3 id=\"a-collection-of-tags\">A collection of tags</h3><p>The last component of a Zettelkasten is a collection of tags, or labels, for your thoughts/entries. We’re used to seeing tags used frequently with blog posts or online articles. On the Fission blog, we use categories like security, apps, open-source, or headless to help readers find relevant content. Categorizing your ideas with different tags allows you to find relevant information in a note-taking system quickly. And because one idea may have more than one tag, you can easily find the relevant idea from any number of search terms.</p><h2 id=\"using-tiddlywiki-for-zettelkasten\">Using TiddlyWiki for Zettelkasten</h2><p>The great thing about TiddlyWiki is that it gives us the three things we need to use the Zettelkasten system.</p><ol><li>A note-taking method.</li><li>Bidirectional linking</li><li>A system of Tags</li></ol><p>TiddlyWiki offers a note-taking method with its simple interface with entries called “Tiddlers.” A new Tiddler looks like this:</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://s3.fission.codes/2021/03/1.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><p><br></p><p>Tiddlers are simple to tag. In our example, I added three different tags--open source, super rad ideas, and TiddlyWiki:</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://s3.fission.codes/2021/03/2.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><p></p><p>Let’s create a second note. This one is titled “Even New Tiddler.” And for this one, I only added one tag--Super rad ideas:</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://s3.fission.codes/2021/03/3.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><p><br></p><p>Now, if you search for Tiddlers with the tag “Super rad ideas,” both of our Tiddlers come up in the search results:</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://s3.fission.codes/2021/03/4.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><p></p><h2 id=\"tiddlywiki-and-fission\">TiddlyWiki and Fission</h2><p>As you can see, TiddlyWiki provides a simple and effective way to organize your notes using the Zettelkasten method. And now that TiddlyWiki is building a version of the TiddlyWiki app on the Fission platform, users will have a web native option to share content across browsers and devices. You get all of the benefits of TiddlyWiki’s open-source program for note-taking, tagging, and bidirectional linking, while Fission acts as a flexible container for your Zettelkasten. And Fission’s strong encryption keeps your data secure and protected.</p><p>We are working on this project out in the open. You can check out the <a href=\"https://talk.fission.codes/c/apps/tiddlywiki/57\">TiddlyWiki group on the Fission forum</a> to keep track of this project. You can look for the launch of TiddlyWiki for Fission later this spring!</p><p>Also, check out the <a href=\"https://discord.com/channels/478735028319158273/478735028319158277\">Fission Discord</a>, where we are having lots of exciting conversations with other devs about current projects and all things open source. We started a channel dedicated to the TiddlyWiki on Fission experience, so be sure to drop by.</p>","url":"https://blog.fission.codes/zettelkasten-method-and-digital-notetaking/","canonical_url":null,"uuid":"36d2be05-b515-48fd-8648-3662c15b0732","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"603d33819ae96d001e956b16","reading_time":null}},{"node":{"id":"Ghost__Post__6035bdcda61312001e534228","title":"The Price Associated With Free Applications","slug":"the-price-associated-with-free-applications","featured":false,"feature_image":"https://s3.fission.codes/2021/02/1.png","excerpt":"in a world filled with social media, apps and games on our phones, we often expect everything to be free--but what is the hidden cost to you? ","custom_excerpt":"in a world filled with social media, apps and games on our phones, we often expect everything to be free--but what is the hidden cost to you? ","created_at_pretty":"24 February, 2021","published_at_pretty":"24 February, 2021","updated_at_pretty":"24 February, 2021","created_at":"2021-02-23T18:45:33.000-08:00","published_at":"2021-02-24T09:45:24.000-08:00","updated_at":"2021-02-24T09:45:24.000-08:00","meta_title":"Why You Should Pay For Apps and How It Can Protect Your Personal Data.","meta_description":"in a world filled with social media, apps and games on our phones, we often expect everything to be free--but what is the hidden cost to you? \n","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Jennie D. Leaver","slug":"jennie","bio":"Jennie is a content creator and designer with 10+ years of experience. She specializes in multimedia, writing and design and currently works remotely from Ottawa, Canada.  ","profile_image":"https://s3.fission.codes/2021/02/professional.jennie.square.jpg","twitter":null,"facebook":null,"website":"https://jennieleaver.ca/"}],"primary_author":{"name":"Jennie D. Leaver","slug":"jennie","bio":"Jennie is a content creator and designer with 10+ years of experience. She specializes in multimedia, writing and design and currently works remotely from Ottawa, Canada.  ","profile_image":"https://s3.fission.codes/2021/02/professional.jennie.square.jpg","twitter":null,"facebook":null,"website":"https://jennieleaver.ca/"},"primary_tag":{"name":"Security","slug":"security","description":null,"feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"Security","slug":"security","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Privacy","slug":"privacy","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"app","slug":"app-tag","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"personal identifying information","slug":"personal-identifying-information","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"FISSION","slug":"fission","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"Why You Should Pay For Apps and How It Can Protect Your Personal Data.\n\nIt’s “Free!” That’s Amazing! Who doesn’t love something that comes with no cost?\nFor small businesses, hobbyists, startups and everyday people, I think it’s fair\nto say we all get excited when we hear this. In fact, in a world filled with\nsocial media, apps and games on our phones, perhaps we even expect it--but what\nis the hidden cost to you? \n\nIf you have seen The Social Dilemma [https://www.thesocialdilemma.com/]  then\nyou might be familiar with this quote:\n“If you’re not paying for the product, then you are the product” — Daniel\nHövermann\n\nThe hard fact here is that these “free” apps (ad-supported products) profit from\ncollecting your data. They also make money from your attention through your\nclicks, likes and screen time. The real product for sale in all of these cases\nis your attention and subsequent interactions while logged in.\n\nHere’s a simple example of how you become the product: In advertising-supported\nproducts, ads are presented to you.  These advertisements are curated based on\ncookies you agree to in your web browser as well as other behaviours you exhibit\nwithin the app itself.\n\nLet’s break this down a bit more. You’re scrolling Facebook when you see a\n“post” for something you were recently shopping for online. This is called an\nimpression and the app/platform gets paid by the advertiser simply for it coming\ninto your view. Now say you click on that ad. Facebook receives another payment\nfor your behaviour, in this instance for your click. This might sound familiar\ngiven what we all know about Facebook, but this kind of advertising is rampant\nin our world. A recent article from the website MLSDev states that currently, “7\nout of 10 apps contain embedded advertisements”. This seems innocent at first\nglance, but who can advertise on these platforms is largely unregulated and\nmonitored primarily by algorithms. Algorithms that many people--including those\nwho work at these companies-- don’t completely understand.\n\nUsing ads to provide free apps for users means that these companies are\ncollecting information about you. This information is collected via your\nbehaviour, views, and interactions. Then, this harvested information is used to\ninfer demographic information about you. This includes but is not limited to\nwhere you live, your age, if you have kids etc. All of this is made available\nsimply from behaviours you exhibit online. \n\nAt Fission, we are on a mission to normalize the payment of apps for this very\nreason and believe that a movement towards paying for apps, even at nominal\nrates, would bring about greater protection for you, the user. \n\nWhat happens when you pay for your app:\n\n 1. Your data becomes more secure and we begin to move towards a more ethical\n    and humane technological future.\n 2. Your behaviour and attention are not propagated and sold.\n 3. Your privacy is more protected because the profitability of the application\n    you are using is not contingent on your screen time/attention and personal\n    information for targeted advertisements.\n 4. Charging for apps can improve the standard of living for app developers\n    outside of North America and Western Europe.\n    a. Example: You publish an app and promote it, developing a user base of \t\t\n       500 users. If those 500 users pay $50 for that app, we’re talking about a\n    \t\t    $25,000 USD salary for that developer. Pretty substantial for an \t\t\t\t\n           independent developer in most parts of the world, especially in\n    developing \t    countries\n 5. Payment places value on the work. In an article from Derek Sivers,\n    “Psychology experiments have shown that the more people pay for something,\n    the more they value it.”\n 6. Developers should be paid ethically without distributing their user’s data\n    for financial gain to largely unregulated advertisers.\n\nLet’s think about this. Would you be comfortable telling a stranger you met on\nthe street, where you live, how many kids you have, where you went to high\nschool, if you’re married or not? We readily volunteer this information online\nevery day using ad-supported apps, like social media, productivity apps and\ngames. Sounds insane right? \n\nThe future is not as abysmal as it might seem. While technology is bound to\nproliferate there are ways to prevent this dark picture above. The first step of\nmany is to pay for the applications and software you use. \n\nAt Fission this is a driving focus for us. We believe in the protection and\nprivacy of our users is essential--That’s why we feel so strongly about our\nmission. By supporting a movement for normalizing the payment of apps, we aim to\nbe part of the solution. We encrypt the data of every end-user--while giving\ndevelopers the tools to build great apps, and eventually include the ability to\neasily charge for them.\n\nFor end-users wanting to try out some of these apps, you can start by logging\ninto Fission’s Drive app [https://drive.fission.codes]. It’s free for small\namounts of data, and you can pay for a premium account on Open Collective\n[https://opencollective.com/fissiondrive], which helps us build more apps and\ntools for developers.\n\nFor developers, check out some of the App ideas in the forum\n[https://talk.fission.codes/c/apps/11/none], or start with the dev guide\n[https://guide.fission.codes]  to build an app of your own.\n\nReferences\n\nThe Social Dilemma. Jeff Orlowski. Tristan Harris, Jeff Seibert, Justin\nRosenstein, Tim Kendall. Netflix, 2020. Film  \n\nCatherine Han, Irwin Reyes.  “Do You Get What You Pay For? Comparing The Privacy\nBehaviours of Free vs Paid Apps”  UC Berkeley, International Computer Science\nInstitute. University of Calgary, IMDEA Networks Institute, Universidad Carolos\nde Madrid. 2017\n\nMLSDev. (2021) How Do Free Apps Make Money?\nRetrieved from: https://mlsdev.com/blog/how-do-free-apps-make-money\n\nDerek Sivers.  (2018) The Higher The Price, The More They Value It.\nRetrieved from: \nhttps://sive.rs/morepay#:~:text=Psychology%20experiments%20have%20shown%20that,the%20more%20they%20value%20it.&text=When%20people%20want%20the%20best,the%20expensive%20wine%20tastes%20better.\n[https://sive.rs/morepay#:~:text=Psychology%20experiments%20have%20shown%20that,the%20more%20they%20value%20it.&text=When%20people%20want%20the%20best,the%20expensive%20wine%20tastes%20better.]\n\nSpace O Technologies. (2021) How Do Free Apps Make Money\nRetrieved from: https://www.spaceotechnologies.com/how-do-free-apps-make-money/","html":"<p><strong><em>Why You Should Pay For Apps and How It Can Protect Your Personal Data.</em></strong></p><p>It’s “Free!” That’s Amazing! Who doesn’t love something that comes with no cost? For small businesses, hobbyists, startups and everyday people, I think it’s fair to say we all get excited when we hear this. In fact, in a world filled with social media, apps and games on our phones, perhaps we even expect it--but what is the hidden cost to you? </p><p>If you have seen <a href=\"https://www.thesocialdilemma.com/\"><strong>The Social Dilemma</strong></a> then you might be familiar with this quote:<br>“If you’re not paying for the product, then you are the product” — Daniel Hövermann</p><p>The hard fact here is that these “free” apps (ad-supported products) profit from collecting your data. They also make money from your attention through your clicks, likes and screen time. The real product for sale in all of these cases is your attention and subsequent interactions while logged in.</p><p>Here’s a simple example of how you become the product: In advertising-supported products, ads are presented to you.  These advertisements are curated based on cookies you agree to in your web browser as well as other behaviours you exhibit within the app itself.  </p><p>Let’s break this down a bit more. You’re scrolling Facebook when you see a “post” for something you were recently shopping for online. This is called an impression and the app/platform gets paid by the advertiser simply for it coming into your view. Now say you click on that ad. Facebook receives another payment for your behaviour, in this instance for your click. This might sound familiar given what we all know about Facebook, but this kind of advertising is rampant in our world. A recent article from the website MLSDev states that currently, “7 out of 10 apps contain embedded advertisements”. This seems innocent at first glance, but who can advertise on these platforms is largely unregulated and monitored primarily by algorithms. Algorithms that many people--including those who work at these companies-- don’t completely understand.</p><p>Using ads to provide free apps for users means that these companies are collecting information about you. This information is collected via your behaviour, views, and interactions. Then, this harvested information is used to infer demographic information about you. This includes but is not limited to where you live, your age, if you have kids etc. All of this is made available simply from behaviours you exhibit online. </p><p>At Fission, we are on a mission to normalize the payment of apps for this very reason and believe that a movement towards paying for apps, even at nominal rates, would bring about greater protection for you, the user. </p><p><strong>What happens when you pay for your app:</strong></p><ol><li>Your data becomes more secure and we begin to move towards a more ethical and humane technological future.</li><li>Your behaviour and attention are not propagated and sold.</li><li>Your privacy is more protected because the profitability of the application you are using is not contingent on your screen time/attention and personal information for targeted advertisements.</li><li>Charging for apps can improve the standard of living for app developers outside of North America and Western Europe.<br><em>a. Example: You publish an app and promote it, developing a user base of \t\t    500 users. If those 500 users pay $50 for that app, we’re talking about a \t\t    $25,000 USD salary for that developer. Pretty substantial for an \t\t\t\t        independent developer in most parts of the world, especially in developing \t    countries</em></li><li>Payment places value on the work. In an article from Derek Sivers, “Psychology experiments have shown that the more people pay for something, the more they value it.”</li><li>Developers should be paid ethically without distributing their user’s data for financial gain to largely unregulated advertisers.</li></ol><p>Let’s think about this. Would you be comfortable telling a stranger you met on the street, where you live, how many kids you have, where you went to high school, if you’re married or not? We readily volunteer this information online every day using ad-supported apps, like social media, productivity apps and games. Sounds insane right? </p><p>The future is not as abysmal as it might seem. While technology is bound to proliferate there are ways to prevent this dark picture above. The first step of many is to pay for the applications and software you use. </p><p>At Fission this is a driving focus for us. We believe in the protection and privacy of our users is essential--That’s why we feel so strongly about our mission. By supporting a movement for normalizing the payment of apps, we aim to be part of the solution. We encrypt the data of every end-user--while giving developers the tools to build great apps, and eventually include the ability to easily charge for them.</p><p>For end-users wanting to try out some of these apps, you can start by logging into <a href=\"https://drive.fission.codes\">Fission’s Drive app</a>. It’s free for small amounts of data, and you can pay for a <a href=\"https://opencollective.com/fissiondrive\">premium account on Open Collective</a>, which helps us build more apps and tools for developers.</p><p>For developers, check out some of the <a href=\"https://talk.fission.codes/c/apps/11/none\">App ideas in the forum</a>, or start with the <a href=\"https://guide.fission.codes\">dev guide</a> to build an app of your own.</p><p><u>References</u><br><br><em>The Social Dilemma. </em><strong>Jeff Orlowski</strong>. Tristan Harris, Jeff Seibert, Justin Rosenstein, Tim Kendall. <strong>Netflix, 2020. Film</strong> </p><p>Catherine Han, Irwin Reyes.<em> “Do You Get What You Pay For? Comparing The Privacy Behaviours of Free vs Paid Apps”</em> UC Berkeley, International Computer Science Institute. University of Calgary, IMDEA Networks Institute, Universidad Carolos de Madrid. 2017</p><p>MLSDev. (2021) <em>How Do Free Apps Make Money?</em><br>Retrieved from: <a href=\"https://mlsdev.com/blog/how-do-free-apps-make-money\">https://mlsdev.com/blog/how-do-free-apps-make-money</a></p><p>Derek Sivers.  (2018) <em>The Higher The Price, The More They Value It.</em><br>Retrieved from: <a href=\"https://sive.rs/morepay#:~:text=Psychology%20experiments%20have%20shown%20that,the%20more%20they%20value%20it.&amp;text=When%20people%20want%20the%20best,the%20expensive%20wine%20tastes%20better.\">https://sive.rs/morepay#:~:text=Psychology%20experiments%20have%20shown%20that,the%20more%20they%20value%20it.&amp;text=When%20people%20want%20the%20best,the%20expensive%20wine%20tastes%20better.</a></p><p>Space O Technologies. (2021) <em>How Do Free Apps Make Money</em><br>Retrieved from: <a href=\"https://www.spaceotechnologies.com/how-do-free-apps-make-money/\">https://www.spaceotechnologies.com/how-do-free-apps-make-money/</a></p>","url":"https://blog.fission.codes/the-price-associated-with-free-applications/","canonical_url":null,"uuid":"25d55a7f-aeda-4f4b-bc9a-ef4ce4e6a21e","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"6035bdcda61312001e534228","reading_time":null}},{"node":{"id":"Ghost__Post__6033d1a3151ab1001ec3de6c","title":"Fission Demo Day February 2021","slug":"fission-demo-day-february-2021","featured":false,"feature_image":"https://s3.fission.codes/2021/02/Untitled-design--7-.png","excerpt":"We meet on the third-Thursday-of-the-month for \"Demo Days\" where the Fission team talks about new releases & product updates, early demos of in-progress work, planned roadmap items followed by an open Q&A. ","custom_excerpt":"We meet on the third-Thursday-of-the-month for \"Demo Days\" where the Fission team talks about new releases & product updates, early demos of in-progress work, planned roadmap items followed by an open Q&A. ","created_at_pretty":"22 February, 2021","published_at_pretty":"23 February, 2021","updated_at_pretty":"23 February, 2021","created_at":"2021-02-22T07:45:39.000-08:00","published_at":"2021-02-22T17:00:00.000-08:00","updated_at":"2021-02-22T22:26:40.000-08:00","meta_title":"Fission Demo Day February 20201","meta_description":"The Fission team talks about new releases & product updates, early demos of in-progress work, planned roadmap items followed by an open Q&A. ","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Courtney Hall","slug":"courtney","bio":"I'm a content writer and marketer in Charlotte, NC.","profile_image":"https://s3.fission.codes/2021/02/me.jpg","twitter":"@contentcourtney","facebook":null,"website":null},{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"}],"primary_author":{"name":"Courtney Hall","slug":"courtney","bio":"I'm a content writer and marketer in Charlotte, NC.","profile_image":"https://s3.fission.codes/2021/02/me.jpg","twitter":"@contentcourtney","facebook":null,"website":null},"primary_tag":{"name":"Fission Demo Day","slug":"fission-demo-day","description":null,"feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"Fission Demo Day","slug":"fission-demo-day","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"app","slug":"app-tag","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"TiddlyWiki","slug":"tiddlywiki","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Security","slug":"security","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Product","slug":"product","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Ghost","slug":"ghost-tag","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Headless Ghost","slug":"headless-ghost","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"IPFS","slug":"ipfs","description":"InterPlanetary File System","feature_image":null,"meta_description":null,"meta_title":null},{"name":"Heroku","slug":"heroku","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"open source","slug":"open-source","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"We meet on the third-Thursday-of-the-month for \"Demo Days\" where the Fission\nteam talks about new releases & product updates, early demos of in-progress\nwork, planned roadmap items followed by an open Q&A. We also invite the\ncommunity to come and give app demos. This week we invited Jeremy Rustin of the\nTiddlyWiki project to talk about his product and our plans to integrate\nFission’s Webnative SDK with TiddlyWiki. \n\nMeet the Team\nOur distributed team continues to grow with team members spanning from our HQ in\nVancouver across three continents. Our newest addition is Courtney in 🇺🇸 North\nCarolina, United States. \n\nCourtney (@Courtney [https://talk.fission.codes/u/courtney]) joins us as our\nMarketing Lead. This was her first week with Fission and her first demo day.\nLook for more blog posts and email updates from Courtney about what's going on\nwith Fission. \n\nFission and Headless Ghost\nFission teammate Helder (@agentofuser [https://talk.fission.codes/u/agentofuser]\n) shared his work with Headless Ghost and Fission. He showed us how to use the\nGhost CMS as a familiar editing interface for content producers and then pulling\nthe content into a Next.JS website via API. Then, the content is compiled into a\nstatic website using React and deployed to the Fission platform. Check out the\nvideo to hear the details of this process. \n\nFilecoin Backup App\nNext, we heard from Ben (@benjaminbollen\n[https://talk.fission.codes/u/benjaminbollen]) and Brian (@bgins\n[https://talk.fission.codes/u/bgins]) about their work with Filecoin. Filecoin\nis a blockchain specifically used for storing files online without relying on a\nthird-party platform or company. Because Fission is also interested in working\nin browsers very securely, we decided to work with the Filecoin team on this\nproject. Hear from Ben and Brian about their progress in the Fission Demo Day\nvideo. \n\nIPFS Cluster Updates\nDaniel (@dholms [https://talk.fission.codes/u/dholms]) talked to us about his\nupdates to the IPFS Cluster. Fission is built on an Interplanetary File System\n(or IPFS) which is a global peer-to-peer network. Fission builds encryption on\ntop of the IPFS stack, running IPFS servers to make sure that your data stays\nonline and accessible directly from the browser, all with your security in mind.\nDaniel shares with us some recent backend infrastructure work he's doing to\nimprove our system performance. \n\nTiddlywiki and Fission\nJeremy Rustin (@jermolene [https://twitter.com/Jermolene]) is the creator of\nTiddlywiki, a serverless web app that allows users to create a non-linear\nnotebook for recording, organizing and sharing complex information. We're\ncollaborating to build an app that will allow users to use TiddlyWiki on the\nFission platform. You can hear from Jeremy directly in the Demo Day video. We’ve\nalso been working out in the open in the TiddlyWiki group on the Fission forum\n[https://talk.fission.codes/c/apps/tiddlywiki/57]  so hop over there to see\nwhat's going on. \n\nVideo\nJoin us next time\nWe're experimenting with Luma [https://lu.ma/]  for registering for events.\nClick the button below to sign up for the Fission March 2021 Demo Day, or visit\nthe event page [https://lu.ma/fission-march-2021]  »\n\nRegister for Event [https://lu.ma/event/evt-pBdosunE2c0q5Rl]","html":"<p>We meet on the third-Thursday-of-the-month for \"Demo Days\" where the Fission team talks about new releases &amp; product updates, early demos of in-progress work, planned roadmap items followed by an open Q&amp;A. We also invite the community to come and give app demos. This week we invited Jeremy Rustin of the TiddlyWiki project to talk about his product and our plans to integrate Fission’s Webnative SDK with TiddlyWiki. </p><h2 id=\"meet-the-team\">Meet the Team</h2><p>Our distributed team continues to grow with team members spanning from our HQ in Vancouver across three continents. Our newest addition is Courtney in 🇺🇸 North Carolina, United States. </p><p>Courtney (<a href=\"https://talk.fission.codes/u/courtney\">@Courtney</a>) joins us as our Marketing Lead. This was her first week with Fission and her first demo day. Look for more blog posts and email updates from Courtney about what's going on with Fission. </p><h2 id=\"fission-and-headless-ghost\">Fission and Headless Ghost</h2><p>Fission teammate Helder (<a href=\"https://talk.fission.codes/u/agentofuser\">@agentofuser</a>) shared his work with Headless Ghost and Fission. He showed us how to use the Ghost CMS as a familiar editing interface for content producers and then pulling the content into a Next.JS website via API. Then, the content is compiled into a static website using React and deployed to the Fission platform. Check out the video to hear the details of this process. </p><h2 id=\"filecoin-backup-app\">Filecoin Backup App</h2><p>Next, we heard from Ben (<a href=\"https://talk.fission.codes/u/benjaminbollen\">@benjaminbollen</a>) and Brian (<a href=\"https://talk.fission.codes/u/bgins\">@bgins</a>) about their work with Filecoin. Filecoin is a blockchain specifically used for storing files online without relying on a third-party platform or company. Because Fission is also interested in working in browsers very securely, we decided to work with the Filecoin team on this project. Hear from Ben and Brian about their progress in the Fission Demo Day video. </p><h2 id=\"ipfs-cluster-updates\">IPFS Cluster Updates</h2><p>Daniel (<a href=\"https://talk.fission.codes/u/dholms\">@dholms</a>) talked to us about his updates to the IPFS Cluster. Fission is built on an Interplanetary File System (or IPFS) which is a global peer-to-peer network. Fission builds encryption on top of the IPFS stack, running IPFS servers to make sure that your data stays online and accessible directly from the browser, all with your security in mind. Daniel shares with us some recent backend infrastructure work he's doing to improve our system performance. </p><h2 id=\"tiddlywiki-and-fission\">Tiddlywiki and Fission</h2><p>Jeremy Rustin (<a href=\"https://twitter.com/Jermolene\">@jermolene</a>) is the creator of Tiddlywiki, a serverless web app that allows users to create a non-linear notebook for recording, organizing and sharing complex information. We're collaborating to build an app that will allow users to use TiddlyWiki on the Fission platform. You can hear from Jeremy directly in the Demo Day video. We’ve also been working out in the open in the <a href=\"https://talk.fission.codes/c/apps/tiddlywiki/57\">TiddlyWiki group on the Fission forum</a> so hop over there to see what's going on. </p><h2 id=\"video\">Video</h2><!--kg-card-begin: embed--><figure class=\"kg-card kg-embed-card\"><iframe src=\"https://player.vimeo.com/video/515125741?app_id=122963\" width=\"640\" height=\"360\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen title=\"Fission February 2021 Demo Day\"></iframe></figure><!--kg-card-end: embed--><h2 id=\"join-us-next-time\"><strong>Join us next time</strong></h2><p>We're experimenting with <a href=\"https://lu.ma/\">Luma</a> for registering for events. Click the button below to sign up for the Fission March 2021 Demo Day, or <a href=\"https://lu.ma/fission-march-2021\">visit the event page</a> »</p><!--kg-card-begin: html--><a href=\"https://lu.ma/event/evt-pBdosunE2c0q5Rl\" class=\"luma-checkout--button\" data-luma-action=\"checkout\" data-luma-event-id=\"evt-pBdosunE2c0q5Rl\">\n  Register for Event\n</a>\n\n<script id=\"luma-checkout\" src=\"https://embed.lu.ma/checkout-button.js\"></script><!--kg-card-end: html-->","url":"https://blog.fission.codes/fission-demo-day-february-2021/","canonical_url":null,"uuid":"52a35b3a-7bb6-4fc6-abed-459c26adc746","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"6033d1a3151ab1001ec3de6c","reading_time":null}},{"node":{"id":"Ghost__Post__602d4afc31be96001e3bed96","title":"Announcing TiddlyWiki on Fission","slug":"announcing-tiddlywiki-on-fission","featured":true,"feature_image":"https://s3.fission.codes/2021/02/motovun_jack.jpg","excerpt":"Jeremy Ruston, creator of TiddlyWiki, is working with Fission to bring a TiddlyWiki app to the platform.","custom_excerpt":"Jeremy Ruston, creator of TiddlyWiki, is working with Fission to bring a TiddlyWiki app to the platform.","created_at_pretty":"17 February, 2021","published_at_pretty":"17 February, 2021","updated_at_pretty":"18 February, 2021","created_at":"2021-02-17T08:57:32.000-08:00","published_at":"2021-02-17T10:21:26.000-08:00","updated_at":"2021-02-17T23:40:09.000-08:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":"https://s3.fission.codes/2021/02/tiddlywiki-character-white-1900-1.png","twitter_title":null,"authors":[{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"},{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"}],"primary_author":{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"},"primary_tag":{"name":"TiddlyWiki","slug":"tiddlywiki","description":null,"feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"TiddlyWiki","slug":"tiddlywiki","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"Fission is working with Jeremy Ruston, creator of TiddlyWiki, to build a\nTiddlyWiki on Fission app and make the Webnative SDK available as a plugin to\nsave and load TW content across browsers.\n\nWe’ve been working out in the open in the TiddlyWiki group on the Fission forum\n[https://talk.fission.codes/c/apps/tiddlywiki/57]  for a couple of weeks, so now\nit’s time to welcome more people to join us.\n\nThe goal is to make it so that TiddlyWiki can easily run as an app on the\nFission publishing platform. Individual users will be able to sign up and launch\na new TiddlyWiki or upload their own. Then, they will have everything saved and\nportable automatically from any browser, including mobile, that's logged into\ntheir Fission account.\n\n\n\nTiddlyWiki on Fission Flag Cat\n[https://talk.fission.codes/t/introducing-flag-cat-tiddlywiki-on-fission-mascot/1578]\n. Stay tuned for more images and stickers!Fission’s webnative javascript\nlibraries and app publishing platform are open source and built on open\nstandards. We’re designing the system to be portable and easy-to-personalize for\nanyone--not just professional developers--so that they can launch a business\naround apps, themes, or other creative software experiments.\n\nWe want to work with TiddlyWiki creators who are making custom Editions\n[https://tiddlywiki.com/static/Editions.html]. The TiddlyWiki launcher that\nwe’re working on with Jeremy can include any community Editions that people want\nto include, and we’ll be opening up the Github repo shortly for that.\n\nAnd if you’re a creator that wants to build a business around a TiddlyWiki\nEdition on Fission, with your own supported app that 100s or 1000s of users can\nlaunch with a click and have their own custom domain, we’d love to talk. Our\nupcoming App Cloning feature is designed for this, and we’ll showcase this\nability in the community-supported TiddlyWiki on Fission app so that you can see\nhow it works.\n\nWe’re totally inspired by the TiddlyWiki community, and want to see what else we\ncan build together. We're on the TiddlyWiki Google Group\n[https://groups.google.com/g/tiddlywiki], and please come by and chat with us in\nthe forum [https://talk.fission.codes/c/apps/tiddlywiki/57]  or Fission's\nDiscord chat [https://fission.codes/discord]  if you have questions. If you're a\ndeveloper, you can follow Fission's guide [https://guide.fission.codes]  to set\nup your developer account and get started.\n\nPlease join us at tomorrow’s Fission February 2021 Demo Day\n[https://talk.fission.codes/t/fission-demo-day-february-2021/1442]  if you’d\nlike to find out more and talk live with Jeremy and the Fission team.\n\nRegister for Fission Feb 18th Demo Day [https://lu.ma/event/evt-nHhXeNbXYwW4DW1]\nYou can also register to attend directly on Luma [https://lu.ma/vhtwkxva].","html":"<p>Fission is working with Jeremy Ruston, creator of TiddlyWiki, to build a TiddlyWiki on Fission app and make the Webnative SDK available as a plugin to save and load TW content across browsers.</p><p>We’ve been working out in the open in the <a href=\"https://talk.fission.codes/c/apps/tiddlywiki/57\">TiddlyWiki group on the Fission forum</a> for a couple of weeks, so now it’s time to welcome more people to join us.</p><p>The goal is to make it so that TiddlyWiki can easily run as an app on the Fission publishing platform. Individual users will be able to sign up and launch a new TiddlyWiki or upload their own. Then, they will have everything saved and portable automatically from any browser, including mobile, that's logged into their Fission account.</p><p></p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://s3.fission.codes/2021/02/tiddlywiki-character-white-1024-square-crop.png\" class=\"kg-image\"><figcaption><a href=\"https://talk.fission.codes/t/introducing-flag-cat-tiddlywiki-on-fission-mascot/1578\">TiddlyWiki on Fission Flag Cat</a>. Stay tuned for more images and stickers!</figcaption></figure><!--kg-card-end: image--><p>Fission’s webnative javascript libraries and app publishing platform are open source and built on open standards. We’re designing the system to be portable and easy-to-personalize for anyone--not just professional developers--so that they can launch a business around apps, themes, or other creative software experiments.</p><p>We want to work with TiddlyWiki creators who are making custom <a href=\"https://tiddlywiki.com/static/Editions.html\">Editions</a>. The TiddlyWiki launcher that we’re working on with Jeremy can include any community Editions that people want to include, and we’ll be opening up the Github repo shortly for that.</p><p>And if you’re a creator that wants to build a business around a TiddlyWiki Edition on Fission, with your own supported app that 100s or 1000s of users can launch with a click and have their own custom domain, we’d love to talk. Our upcoming App Cloning feature is designed for this, and we’ll showcase this ability in the community-supported TiddlyWiki on Fission app so that you can see how it works.</p><p>We’re totally inspired by the TiddlyWiki community, and want to see what else we can build together. We're on the <a href=\"https://groups.google.com/g/tiddlywiki\">TiddlyWiki Google Group</a>, and please come by and chat with us in the <a href=\"https://talk.fission.codes/c/apps/tiddlywiki/57\">forum</a> or <a href=\"https://fission.codes/discord\">Fission's Discord chat</a> if you have questions. If you're a developer, you can follow <a href=\"https://guide.fission.codes\">Fission's guide</a> to set up your developer account and get started.</p><p>Please join us at tomorrow’s <a href=\"https://talk.fission.codes/t/fission-demo-day-february-2021/1442\">Fission February 2021 Demo Day</a> if you’d like to find out more and talk live with Jeremy and the Fission team.</p><!--kg-card-begin: html--><a href=\"https://lu.ma/event/evt-nHhXeNbXYwW4DW1\" class=\"luma-checkout--button\" data-luma-action=\"checkout\" data-luma-event-id=\"evt-nHhXeNbXYwW4DW1\" style=\"color: white; font-size: 1em !important; padding: 10px 25px !important; margin-bottom: 45px !important;\">\n  Register for Fission Feb 18th Demo Day\n</a>\n\n<script id=\"luma-checkout\" src=\"https://embed.lu.ma/checkout-button.js\"></script><!--kg-card-end: html--><p>You can also <a href=\"https://lu.ma/vhtwkxva\">register to attend directly on Luma</a>.</p>","url":"https://blog.fission.codes/announcing-tiddlywiki-on-fission/","canonical_url":null,"uuid":"55f0f51c-2edf-4fa3-848e-cc06504f3651","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"602d4afc31be96001e3bed96","reading_time":null}},{"node":{"id":"Ghost__Post__602afb91b749da001eeb5b7b","title":"Inside Fission’s Account Recovery Design","slug":"fission-account-recovery-design","featured":false,"feature_image":"https://s3.fission.codes/2021/02/franck-DoWZMPZ-M9s-unsplash-1.jpg","excerpt":"At first glance, account recovery might seem like a simple topic. But, Fission’s commitment to prioritizing user control makes things a little more complicated","custom_excerpt":"At first glance, account recovery might seem like a simple topic. But, Fission’s commitment to prioritizing user control makes things a little more complicated","created_at_pretty":"15 February, 2021","published_at_pretty":"16 February, 2021","updated_at_pretty":"16 February, 2021","created_at":"2021-02-15T14:54:09.000-08:00","published_at":"2021-02-16T08:41:23.000-08:00","updated_at":"2021-02-16T08:41:23.000-08:00","meta_title":"Passwordless Account Recovery | Fission Data Security","meta_description":"Learn how we make Fission's account recovery process easy and password-free while protecting your private data and user control","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"},{"name":"Courtney Hall","slug":"courtney","bio":"I'm a content writer and marketer in Charlotte, NC.","profile_image":"https://s3.fission.codes/2021/02/me.jpg","twitter":"@contentcourtney","facebook":null,"website":null},{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"}],"primary_author":{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"},"primary_tag":{"name":"Security","slug":"security","description":null,"feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"Security","slug":"security","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Privacy","slug":"privacy","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Roadmap","slug":"roadmap","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"passwordless","slug":"passwordless","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"DID","slug":"did","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Account Recovery","slug":"account-recovery","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"At first glance, account recovery might seem like a simple topic: just write a\nreset password function, send a challenge code, and you're done!\n\nBut, Fission’s commitment to prioritizing user control makes things a little\nmore complicated. When the user is in control, how do we help them get back into\ntheir data if they get locked out? The main relevant factors are:\n\n 1. We’ve designed our account system around portable account identifiers,\n    called Decentralized IDs (DIDs)\n 2. Your account holds encryption keys that keep your private content encrypted\n    and private only to you — even the Fission platform doesn’t have access and\n    can’t see your content.\n 3. We wanted an account recovery system that was as trust-minimized as\n    possible. Meaning, you don’t have to trust us, and you would require as few\n    third-party systems as possible to help you out if you lose account access.\n\n> Oh, and one more thing: we wanted to do all of this without passwords.\nAt Fission, being password-free is the default. Instead, we use technology built\ninto modern browsers — including mobile browsers — that generates and keeps a\nprivate encryption key safely stored. This is called the Web Crypto API.\n\nBy the way, if you haven’t tried this yet, head over to the default Fission\nDrive app [https://drive.fission.codes]  and create a new Fission account.\nNotice that it asks you for a unique username and an email address, but it\ndoesn’t ask you for a password.\n\nTo use your account on other devices — like your desktop browser, tablet, or\nphone — you get access by creating a key on your new device and linking it to\nanother device that already has permission.\n\nNow, the private keys built into the browsers on all your devices have\npermission to access your account and all of your encrypted, personal data — all\nwithout setting up or having to remember a password.\n\nApple is known for providing users with end-to-end encryption that keeps\neveryone, including Apple, out of any personal information. Fission is taking\nthe same approach.\n\nWhat about lost devices?\nBut what happens if you lose all your devices? Can you still get access to the\nencrypted content stored and synced online by your Fission account? Right now,\nthe answer is no! We don’t have a copy of your key — and the Web Crypto API\nbuilt into browsers is designed in such a way that we can’t get a copy for\nsecurity reasons. If you lose access to all your devices, how can you recover\nyour encrypted content? This is where Account Recovery comes in.\n\nOne of the design goals we have with Fission is to support a broad number of\ndefault use cases — we think this stuff should just work for everyone. We do\nrely on the most cutting edge browser standards, but we choose these standards\nbased on the real world support available in all major browsers, including\nmobile browsers.\n\nUsing a single-device as a base case\nLet’s consider the base case scenario of a person having just one mobile\ncomputing device — owning and using a single phone — meaning that losing that\none mobile device means you’ve lost everything.\n\nThis is the common base case we need to keep in mind.\n\nIt’s crucial to remember that the typical software developer or early adopter is\nmuch easier to support: at least one mobile device and one desktop/laptop\ndevice. The private key stored on a desktop is much more likely to stick around\nfor a really long time.\n\nIn fact, in some of our user research interviews, developers told us that the \nprivate key they used to securely connect to GitHub\n[https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh] \n was often on their machine for 5 years. Basically, the entire lifetime of\nowning the machine before they got a new computer and set up a new key!\n\nBut since that isn’t the deal for our single mobile device base case, we have to\nplan for account recovery process with just a single device to make the system\naccessible and recoverable by the largest number of users.\n\nSplitting up keys\nOur basic principle involves making backup keys and splitting them into pieces.\nWe then store some of those pieces on the Fission platform linked to the user\naccount.\n\nThe other half is stored “offline” by the user, as recovery codes.\n\nWhen the offline recovery codes are combined with the pieces on Fission, it\ncreates the complete key that can access the person’s account.\n\nBecause of our commitment to privacy, Fission never has access to the whole key.\n\n> If someone breaks into Fission's database, there are no passwords and no secret\nkeys to leak.\nWhere should I store recovery codes?\nOn Apple iOS devices, basic iCloud file storage is built into the operating\nsystem — just like Fission accounts have the Web Native File System included.\nWe’ll recommend that users download the recovery codes and store them in their\nSafari iCloud downloads folder — or somewhere else on their iCloud files.\n\nOn Android, the defaults are a lot more varied. Many Android phones have Google\nservices built in by default, so we’ll recommend this as a similar approach to\nusing iCloud in our iOS example.\n\nAdvanced users can store this file anywhere they feel comfortable - be it in\nApple Notes with a password, printed out on paper, stored in their 1Password\naccount, or even sent as a “Note to Self” in their Signal messenger app.\n\nSignal's Note to Self feature\n[https://support.signal.org/hc/en-us/articles/360043272451-Note-to-Self]And in\nthe future, based on the feedback, we may allow advanced security-conscious\nusers to forgo the use of recovery codes entirely, allowing them to self-manage\nbackup keys.\n\nGet involved\nYou can check out the in-progress diagrams and notes of our Account Recovery\ndesign process [https://talk.fission.codes/t/account-recovery/1432]  in the\nforum.\n\nWe’re not done with our design. We are still working at the level of security,\nsystems, and cryptographic principles, as well as streamlining the user\nexperience and the flows for users.\n\nThe code is being developed out in the open in the Dashboard code repository\n[https://github.com/fission-suite/dashboard]. We welcome questions, suggestions,\nand contributions – drop by our Discord chat [https://fission.codes/discord].","html":"<p>At first glance, account recovery might seem like a simple topic: just write a reset password function, send a challenge code, and you're done!</p><p>But, Fission’s commitment to prioritizing user control makes things a little more complicated. When the user is in control, how do we help them get back into their data if they get locked out? The main relevant factors are:</p><ol><li>We’ve designed our account system around portable account identifiers, called Decentralized IDs (DIDs)</li><li>Your account holds encryption keys that keep your private content encrypted and private only to you — even the Fission platform doesn’t have access and can’t see your content.</li><li>We wanted an account recovery system that was as trust-minimized as possible. Meaning, you don’t have to trust us, and you would require as few third-party systems as possible to help you out if you lose account access.</li></ol><blockquote><strong>Oh, and one more thing: we wanted to do all of this without passwords.</strong></blockquote><p>At Fission, being password-free is the default. Instead, we use technology built into modern browsers — including mobile browsers — that generates and keeps a private encryption key safely stored. This is called the Web Crypto API.</p><p>By the way, if you haven’t tried this yet, head over to the default <a href=\"https://drive.fission.codes\">Fission Drive app</a> and create a new Fission account. Notice that it asks you for a unique username and an email address, but it doesn’t ask you for a password.</p><p>To use your account on other devices — like your desktop browser, tablet, or phone — you get access by creating a key on your new device and linking it to another device that already has permission.</p><p>Now, the private keys built into the browsers on all your devices have permission to access your account and all of your encrypted, personal data — all without setting up or having to remember a password.</p><p>Apple is known for providing users with end-to-end encryption that keeps everyone, including Apple, out of any personal information. Fission is taking the same approach.</p><h2 id=\"what-about-lost-devices\"><strong>What about lost devices?</strong></h2><p>But what happens if you lose all your devices? Can you still get access to the encrypted content stored and synced online by your Fission account? Right now, the answer is no! We don’t have a copy of your key — and the Web Crypto API built into browsers is designed in such a way that we can’t get a copy for security reasons. If you lose access to all your devices, how can you recover your encrypted content? This is where Account Recovery comes in.</p><p>One of the design goals we have with Fission is to support a broad number of default use cases — we think this stuff should just work for everyone. We do rely on the most cutting edge browser standards, but we choose these standards based on the real world support available in all major browsers, including mobile browsers.</p><h2 id=\"using-a-single-device-as-a-base-case\"><strong>Using a single-device as a base case</strong></h2><p>Let’s consider the base case scenario of a person having just one mobile computing device — owning and using a single phone — meaning that losing that one mobile device means you’ve lost everything.</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://s3.fission.codes/2021/02/markus-winkler-ZM0mca86fQM-unsplash-square-crop.jpg\" class=\"kg-image\"></figure><!--kg-card-end: image--><p>This is the common base case we need to keep in mind.</p><p>It’s crucial to remember that the typical software developer or early adopter is much easier to support: at least one mobile device and one desktop/laptop device. The private key stored on a desktop is much more likely to stick around for a really long time.</p><p>In fact, in some of our user research interviews, developers told us that the <a href=\"https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh\">private key they used to securely connect to GitHub</a> was often on their machine for 5 years. Basically, the entire lifetime of owning the machine before they got a new computer and set up a new key!</p><p>But since that isn’t the deal for our single mobile device base case, we have to plan for account recovery process with just a single device to make the system accessible and recoverable by the largest number of users.</p><h2 id=\"splitting-up-keys\"><strong>Splitting up keys</strong></h2><p>Our basic principle involves making backup keys and splitting them into pieces. We then store some of those pieces on the Fission platform linked to the user account.</p><p>The other half is stored “offline” by the user, as recovery codes.</p><p>When the offline recovery codes are combined with the pieces on Fission, it creates the complete key that can access the person’s account.</p><p>Because of our commitment to privacy, Fission never has access to the whole key.</p><blockquote><strong>If someone breaks into Fission's database, there are no passwords and no secret keys to leak.</strong></blockquote><h2 id=\"where-should-i-store-recovery-codes\"><strong>Where should I store recovery codes?</strong></h2><p>On Apple iOS devices, basic iCloud file storage is built into the operating system — just like Fission accounts have the Web Native File System included. We’ll recommend that users download the recovery codes and store them in their Safari iCloud downloads folder — or somewhere else on their iCloud files.</p><p>On Android, the defaults are a lot more varied. Many Android phones have Google services built in by default, so we’ll recommend this as a similar approach to using iCloud in our iOS example.</p><p>Advanced users can store this file anywhere they feel comfortable - be it in Apple Notes with a password, printed out on paper, stored in their 1Password account, or even sent as a “Note to Self” in their Signal messenger app.</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://s3.fission.codes/2021/02/signal_note_to_self.jpg\" class=\"kg-image\"><figcaption>Signal's <a href=\"https://support.signal.org/hc/en-us/articles/360043272451-Note-to-Self\">Note to Self feature</a></figcaption></figure><!--kg-card-end: image--><p>And in the future, based on the feedback, we may allow advanced security-conscious users to forgo the use of recovery codes entirely, allowing them to self-manage backup keys.</p><h2 id=\"get-involved\"><strong>Get involved</strong></h2><p>You can check out the in-progress diagrams and notes of our <a href=\"https://talk.fission.codes/t/account-recovery/1432\">Account Recovery design process</a> in the forum.</p><p>We’re not done with our design. We are still working at the level of security, systems, and cryptographic principles, as well as streamlining the user experience and the flows for users.</p><p>The code is being developed out in the open in the <a href=\"https://github.com/fission-suite/dashboard\">Dashboard code repository</a>. We welcome questions, suggestions, and contributions – drop by our <a href=\"https://fission.codes/discord\">Discord chat</a>.<br></p>","url":"https://blog.fission.codes/fission-account-recovery-design/","canonical_url":null,"uuid":"f777ba3e-c8f5-48fa-b85b-3f7e875b9159","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"602afb91b749da001eeb5b7b","reading_time":null}},{"node":{"id":"Ghost__Post__602b7933f5bd60001e30b340","title":"Project Cambria Overview with Geoffrey Litt and Peter van Hardenberg","slug":"project-cambria-overview","featured":false,"feature_image":"https://s3.fission.codes/2021/02/cambria-title.png","excerpt":"An overview of Project Cambria by Geoffrey Litt and Peter van Hardenberg. Manage schema changes in distributed systems, so a version 1 app can read version 1000 app data.","custom_excerpt":"An overview of Project Cambria by Geoffrey Litt and Peter van Hardenberg. Manage schema changes in distributed systems, so a version 1 app can read version 1000 app data.","created_at_pretty":"16 February, 2021","published_at_pretty":"16 February, 2021","updated_at_pretty":"16 February, 2021","created_at":"2021-02-15T23:50:11.000-08:00","published_at":"2021-02-16T00:25:07.000-08:00","updated_at":"2021-02-16T00:25:07.000-08:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"}],"primary_author":{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"},"primary_tag":{"name":"Presentations","slug":"presentation","description":null,"feature_image":"https://images.unsplash.com/photo-1535016120720-40c646be5580?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","meta_description":null,"meta_title":null},"tags":[{"name":"Presentations","slug":"presentation","description":null,"feature_image":"https://images.unsplash.com/photo-1535016120720-40c646be5580?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","meta_description":null,"meta_title":null},{"name":"Project Cambria","slug":"project-cambria","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"The Cambria project is an exploration of how to manage changing data formats and\nschemas in a decentralized piece of software. We had Geoffrey Litt and Peter van\nHardenberg present the project, in which they were also joined by Orion Henry.\n\nThe project is funded and operated by Ink & Switch\n[https://www.inkandswitch.com], whose work on Local First Software\n[https://www.inkandswitch.com/local-first.html]  we often reference. Cambria was\nin part inspired by the challenges involved with synchronizing data with these\nlocal first apps. \n\n> Enter Cambria: a Javascript/Typescript library for converting JSON data between\nrelated schemas, using lenses.\n\nTranslates all your data at run time, on the fly.https://t.co/nscje7zhqP  \npic.twitter.com/lahZ21usO7 [https://t.co/lahZ21usO7]\n\n— FISSION (@FISSIONcodes) February 10, 2021\n[https://twitter.com/FISSIONcodes/status/1359553488842149888?ref_src=twsrc%5Etfw]\nThe output of the project so far is an experimental Typescript library:\n\n> …for effectively managing schema change in distributed systems. It aims to allow\ndevelopers to express relationships between schemas using bidirectional lenses,\nand to avoid mixing compatibility code into application logic.\nProject Cambria: Schema evolution in distributed systems with edit lenses\nDirect link to video vimeo.com/511271022 [https://vimeo.com/511271022]Thank you\nto Geoffrey and Peter for presenting! You can follow Geoffrey @geoffreylitt\n[https://twitter.com/geoffreylitt]  and Peter @pvh [https://twitter.com/pvh]  on\nTwitter.\n\nSpeaking of Twitter, we had a great set of attendees and captured some excellent\nquotes and comments along the way. The Twitter handles that were shared are\navailable in the forum chat log.\n\n> Public schemas have the general property of being either too specific for your\nuse case or too general for anyone's use case.\n-@pvh [https://twitter.com/pvh?ref_src=twsrc%5Etfw]  \n\n🤣\n\n— Jess Martin (@jessmartin) February 10, 2021\n[https://twitter.com/jessmartin/status/1359556952322408451?ref_src=twsrc%5Etfw]\n> \"A v1 app can read a v1000 app data\" @pvh\n[https://twitter.com/pvh?ref_src=twsrc%5Etfw]  \n\n\"Everyone writes their native format and leaves clues on how to read it\"\n\n— FISSION (@FISSIONcodes) February 10, 2021\n[https://twitter.com/FISSIONcodes/status/1359556401014575106?ref_src=twsrc%5Etfw]\nRumours about a sea shanty re-mix of some of Peter's phrases can neither be\nconfirmed or denied.\n\nResources\n * Slides from the presentation on Pitch.com\n   [https://app.pitch.com/app/public/presentation/0076228c-acec-418a-bd88-f542b0d84847]\n * Cambria Development Notes [https://inkandswitch.github.io/cambria/]\n * Cambria Project on Github https://github.com/inkandswitch/cambria\n * Fission forum post with chat log\n   [https://talk.fission.codes/t/project-cambria-and-building-the-new-opendoc/1474]\n\n\n--------------------------------------------------------------------------------\n\nInterested in more presentations like this? Browse the presentations\n[https://blog.fission.codes/tag/presentation/]  here on the blog and sign up\nfor\nupcoming events on the forum [https://talk.fission.codes/c/events/25/l/agenda].","html":"<p>The Cambria project is an exploration of how to manage changing data formats and schemas in a decentralized piece of software. We had Geoffrey Litt and Peter van Hardenberg present the project, in which they were also joined by Orion Henry.</p><p>The project is funded and operated by <a href=\"https://www.inkandswitch.com\">Ink &amp; Switch</a>, whose work on <a href=\"https://www.inkandswitch.com/local-first.html\">Local First Software</a> we often reference. Cambria was in part inspired by the challenges involved with synchronizing data with these local first apps. </p><!--kg-card-begin: embed--><figure class=\"kg-card kg-embed-card\"><blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">Enter Cambria: a Javascript/Typescript library for converting JSON data between related schemas, using lenses.<br><br>Translates all your data at run time, on the fly.<a href=\"https://t.co/nscje7zhqP\">https://t.co/nscje7zhqP</a> <a href=\"https://t.co/lahZ21usO7\">pic.twitter.com/lahZ21usO7</a></p>&mdash; FISSION (@FISSIONcodes) <a href=\"https://twitter.com/FISSIONcodes/status/1359553488842149888?ref_src=twsrc%5Etfw\">February 10, 2021</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n</figure><!--kg-card-end: embed--><p>The output of the project so far is an experimental Typescript library:</p><blockquote>…for effectively managing schema change in distributed systems. It aims to allow developers to express relationships between schemas using bidirectional lenses, and to avoid mixing compatibility code into application logic.</blockquote><h2 id=\"project-cambria-schema-evolution-in-distributed-systems-with-edit-lenses\">Project Cambria: Schema evolution in distributed systems with edit lenses</h2><!--kg-card-begin: embed--><figure class=\"kg-card kg-embed-card kg-card-hascaption\"><iframe src=\"https://player.vimeo.com/video/511271022?app_id=122963\" width=\"640\" height=\"328\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen title=\"Project Cambria: managing schema change in distributed systems, Geoffrey Litt and Peter van Hardenberg\"></iframe><figcaption><a href=\"https://vimeo.com/511271022\">Direct link to video vimeo.com/511271022</a></figcaption></figure><!--kg-card-end: embed--><p>Thank you to Geoffrey and Peter for presenting! You can follow <a href=\"https://twitter.com/geoffreylitt\">Geoffrey @geoffreylitt</a> and <a href=\"https://twitter.com/pvh\">Peter @pvh</a> on Twitter.</p><p>Speaking of Twitter, we had a great set of attendees and captured some excellent quotes and comments along the way. The Twitter handles that were shared are available in the forum chat log.</p><!--kg-card-begin: embed--><figure class=\"kg-card kg-embed-card\"><blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">Public schemas have the general property of being either too specific for your use case or too general for anyone&#39;s use case.<br>-<a href=\"https://twitter.com/pvh?ref_src=twsrc%5Etfw\">@pvh</a> <br><br>🤣</p>&mdash; Jess Martin (@jessmartin) <a href=\"https://twitter.com/jessmartin/status/1359556952322408451?ref_src=twsrc%5Etfw\">February 10, 2021</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n</figure><!--kg-card-end: embed--><!--kg-card-begin: embed--><figure class=\"kg-card kg-embed-card\"><blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&quot;A v1 app can read a v1000 app data&quot; <a href=\"https://twitter.com/pvh?ref_src=twsrc%5Etfw\">@pvh</a> <br><br>&quot;Everyone writes their native format and leaves clues on how to read it&quot;</p>&mdash; FISSION (@FISSIONcodes) <a href=\"https://twitter.com/FISSIONcodes/status/1359556401014575106?ref_src=twsrc%5Etfw\">February 10, 2021</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n</figure><!--kg-card-end: embed--><p>Rumours about a sea shanty re-mix of some of Peter's phrases can neither be confirmed or denied.</p><h2 id=\"resources\">Resources</h2><ul><li>Slides from the presentation <a href=\"https://app.pitch.com/app/public/presentation/0076228c-acec-418a-bd88-f542b0d84847\">on Pitch.com</a></li><li><a href=\"https://inkandswitch.github.io/cambria/\">Cambria Development Notes</a></li><li>Cambria Project on Github <a href=\"https://github.com/inkandswitch/cambria\">https://github.com/inkandswitch/cambria</a></li><li>Fission <a href=\"https://talk.fission.codes/t/project-cambria-and-building-the-new-opendoc/1474\">forum post with chat log</a></li></ul><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p>Interested in more presentations like this? <a href=\"https://blog.fission.codes/tag/presentation/\">Browse the presentations</a> here on the blog and <a href=\"https://talk.fission.codes/c/events/25/l/agenda\">sign up for upcoming events on the forum</a>.</p>","url":"https://blog.fission.codes/project-cambria-overview/","canonical_url":null,"uuid":"014c12a3-74c1-4942-bfa0-a27398282e64","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"602b7933f5bd60001e30b340","reading_time":null}},{"node":{"id":"Ghost__Post__6026e82a522a8e001e882099","title":"Startup Vancouver Interviews Boris Mann about Fission","slug":"startup-vancouver-interviews-boris-mann","featured":false,"feature_image":"https://s3.fission.codes/2021/02/startupvancouver-ep044.jpeg","excerpt":"CEO & Co-founder of Fission, Boris Mann, is interviewed by Reza Varzidehkar as part of the Startup Vancouver Episode 44. Boris covers some of the vision and mission behind what Fission is building.","custom_excerpt":"CEO & Co-founder of Fission, Boris Mann, is interviewed by Reza Varzidehkar as part of the Startup Vancouver Episode 44. Boris covers some of the vision and mission behind what Fission is building.","created_at_pretty":"12 February, 2021","published_at_pretty":"12 February, 2021","updated_at_pretty":"14 February, 2021","created_at":"2021-02-12T12:42:18.000-08:00","published_at":"2021-02-12T14:26:04.000-08:00","updated_at":"2021-02-14T01:13:53.000-08:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"},{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"}],"primary_author":{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"},"primary_tag":{"name":"Presentations","slug":"presentation","description":null,"feature_image":"https://images.unsplash.com/photo-1535016120720-40c646be5580?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","meta_description":null,"meta_title":null},"tags":[{"name":"Presentations","slug":"presentation","description":null,"feature_image":"https://images.unsplash.com/photo-1535016120720-40c646be5580?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","meta_description":null,"meta_title":null},{"name":"Interview","slug":"interview","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"videos","slug":"videos","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Startup Vancouver","slug":"startup-vancouver","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"I was invited to join Episode 44 of Startup Vancouver's #WhatKeepsYouUpAtNight\n[https://www.eventbrite.ca/e/the-what-keeps-you-up-at-night-show-episode-044-tickets-140442079039] \n show. I was interviewed by Reza Varzidehkar. The Q&A format was a really great\nchance to talk about some of the vision and \"why\" behind what we're doing, as\nwell as explain some of the technical building blocks of how Fission works.\n\nHere's the 17 minute clip of my interview:\n\nDirect link to video vimeo.com/511387825 [https://vimeo.com/511387825]The\nco-hosts of the show are Maryam Mobini\n[https://www.linkedin.com/in/maryammobini/], Colin Weston\n[https://www.linkedin.com/in/colin-weston-48bab63/]  and Reza Vee\n[https://www.linkedin.com/in/rezavee/]. Thanks Reza for interviewing me, and\nColin for inviting me!\n\nOther guests included  Melanie Ewan [https://www.linkedin.com/in/melanieewan/] \nof Volition Advisors [http://volitionadvisors.com/], and James Basnett\n[https://www.linkedin.com/in/james-basnett/]  of Shape\n[https://shapeimmersive.com/3d-ar/].\n\nThe full episode is available on YouTube\n[https://www.youtube.com/watch?v=PUMsDXyrueg]. The events are free to attend,\nbut donations are accepted on behalf of jack.org [https://jack.org/], \"Canada's\nonly charity that trains and empowers young leaders to revolutionize mental\nhealth in every province and territory\".","html":"<p>I was invited to join <a href=\"https://www.eventbrite.ca/e/the-what-keeps-you-up-at-night-show-episode-044-tickets-140442079039\">Episode 44 of Startup Vancouver's #WhatKeepsYouUpAtNight</a> show. I was interviewed by Reza Varzidehkar. The Q&amp;A format was a really great chance to talk about some of the vision and \"why\" behind what we're doing, as well as explain some of the technical building blocks of how Fission works.</p><p>Here's the 17 minute clip of my interview:</p><!--kg-card-begin: embed--><figure class=\"kg-card kg-embed-card kg-card-hascaption\"><iframe src=\"https://player.vimeo.com/video/511387825?app_id=122963\" width=\"640\" height=\"336\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen title=\"Startup Vancouver Episode 044: Reza Varzidehkar interviews Boris Mann\"></iframe><figcaption><a href=\"https://vimeo.com/511387825\">Direct link to video vimeo.com/511387825</a></figcaption></figure><!--kg-card-end: embed--><p>The co-hosts of the show are <a href=\"https://www.linkedin.com/in/maryammobini/\" rel=\"nofollow noopener noreferrer\">Maryam Mobini</a>, <a href=\"https://www.linkedin.com/in/colin-weston-48bab63/\" rel=\"nofollow noopener noreferrer\">Colin Weston</a> and <a href=\"https://www.linkedin.com/in/rezavee/\" rel=\"nofollow noopener noreferrer\">Reza Vee</a>. Thanks Reza for interviewing me, and Colin for inviting me!</p><p>Other guests included<a href=\"https://www.linkedin.com/in/melanieewan/\"> Melanie Ewan</a> of <a href=\"http://volitionadvisors.com/\">Volition Advisors</a>, and <a href=\"https://www.linkedin.com/in/james-basnett/\">James Basnett</a> of <a href=\"https://shapeimmersive.com/3d-ar/\">Shape</a>.</p><p>The full episode is <a href=\"https://www.youtube.com/watch?v=PUMsDXyrueg\">available on YouTube</a>. The events are free to attend, but donations are accepted on behalf of <a href=\"https://jack.org/\">jack.org</a>, \"Canada's only charity that trains and empowers young leaders to revolutionize mental health in every province and territory\".</p>","url":"https://blog.fission.codes/startup-vancouver-interviews-boris-mann/","canonical_url":null,"uuid":"21421a8a-824e-4647-b32d-81265a123814","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"6026e82a522a8e001e882099","reading_time":null}},{"node":{"id":"Ghost__Post__60210daa2dc76c001e5a3301","title":"Headless Ghost and Fission","slug":"headless-ghost-blog-fission","featured":false,"feature_image":"https://images.unsplash.com/photo-1545062990-4a95e8e4b96d?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MXwxMTc3M3wwfDF8c2VhcmNofDF8fGdob3N0fGVufDB8fHw&ixlib=rb-1.2.1&q=80&w=1080","excerpt":"Learn about the Headless experiments at Fission, and walk through the tutorial to build a Next.js blog powered by Headless Ghost and Fission.","custom_excerpt":"Learn about the Headless experiments at Fission, and walk through the tutorial to build a Next.js blog powered by Headless Ghost and Fission.","created_at_pretty":"08 February, 2021","published_at_pretty":"08 February, 2021","updated_at_pretty":"08 February, 2021","created_at":"2021-02-08T02:08:41.000-08:00","published_at":"2021-02-08T08:59:29.000-08:00","updated_at":"2021-02-08T08:59:29.000-08:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Helder S Ribeiro","slug":"agentofuser","bio":"Deleting the chasm between using and programming computers.","profile_image":"https://s3.fission.codes/2021/02/2020-1024px.jpg","twitter":"@agentofuser","facebook":null,"website":"https://agentofuser.com"}],"primary_author":{"name":"Helder S Ribeiro","slug":"agentofuser","bio":"Deleting the chasm between using and programming computers.","profile_image":"https://s3.fission.codes/2021/02/2020-1024px.jpg","twitter":"@agentofuser","facebook":null,"website":"https://agentofuser.com"},"primary_tag":{"name":"How To","slug":"how-to","description":null,"feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"How To","slug":"how-to","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Ghost","slug":"ghost-tag","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Headless Ghost","slug":"headless-ghost","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"ReactJS","slug":"reactjs","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Next.js","slug":"next-js","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"starter","slug":"starter","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Headless CMS","slug":"headless-cms","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"We're exploring a number of \"Headless\" combinations at Fission. The first one is\nwith the Ghost Content Management System (CMS). We use Ghost to run this blog\nand want to start using it to integrate with and power our home page, so it's a\ngreat place for us to start.\n\nThe basic pattern of \"Headless\" is that your authors and editors login to a\nserver based system with all the authoring and editing tools they are used to,\nbut then the \"head\" – the usual template system and user facing website – isn't\nused. Instead, a modern front end framework is custom designed and built to take\nthe published content of the CMS and host it. This fits great with the Fission\napp publishing platform.\n\nAfter we've got the basics of a headless publishing workflow setup with Fission,\nwe'll move on to using our Webnative framework to add personalization at the\nedge, but that will come in later posts.\n\nAside from Ghost, we're also looking at Headless WordPress\n[https://talk.fission.codes/t/headless-wordpress/1448]  and Headless Drupal\n[https://talk.fission.codes/t/headless-drupal/1513]. Let us know in the forum if\nyou've got other Headless projects that you'd like to combine with Fission!\n\nBuild a Next.js Blog powered by Headless Ghost and Fission\nFollow the tutorial below to get started with your own Headless Ghost, or visit\nit on Github for the README version\n[https://github.com/fission-suite/nextjs-blog-starter-typescript-ghost].\n\nYou want to have a modern static website/app built with React, deployed to a CDN\n(even a distributed [https://ipfs.io/]  one), and loading super fast for\nvisitors and search engines.\n\nYou want to avoid the headaches and costs of managing and securing servers for\ntraditional content management systems (CMSs) like Ghost and WordPress.\n\nThat's what static site generators (like Next.js, Gatsby, and others\n[https://staticgen.com/]) are for, right?\n\nBut,  you don't  want to have to retrain  every writer and content creator on\nyour team to use Markdown  and Git. Ghost and WordPress are familiar, pretty,\nand usable. They have been iterated over years to be approachable by almost\nanyone.\n\nWhat do you do? That's right you cut the CMS' head off 🔪\n\nMore politely, you decouple  the interface used for authoring  content from the\nsystems used for rendering  and distributing  it.\n\nWith CMS and website decoupled, you can protect the CMS inside an intranet\nwithout exposing it to outside danger, or even use it as a desktop word\nprocessor running only on your machine, as I'll show you in this tutorial.\n\nTo make things easier we've made a template Next.js website that connects to\nGhost and pulls content from it. Follow along and try it out. Feedback welcome\n:)\n\n\n--------------------------------------------------------------------------------\n\n * ✨  Getting Started * 👻  Setting Up Ghost * Public or Local Ghost?\n       * Setting Up Local Ghost\n       * Exposing the Ghost Content API\n      \n      \n    * 💻  Running Next.js Locally\n    * 🌐  Deploying to Fission * 🔰  Fission CLI Install and Sign Up\n       * 🌱  Register New Fission App\n       * 🚀   Aand... Launch!\n       * 🤖  (Semi-)Automatic Deployment with the\n         GitHub\n         Action\n      \n      \n   \n   \n * 🙏  Show your support\n\n\n--------------------------------------------------------------------------------\n\nThis starter template is based on the official blog-starter-typescript\n[https://github.com/vercel/next.js/tree/canary/examples/blog-starter-typescript] \n from Next.js [https://nextjs.org].\n\nWe changed it only enough to make it possible to fetch and publish blog posts\nfrom the Ghost CMS, while keeping the ability to write Markdown files in the git\nrepo. It's a purely additive change.\n\nThere's also a GitHub Action to build and publish the static website to Fission.\nIt works automatically on pushes to the git repo, and can be triggered manually\nafter updating the content on Ghost. (The default Ghost webhook isn't\ncustomizable to trigger a GitHub Action, but that can be added as a plugin.)\n\nThe Markdown blog posts are stored in /_posts  as files with frontmatter\nsupport. Adding a new Markdown file in there will create a new blog post.\n\nThe Ghost blog posts are fetched using Ghost's Content API library.\n\n✨  Getting Started\nLet's start by making this starter yours:\n\n * Click Use this template  at the starter page on GitHub\n   [https://github.com/fission-suite/nextjs-blog-starter-typescript-ghost]\n   \n   That will make a copy of the starter into a new repo under your account with\n   a fresh git history. You can pick a different name for it too; in that case\n   replace nextjs-blog-starter-typescript-ghost  with your chosen name below.\n   \n   \n * Clone the repo (replace with your own URL):\n   \n   git clone git@github.com:fission-suite/nextjs-blog-starter-typescript-ghost.git\n   \n   \n   \n * cd into the repo:\n   \n   cd nextjs-blog-starter-typescript-ghost\n   \n   \n   \n * Install dependencies\n   \n   yarn\n   \n   \n   \n\nAll command-line instructions and directory paths from now on assume the current\ndirectory is the root of the cloned repo.\n\n👻  Setting Up Ghost\nPublic or Local Ghost?\nRunning a local Ghost instance is good for testing. But also, if you have no\nneed for a Ghost instance running all the time out on the internet (for example,\nif you are the only author) you can do this for your production website, using\nGhost locally for its nice interface if you prefer that to editing Markdown\nfiles. No servers to secure, no bills to pay.\n\nSetting Up Local Ghost\nIf you have a Ghost instance running already somewhere, move on to the next\nstep. If you don't, you can set one up on your own machine with Docker.\n\nTo create a local Ghost instance with Docker, run the following at the root of\nyour repo:\n\nyarn ghost-local-create\n\n\nGhost data will be stored at ./ghost, which is in .gitignore  by default. In a \nprivate  repo you can choose to commit that too and have your Ghost content\nversioned and available whenever you need it.\n\nThere are other scripts like ghost-local-start, ghost-local-stop, and \nghost-local-remove  which you might find handy to manage the Docker container.\n\nAfter Docker downloads and sets up Ghost, it will be accessible on your browser\nat http://localhost:3001.\n\nNext you need to create an admin account on your newly-created Ghost. To do\nthat, visit the admin interface at http://localhost:3001/ghost  and follow the\nwizard.\n\nExposing the Ghost Content API\nI'll use http://localhost:3001  for the examples, but you can replace that with\nyour Ghost URL if you have an instance already running somewhere else.\n\n * Go to the admin interface at http://localhost:3001/ghost\n * On the left-hand sidebar, click on \"Integrations\"\n * On the Integrations screen, click on +Add custom integration\n   [http://localhost:3001/ghost/#/settings/integrations/new/]\n * Give it a name, like nextjs, and click \"Create\" then \"Save\"\n\nNow the important part:\n\n * On the same screen, you'll find two fields we need: Content API Key  and API\n   URL\n * Copy those into a new .env.local  file, like this:\n\n# .env.local\n# replace values with your own\nGHOST_API_URL=http://localhost:3001\nGHOST_API_KEY=2a9356e4a5214c883ba886e58e\n\n\n⚠️ This file is ignored by git by default. Don't  commit env.local  to git\nunless you know what you're doing.\n\nAlright! Ghost part's done.\n\n💻  Running Next.js Locally\nNext.js is the missing static website head  to our headless Ghost. Let's stitch\nthem together! This should be enough:\n\nyarn dev\n\n\nYour blog should be up and running at http://localhost:3000! (If anything\nunexpected happens, please post an issue\n[https://github.com/fission-suite/nextjs-blog-starter-typescript-ghost/issues/new]\n.)\n\nNow you can change the Next.js website code and the content on Ghost, and\niterate quickly on them in the browser.\n\nNote: live-reload works for Next.js code and Markdown files; to see changes to\nGhost content you need to refresh the page.\n\n🌐  Deploying to Fission\nWhen you're ready to publish, the first step is exporting your website to a set\nof static files:\n\nyarn build\n\n\nThat should create a directory at ./out  with all your ready-to-publish files.\n\nNext we use the Fission CLI to send that out onto the internets.\n\n🔰  Fission CLI Install and Sign Up\nTo install the Fission command-line interface using brew, run:\n\nbrew tap fission-suite/fission\nbrew install fission-cli\n\n\nFor more ways of installing the Fission CLI, please check the documentation\n[https://guide.fission.codes/developers/installation].\n\nIf you don't have a Fission account, you can create one without leaving the\ncommand-line by running:\n\nfission setup\n\n\n🌱  Register New Fission App\nYou can pick a subdomain or let Fission choose a random one for you.\n\nTo host the Next.js website at a random subdomain on .fission.app, run:\n\nfission app register\n\n\nTo choose your own subdomain, use the --name  option like this:\n\nfission app register --name my-beautiful-subdomain\n\n\nThat will create a fission.yaml  file. This one is safe to commit to git, and\nyou should  do that if you want to use the GitHub Action to build and deploy the\nwebsite for you. Make sure there is a line saying build: ./out  in it. That's\nthe directory where Next.js puts the exported website files.\n\n🚀   Aand... Launch!\nOne last step:\n\nfission app publish\n\n\nAnd you're done! Your website should be up at a random URL returned to you by\nthe Fission CLI or at my-beautiful-subdomain.fission.app  if you used the --name \n option. Yay!\n\n🤖  (Semi-)Automatic Deployment with the GitHub Action\nIf you don't want to run the build locally and deploy to Fission every time you\nmake a change to the Next.js code or Markdown files (who does?), this starter\ncomes with a GitHub Action that automates that for you.\n\nTo get it working you need to set up 3 secrets for your repo. To do that, go to\nthe \"Settings\" > \"Secrets\"  screen on your GitHub repo, then create a \"New\nrepository secret\"  for each of these:\n\n * GHOST_API_URL\n * GHOST_API_KEY\n * FISSION_KEY\n\nThe values for the GHOST_API_  fields are the same ones you used for the \n.env.local  file above.\n\nThe FISSION_KEY  was created and stored locally for you by the Fission CLI when\nyou set it up. Here's how you get it:\n\ncat ~/.config/fission/key/machine_id.ed25519 | base64\n\n\nWith all 3 secrets set up, you can trigger the deploy  action manually by\nclicking on \"Run workflow\" > \"Run workflow\", or see it in action after your next\n git push.\n\n\n--------------------------------------------------------------------------------\n\nNote:\n\n⚠️  To fetch the content from Ghost, the GitHub Action must be able to access\nthe URL  entered in the GHOST_API_URL  secret.\n\nIf you are running a local Ghost instance on your machine, http://localhost:3001 \n won't be visible to the outside.\n\nA simple way of exposing your local Ghost instance to a publicly-accessible URL\nis by using one of the open source alternatives to ngrok\n[https://github.com/anderspitman/awesome-tunneling]  or ngrok\n[https://ngrok.com/]  itself.\n\nWith ngrok you do something like this:\n\nngrok http 3001\n\n\n⚠️  This is great for testing, but not secure. Look into using https  if you're\ngoing to rely on this and don't want your Ghost API key and data to leak.\n\n\n--------------------------------------------------------------------------------\n\n> Why \"(semi-)\" automatic then? 🤔\n\n\nGlad you asked. The GitHub Action can detect when you push to the GitHub repo\nbecause there's a built-in \"on push\" event  that can be used to trigger  it.\n\nBut when you create a new post on Ghost or update an existing one, GitHub needs\na way of finding out about it so it can run the deploy action. There's no git\npush  event happening, so the trigger is usually a webhook\n[https://docs.github.com/en/rest/reference/actions#create-a-workflow-dispatch-event] \n (i.e. a POST request you send to a GitHub API URL.)\n\n🙂  Luckily, Ghost comes with the built-in ability to send webhooks when content\nchanges happen.\n\n🙃Unluckily, though, Ghost doesn't let you customize the payload that goes in\nthe webhook requests it sends, and GitHub requires  a certain field to be\npresent telling it which ref  (usually a branch) you are referring to.\n\nBottom line: after changing things on Ghost, you need to trigger a build\nmanually.\n\nYou can do that via the GitHub interface (\"Actions\" > \"Continuous Deployment\" >\n\"Run workflow\" > \"Run workflow\"), or by running the handy script  we added to\nthis starter:\n\nGITHUB_USER=your-username GITHUB_REPO=your-repo GITHUB_AUTH_TOKEN=your-auth-token trigger-github-deploy-action.sh\n\n\nHere's how you can get an auth token\n[https://docs.github.com/en/github/authenticating-to-github/creating-a-personal-access-token]\n.\n\nThis situation is definitely not ideal, and can be solved with Ghost plugins,\nbut we wanted to stick to the basic install.\n\n🙏  Show your support\nPlease give a  ⭐️\n[https://github.com/fission-suite/nextjs-blog-starter-typescript-ghost]  if you\nliked this project! We appreciate it :)","html":"<p>We're exploring a number of \"Headless\" combinations at Fission. The first one is with the Ghost Content Management System (CMS). We use Ghost to run this blog and want to start using it to integrate with and power our home page, so it's a great place for us to start.</p><p>The basic pattern of \"Headless\" is that your authors and editors login to a server based system with all the authoring and editing tools they are used to, but then the \"head\" – the usual template system and user facing website – isn't used. Instead, a modern front end framework is custom designed and built to take the published content of the CMS and host it. This fits great with the Fission app publishing platform.</p><p>After we've got the basics of a headless publishing workflow setup with Fission, we'll move on to using our Webnative framework to add personalization at the edge, but that will come in later posts.</p><p>Aside from Ghost, we're also looking at <a href=\"https://talk.fission.codes/t/headless-wordpress/1448\">Headless WordPress</a> and <a href=\"https://talk.fission.codes/t/headless-drupal/1513\">Headless Drupal</a>. Let us know in the forum if you've got other Headless projects that you'd like to combine with Fission!</p><h2 id=\"build-a-next-js-blog-powered-by-headless-ghost-and-fission\">Build a Next.js Blog powered by Headless Ghost and Fission</h2><p>Follow the tutorial below to get started with your own Headless Ghost, or <a href=\"https://github.com/fission-suite/nextjs-blog-starter-typescript-ghost\">visit it on Github for the README version</a>.</p><!--kg-card-begin: markdown--><p>You want to have a modern static website/app built with React, deployed to a CDN (even a <a href=\"https://ipfs.io/\">distributed</a> one), and loading super fast for visitors and search engines.</p>\n<p>You want to avoid the headaches and costs of managing and securing servers for traditional content management systems (CMSs) like Ghost and WordPress.</p>\n<p>That's what static site generators (like Next.js, Gatsby, and <a href=\"https://staticgen.com/\">others</a>) are for, right?</p>\n<p><em>But,</em> you <em>don't</em> want to have to <strong>retrain</strong> every writer and content creator on your team to use <em>Markdown</em> and <em>Git</em>. Ghost and WordPress are familiar, pretty, and usable. They have been iterated over years to be approachable by almost anyone.</p>\n<p>What do you do? That's right you cut the CMS' head off 🔪</p>\n<p>More politely, you <em>decouple</em> the interface used for <em>authoring</em> content from the systems used for <em>rendering</em> and <em>distributing</em> it.</p>\n<p>With CMS and website decoupled, you can protect the CMS inside an intranet without exposing it to outside danger, or even use it as a desktop word processor running only on your machine, as I'll show you in this tutorial.</p>\n<p>To make things easier we've made a template Next.js website that connects to Ghost and pulls content from it. Follow along and try it out. Feedback welcome :)</p>\n<hr>\n<ul>\n<li><a href=\"#gettingstarted\">✨  Getting Started</a>\n<ul>\n<li><a href=\"#settingupghost\">👻  Setting Up Ghost</a>\n<ul>\n<li><a href=\"#publicorlocalghost\">Public or Local Ghost?</a></li>\n<li><a href=\"#settinguplocalghost\">Setting Up Local Ghost</a></li>\n<li><a href=\"#exposingtheghostcontentapi\">Exposing the Ghost Content API</a></li>\n</ul>\n</li>\n<li><a href=\"#runningnextjslocally\">💻  Running Next.js Locally</a></li>\n<li><a href=\"#deployingtofission\">🌐  Deploying to Fission</a>\n<ul>\n<li><a href=\"#fissioncliinstallandsignup\">🔰  Fission CLI Install and Sign Up</a></li>\n<li><a href=\"#registernewfissionapp\">🌱  Register New Fission App</a></li>\n<li><a href=\"#aandlaunch\">🚀   Aand... Launch!</a></li>\n<li><a href=\"#semiautomaticdeploymentwiththegithubaction\">🤖  (Semi-)Automatic Deployment with the GitHub Action</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#showyoursupport\">🙏  Show your support</a></li>\n</ul>\n<hr>\n<p>This starter template is based on the official <a href=\"https://github.com/vercel/next.js/tree/canary/examples/blog-starter-typescript\">blog-starter-typescript</a> from <a href=\"https://nextjs.org\">Next.js</a>.</p>\n<p>We changed it only enough to make it possible to fetch and publish blog posts from the Ghost CMS, while keeping the ability to write Markdown files in the git repo. It's a purely additive change.</p>\n<p>There's also a GitHub Action to build and publish the static website to Fission. It works automatically on pushes to the git repo, and can be triggered manually after updating the content on Ghost. (The default Ghost webhook isn't customizable to trigger a GitHub Action, but that can be added as a plugin.)</p>\n<p>The Markdown blog posts are stored in <code>/_posts</code> as files with frontmatter support. Adding a new Markdown file in there will create a new blog post.</p>\n<p>The Ghost blog posts are fetched using Ghost's Content API library.</p>\n<h2 id=\"gettingstarted\">✨  Getting Started</h2>\n<p>Let's start by making this starter yours:</p>\n<ul>\n<li>\n<p>Click <strong>Use this template</strong> at the <a href=\"https://github.com/fission-suite/nextjs-blog-starter-typescript-ghost\">starter page on GitHub</a></p>\n<p>That will make a copy of the starter into a new repo under your account with a fresh git history. You can pick a different name for it too; in that case replace <code>nextjs-blog-starter-typescript-ghost</code> with your chosen name below.</p>\n</li>\n<li>\n<p>Clone the repo (replace with your own URL):</p>\n<pre><code>git clone git@github.com:fission-suite/nextjs-blog-starter-typescript-ghost.git\n</code></pre>\n</li>\n<li>\n<p>cd into the repo:</p>\n<pre><code>cd nextjs-blog-starter-typescript-ghost\n</code></pre>\n</li>\n<li>\n<p>Install dependencies</p>\n<pre><code>yarn\n</code></pre>\n</li>\n</ul>\n<p>All command-line instructions and directory paths from now on assume the current directory is the root of the cloned repo.</p>\n<h3 id=\"settingupghost\">👻  Setting Up Ghost</h3>\n<h4 id=\"publicorlocalghost\">Public or Local Ghost?</h4>\n<p>Running a local Ghost instance is good for testing. But also, if you have no need for a Ghost instance running all the time out on the internet (for example, if you are the only author) you can do this for your production website, using Ghost locally for its nice interface if you prefer that to editing Markdown files. No servers to secure, no bills to pay.</p>\n<h4 id=\"settinguplocalghost\">Setting Up Local Ghost</h4>\n<p>If you have a Ghost instance running already somewhere, move on to the next step. If you don't, you can set one up on your own machine with Docker.</p>\n<p>To create a local Ghost instance with Docker, run the following at the root of your repo:</p>\n<pre><code class=\"language-bash\">yarn ghost-local-create\n</code></pre>\n<p>Ghost data will be stored at <code>./ghost</code>, which is in <code>.gitignore</code> by default. In a <strong>private</strong> repo you can choose to commit that too and have your Ghost content versioned and available whenever you need it.</p>\n<p>There are other scripts like <code>ghost-local-start</code>, <code>ghost-local-stop</code>, and <code>ghost-local-remove</code> which you might find handy to manage the Docker container.</p>\n<p>After Docker downloads and sets up Ghost, it will be accessible on your browser at <a href=\"http://localhost:3001\">http://localhost:3001</a>.</p>\n<p>Next you need to create an admin account on your newly-created Ghost. To do that, visit the admin interface at <a href=\"http://localhost:3001/ghost\">http://localhost:3001/ghost</a> and follow the wizard.</p>\n<h4 id=\"exposingtheghostcontentapi\">Exposing the Ghost Content API</h4>\n<p>I'll use <code>http://localhost:3001</code> for the examples, but you can replace that with your Ghost URL if you have an instance already running somewhere else.</p>\n<ul>\n<li>Go to the admin interface at <a href=\"http://localhost:3001/ghost\">http://localhost:3001/ghost</a></li>\n<li>On the left-hand sidebar, click on &quot;Integrations&quot;</li>\n<li>On the Integrations screen, click on <a href=\"http://localhost:3001/ghost/#/settings/integrations/new/\">+Add custom integration</a></li>\n<li>Give it a name, like <code>nextjs</code>, and click &quot;Create&quot; then &quot;Save&quot;</li>\n</ul>\n<p>Now the important part:</p>\n<ul>\n<li>On the same screen, you'll find two fields we need: <strong>Content API Key</strong> and <strong>API URL</strong></li>\n<li>Copy those into a new <code>.env.local</code> file, like this:</li>\n</ul>\n<pre><code class=\"language-bash\"># .env.local\n# replace values with your own\nGHOST_API_URL=http://localhost:3001\nGHOST_API_KEY=2a9356e4a5214c883ba886e58e\n</code></pre>\n<p>⚠️ <em>This file is ignored by git by default. <strong>Don't</strong> commit <code>env.local</code> to git unless you know what you're doing.</em></p>\n<p>Alright! Ghost part's done.</p>\n<h3 id=\"runningnextjslocally\">💻  Running Next.js Locally</h3>\n<p>Next.js is the missing static website <em>head</em> to our <em>head</em>less Ghost. Let's stitch them together! This should be enough:</p>\n<pre><code class=\"language-bash\">yarn dev\n</code></pre>\n<p>Your blog should be up and running at <a href=\"http://localhost:3000\">http://localhost:3000</a>! <em>(If anything unexpected happens, please post an <a href=\"https://github.com/fission-suite/nextjs-blog-starter-typescript-ghost/issues/new\">issue</a>.)</em></p>\n<p>Now you can change the Next.js website code and the content on Ghost, and iterate quickly on them in the browser.</p>\n<p><em>Note: live-reload works for Next.js code and Markdown files; to see changes to Ghost content you need to refresh the page.</em></p>\n<h3 id=\"deployingtofission\">🌐  Deploying to Fission</h3>\n<p>When you're ready to publish, the first step is exporting your website to a set of static files:</p>\n<pre><code class=\"language-bash\">yarn build\n</code></pre>\n<p>That should create a directory at <code>./out</code> with all your ready-to-publish files.</p>\n<p>Next we use the Fission CLI to send that out onto the internets.</p>\n<h4 id=\"fissioncliinstallandsignup\">🔰  Fission CLI Install and Sign Up</h4>\n<p>To install the Fission command-line interface using brew, run:</p>\n<pre><code class=\"language-bash\">brew tap fission-suite/fission\nbrew install fission-cli\n</code></pre>\n<p>For more ways of installing the Fission CLI, please check the <a href=\"https://guide.fission.codes/developers/installation\">documentation</a>.</p>\n<p>If you don't have a Fission account, you can create one without leaving the command-line by running:</p>\n<pre><code class=\"language-bash\">fission setup\n</code></pre>\n<h4 id=\"registernewfissionapp\">🌱  Register New Fission App</h4>\n<p>You can pick a subdomain or let Fission choose a random one for you.</p>\n<p>To host the Next.js website at a random subdomain on <code>.fission.app</code>, run:</p>\n<pre><code class=\"language-bash\">fission app register\n</code></pre>\n<p>To choose your own subdomain, use the <code>--name</code> option like this:</p>\n<pre><code class=\"language-bash\">fission app register --name my-beautiful-subdomain\n</code></pre>\n<p>That will create a <code>fission.yaml</code> file. <strong>This one is safe to commit to git</strong>, and you <em>should</em> do that if you want to use the GitHub Action to build and deploy the website for you. Make sure there is a line saying <code>build: ./out</code> in it. That's the directory where Next.js puts the exported website files.</p>\n<h4 id=\"aandlaunch\">🚀   Aand... Launch!</h4>\n<p>One last step:</p>\n<pre><code class=\"language-bash\">fission app publish\n</code></pre>\n<p>And you're done! Your website should be up at a random URL returned to you by the Fission CLI or at <code>my-beautiful-subdomain.fission.app</code> if you used the <code>--name</code> option. Yay!</p>\n<h4 id=\"semiautomaticdeploymentwiththegithubaction\">🤖  (Semi-)Automatic Deployment with the GitHub Action</h4>\n<p>If you don't want to run the build locally and deploy to Fission every time you make a change to the Next.js code or Markdown files (who does?), this starter comes with <strong>a GitHub Action that automates that for you</strong>.</p>\n<p>To get it working you need to set up 3 secrets for your repo. To do that, go to the <strong>&quot;Settings&quot; &gt; &quot;Secrets&quot;</strong> screen on your GitHub repo, then create a <strong>&quot;New repository secret&quot;</strong> for each of these:</p>\n<ul>\n<li><code>GHOST_API_URL</code></li>\n<li><code>GHOST_API_KEY</code></li>\n<li><code>FISSION_KEY</code></li>\n</ul>\n<p>The values for the <code>GHOST_API_</code> fields are the same ones you used for the <code>.env.local</code> file above.</p>\n<p>The <code>FISSION_KEY</code> was created and stored locally for you by the Fission CLI when you set it up. Here's how you get it:</p>\n<pre><code>cat ~/.config/fission/key/machine_id.ed25519 | base64\n</code></pre>\n<p>With all 3 secrets set up, you can trigger the <code>deploy</code> action manually by clicking on <strong>&quot;Run workflow&quot; &gt; &quot;Run workflow&quot;</strong>, or see it in action after your next <code>git push</code>.</p>\n<hr>\n<p>Note:</p>\n<p>⚠️  To fetch the content from Ghost, <strong>the GitHub Action must be able to access the URL</strong> entered in the <code>GHOST_API_URL</code> secret.</p>\n<p>If you are running a local Ghost instance on your machine, <code>http://localhost:3001</code> won't be visible to the outside.</p>\n<p>A simple way of exposing your local Ghost instance to a publicly-accessible URL is by using one of the <a href=\"https://github.com/anderspitman/awesome-tunneling\">open source alternatives to ngrok</a> or <a href=\"https://ngrok.com/\">ngrok</a> itself.</p>\n<p>With ngrok you do something like this:</p>\n<pre><code>ngrok http 3001\n</code></pre>\n<p>⚠️  This is great for testing, but <strong>not secure</strong>. Look into using <code>https</code> if you're going to rely on this and don't want your Ghost API key and data to leak.</p>\n<hr>\n<blockquote>\n<p>Why <strong>&quot;(semi-)</strong>&quot; automatic then? 🤔</p>\n</blockquote>\n<p>Glad you asked. The GitHub Action can detect when you push to the GitHub repo because <strong>there's a built-in &quot;on push&quot; event</strong> that can be used to <strong>trigger</strong> it.</p>\n<p>But when you create a new post on Ghost or update an existing one, GitHub needs a way of finding out about it so it can run the deploy action. There's no <code>git push</code> event happening, so the trigger is usually a <a href=\"https://docs.github.com/en/rest/reference/actions#create-a-workflow-dispatch-event\"><strong>webhook</strong></a> (i.e. a POST request you send to a GitHub API URL.)</p>\n<p>🙂  Luckily, Ghost comes with the built-in ability to send webhooks when content changes happen.</p>\n<p>🙃  <strong><em>Un</em>luckily</strong>, though, Ghost doesn't let you customize the payload that goes in the webhook requests it sends, and GitHub <strong>requires</strong> a certain field to be present telling it which <code>ref</code> (usually a branch) you are referring to.</p>\n<p>Bottom line: <strong>after changing things <em>on Ghost</em>, you need to trigger a build manually</strong>.</p>\n<p>You can do that via the GitHub interface (&quot;Actions&quot; &gt; &quot;Continuous Deployment&quot; &gt; &quot;Run workflow&quot; &gt; &quot;Run workflow&quot;), or by <strong>running the handy script</strong> we added to this starter:</p>\n<pre><code>GITHUB_USER=your-username GITHUB_REPO=your-repo GITHUB_AUTH_TOKEN=your-auth-token trigger-github-deploy-action.sh\n</code></pre>\n<p>Here's how you can get an <a href=\"https://docs.github.com/en/github/authenticating-to-github/creating-a-personal-access-token\">auth token</a>.</p>\n<p>This situation is definitely not ideal, and can be solved with Ghost plugins, but we wanted to stick to the basic install.</p>\n<h2 id=\"showyoursupport\">🙏  Show your support</h2>\n<p>Please <a href=\"https://github.com/fission-suite/nextjs-blog-starter-typescript-ghost\">give a  ⭐️</a>  if you liked this project! We appreciate it :)</p>\n<!--kg-card-end: markdown--><h3></h3>","url":"https://blog.fission.codes/headless-ghost-blog-fission/","canonical_url":null,"uuid":"7e883b34-c739-4a41-a751-d695e25aa927","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"60210daa2dc76c001e5a3301","reading_time":null}}]}},"pageContext":{"pageNumber":0,"humanPageNumber":1,"skip":0,"limit":12,"numberOfPages":7,"previousPagePath":"","nextPagePath":"/page/2"}},"staticQueryHashes":["1752937443","2358152166","2561578252","2731221146","4145280475"]}