{"componentChunkName":"component---src-templates-tag-js","path":"/tag/web3/","result":{"data":{"ghostTag":{"slug":"web3","name":"Web3","feature_image":null,"description":null,"meta_title":null,"meta_description":null},"allGhostPost":{"edges":[{"node":{"id":"Ghost__Post__5d76bcdec6f24b001eb931e9","title":"First release of IPFS Portable User Settings App","slug":"ipfs-user-settings-app","featured":false,"feature_image":"https://s3.fission.codes/2019/09/josh-clemence-vORp9xB52pQ-unsplash.jpg","excerpt":"New Fission team member Daniel shares the IPFS Portable User Settings app he built, as well as the related IPFS tech that we built to support it.","custom_excerpt":"New Fission team member Daniel shares the IPFS Portable User Settings app he built, as well as the related IPFS tech that we built to support it.","created_at_pretty":"09 September, 2019","published_at_pretty":"10 September, 2019","updated_at_pretty":"28 September, 2019","created_at":"2019-09-09T13:58:06.000-07:00","published_at":"2019-09-10T10:18:17.000-07:00","updated_at":"2019-09-27T18:15:09.000-07:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Daniel Holmgren","slug":"daniel","bio":null,"profile_image":"https://s3.fission.codes/2019/09/75f5c64c98dbaf2b49b86c299104ab06.png","twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Daniel Holmgren","slug":"daniel","bio":null,"profile_image":"https://s3.fission.codes/2019/09/75f5c64c98dbaf2b49b86c299104ab06.png","twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"IPFS","slug":"ipfs","description":"InterPlanetary File System","feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"IPFS","slug":"ipfs","description":"InterPlanetary File System","feature_image":null,"meta_description":null,"meta_title":null},{"name":"Web3","slug":"web3","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"app","slug":"app-tag","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"My name is Daniel, and I'm the newest member of the Fission team. I'm based near\nSpringfield, Missouri, smack dab in the center of the Ozarks (recently made\nfamous by the Netflix show [https://www.imdb.com/title/tt5071412/], which is\nkinda like my life but with money laundering instead of unit tests). When I'm\nnot working on building tools for the decentralized web, you can catch me\nreading cool books (currently reading\n[https://www.amazon.com/Ubik-Philip-K-Dick-ebook/dp/B005LVR6ZA]), listening to\nmusic (currently listening\n[https://open.spotify.com/album/5jgnoe0auRKrLvvj4qO5VX?si=aA_8ILIYQVKwdVaRjvAexg]\n), or rock climbing (my weekend plans\n[https://www.mountainproject.com/area/105903004/horseshoe-canyon-ranch]). \n\nHere at Fission, we've been hard at working cooking up cool new experiments with\nIPFS. IPFS's content-based addressing which gives us a flat, universal namespace\nto store files and other data prompts us to think differently about how we build\nand deploy software. This leads us to build prototypes and experiments, which\nhelp us:\n\n• Ideate projects that either we or another team can expand upon\n• Test and calibrate the tools we build for real world hands-on usage\n• Prompt the creation of new libraries/technologies\n\nOur most recent application came from a simple question that we asked: if my\npreferences are generally the same across apps, why do I need to fill out that\nsame information in every app?\n\nIntroducing IPFS Portable User Settings\n[https://github.com/fission-suite/ipfs-user-settings/]  — a completely client\nside application that allows you to update your preferences over IPFS and take\nthem with you wherever you go.\n\nPlay around with the live demo\n[https://fission-suite.github.io/ipfs-user-settings/]\nBackground\nWhile the emerging decentralized web and the web of yesteryear differ in many\nways, one way to think about it is as a difference in user model. The web2.0\nuser data model is company (or platform)-centric. This involves locking your\ndata in monolithic company-owned databases, with the end result being that your\nidentity is fragmented and duplicated across a variety of corporate silos. Web3\nbrings with it a new way of conceptualizing data: a user-centric data model. In\nthis model, a user owns their data and that data can only be read/edited by them\nand trusted people and apps. Apps take on a different function: they exist as\n\"windows\" that a user grants permissions to view or make edits to certain\nattributes of their data.\n\nOften, the benefits of web3 technology are put in reactionary terms. That is,\nit's reacting to the overreaches/missteps of the current corporate stewards of\nthe internet: censorship, sloppy or malicious use of user data, temporality\n(will I be able to see my photos on Facebook in 25 years? my archived emails on\nGmail?), and so on. \n\nOne thing that we aim to do at Fission is not only address the failings of web2,\nbut also create positive reasons to make the jump to web3.\n\nDecentralized apps should be fun and easy for developers to create, and exciting\nfor users to adopt because they offer features not possible in the old web. This\nwas our motivation when developing our Portable User Settings. We wanted to give\nthe intuition behind some of what's possible with web3 and a technical demo that\na more robust version could be based on.\n\nWe also wanted to make this app completely p2p. No HTTP gateways required here!\nIf your browser is IPFS-enabled and you're running a local daemon, the app\nconnects to that daemon. If not, it gracefully sets up an in-browser instance of\n js-ipfs [https://github.com/ipfs/js-ipfs].\n\nThere are lots of directions this could go. Maybe we want to enable universal\ndark mode so that all the websites you browse respect your global dark mode\nsetting? Leave a comment on what portable user setting you'd like to see in the\nworld.\n\nTechnical Results\nThis project yielded not only a pretty neat demo, but also some useful technical\noffshoots:\n\nget-ipfs [https://github.com/fission-suite/get-ipfs]\nOne of the biggest issues that developers can face when trying to make use of\nthe decentralized web is the high barrier to entry. We wrapped our IPFS fallback\nfunctionality into it's own package: get-ipfs\n[https://github.com/fission-suite/get-ipfs]. This is your new one-stop shop for\nloading an IPFS instance into a webpage. It's as simple as const ipfs = await\ngetIpfs()  and you can make direct P2P use of the decentralized web in your\nwebapp. Give it a go and let us know how it works for you!\n\nFission JavaScript Client\nThis app was also our first time using the Fission JavaScript client\n[https://github.com/fission-suite/typescript-client]  in the wild. While\nadding/getting is done P2P, requests to pin must be sent over HTTP. The library,\nhowever, has all the functionality you need to make IPFS-enabled apps over HTTP.\nCheck out the library [https://github.com/fission-suite/typescript-client]  and\nsee what cool uses you can come up with!\n\nHosted IPFS Node\nWhile we were already hosting an IPFS node, our hosted node is now much more\nrobust. It's capable of handling secure websocket connects (so it can talk to\nin-browser js-ipfs  nodes!) and stores data in S3. Check out the walkthrough we\nposted for setting up your own IPFS node on AWS\n[https://talk.fission.codes/t/a-loosely-written-guide-to-hosting-an-ipfs-node-on-aws/234]\n!\n\nAgain, checkout the demo here\n[https://fission-suite.github.io/ipfs-user-settings/], or keep reading to find\nout how to build and host your own!\n\nRun/Deploy your own app\nFork the repo\nNote: This is only necessary if you are planning on deploying your own user\nsettings app. If you just want to play around locally, you can simply clone the\nrepository.\n\nClick \"Fork\" in the upper-right corner of the repository.\n\nClone the repo locally\nIn your terminal, clone the ipfs-user-settings  repo:\n\ngit clone https://github.com/$YOUR_USERNAME/ipfs-user-settings.git\ncd ipfs-user-settings\n\nSetup environment\nThe environment variables are optional, but will need to be setup for the best\nuser experience.\n\nFirst, create a .env  file in the root of the repository:\ntouch .env\n\nYour .env  will end up looking something like this:\n\nREACT_APP_DEFAULT_CID = QmUWWqCNSdZmus7mc52um5cpqUi1CaE97AzBTY7iWfBXV9\nREACT_APP_BOOTSTRAP_NODE = /dns4/ipfs.runfission.com/tcp/4003/wss/ipfs/QmVLEz2SxoNiFnuyLpbXsH6SvjPTrHNMU88vCQZyhgBzgw\nREACT_APP_INTERPLANETARY_FISSION_URL = https://runfission.com\nREACT_APP_INTERPLANETARY_FISSION_USERNAME = ADD_USERNAME_HERE\nREACT_APP_INTERPLANETARY_FISSION_PASSWORD = ADD_PASSWORD_HERE\n\n\nLet's walk through what each of those variables will do.\n\nREACT_APP_DEFAULT_CID: the cid that contains the default settings that you want\na new user to see. You can set it to the above value for our recommended\ndefaults (or leave it blank and it will default to that).\n\n**Edited this section to reflect recent changes**\nREACT_APP_BOOTSTRAP_NODE_TCP: the multiaddr of the ipfs node that you would like\nthe user's node to connect to through tcp (for instance with a local daemon\nthrough ipfs companion [https://github.com/ipfs-shipyard/ipfs-companion]). You\ncan set it to the above value to connect to the IPFS node that Fission hosts (or\nleave it blank and it will default to that).\nREACT_APP_BOOTSTRAP_NODE_WSS: the multiaddr of the ipfs node that you would like\nthe user's node to connect to through wss (if the user does not have an\nipfs-enabled browser and falls back to an in-browser js-ipfs daemon). You can\nset it to the above value to connect  to the IPFS node that Fission hosts (or\nleave it blank and it will  default to that). \nNote:  if you use a custom node, it must be interoperable with js-ipfs. This\nmeans that it either needs to connect via WebRTC or Secured Websockets (notice\nthe wss  in the above multiaddr).\n\nREACT_APP_INTERPLANETARY_FISSION_...: the last three variables are your\nprovisioned account information for using the Fission web-api. These are used\nfor pinning content to the Fission IPFS node so that content will stay online\neven after a user goes offline. If you leave them blank, the webapp will not pin\nuser content. At the moment, these can be obtained by joining the Fission\nHeroku\nadd-on alpha [https://elements.heroku.com/addons/interplanetary-fission]. If\nyou've tried out our earlier photo gallery demo\n[https://github.com/fission-suite/ipfs-photo-gallery], you can use the same\ncredentials here, otherwise follow that tutorial\n[https://talk.fission.codes/t/ipfs-photo-gallery-in-alpha-mode/197/10]  to\nprovision a username and password\n\nRun the app locally\nFirst install dependencies:\nnpm install\n\nThen run the app:\nnpm run start\n\nThis will open up a page in your browser at http://localhost:3000!\n\nPlay around a bit! Try changing your settings, saving it, and loading past CIDs.\n\nBuild app\nIn order for your app to build with the correct internal links, you'll need to\nchange the homepage:\nOpen package.json  and change the homepage  to the url where this site will be\nhosted ($YOUR_USERNAME.github.io/ipfs-user-settings).\n\nBuild the app:\nnpm run build\n\n\nDeploy app\nDeploy with your favorite tool: Heroku, GitHub pages, etc. Or if you're reading\nthis a month from now, use the new \"Fission Live\" tool 😉\n\nWe've included a deployment command for GitHub pages.\n\nFirst, make sure that your repository is set as the git remote.\nThis won't work if it's still set to fission-suite.\n\nRun: git remote -v  and ensure that that the url next to remote is \nhttps://github.com/$YOUR_USERNAME/ipfs-user-settings.git\n\nIf you forked the repo earlier, this should be fine. If you do need to change\nyour remote, just run\ngit remote set origin https://github.com/$YOUR_USERNAME/ipfs-user-settings.git\n\nDeploy the app:\nnpm run deploy\n\nNow open your browser to $YOUR_USERNAME.github.io/ipfs-user-settings  to see\nyour site up and running!\n\nLet us know how it goes! We're always eager to hear any feedback so come join\nthe conversation on our forum [https://talk.fission.codes/], Discord\n[https://discord.gg/daDMAjE], or GitHub [https://github.com/fission-suite/].","html":"<p><em>My name is Daniel, and I'm the newest member of the Fission team. I'm based near Springfield, Missouri, smack dab in the center of the Ozarks (recently made famous by </em><a href=\"https://www.imdb.com/title/tt5071412/\"><em>the Netflix show</em></a><em>, which is kinda like my life but with money laundering instead of unit tests). When I'm not working on building tools for the decentralized web, you can catch me reading cool books (</em><a href=\"https://www.amazon.com/Ubik-Philip-K-Dick-ebook/dp/B005LVR6ZA\"><em>currently reading</em></a><em>), listening to music (</em><a href=\"https://open.spotify.com/album/5jgnoe0auRKrLvvj4qO5VX?si=aA_8ILIYQVKwdVaRjvAexg\"><em>currently listening</em></a><em>), or rock climbing (</em><a href=\"https://www.mountainproject.com/area/105903004/horseshoe-canyon-ranch\"><em>my weekend plans</em></a><em>). </em><br><br>Here at Fission, we've been hard at working cooking up cool new experiments with IPFS. IPFS's content-based addressing which gives us a flat, universal namespace to store files and other data prompts us to think differently about how we build and deploy software. This leads us to build prototypes and experiments, which help us:<br><br>• Ideate projects that either we or another team can expand upon<br>• Test and calibrate the tools we build for real world hands-on usage<br>• Prompt the creation of new libraries/technologies<br><br>Our most recent application came from a simple question that we asked: if my preferences are generally the same across apps, why do I need to fill out that same information in every app?<br><br>Introducing <a href=\"https://github.com/fission-suite/ipfs-user-settings/\">IPFS Portable User Settings</a> — a completely client side application that allows you to update your preferences over IPFS and take them with you wherever you go.</p><h3 id=\"play-around-with-the-live-demo\">Play around with the <a href=\"https://fission-suite.github.io/ipfs-user-settings/\">live demo</a></h3><!--kg-card-begin: gallery--><figure class=\"kg-card kg-gallery-card kg-width-wide\"><div class=\"kg-gallery-container\"><div class=\"kg-gallery-row\"><div class=\"kg-gallery-image\"><img src=\"https://s3.fission.codes/2019/09/user-settings-screenshot.png\" width=\"1269\" height=\"725\"></div></div></div></figure><!--kg-card-end: gallery--><h2 id=\"background\">Background</h2><p>While the emerging decentralized web and the web of yesteryear differ in many ways, one way to think about it is as a difference in user model. The web2.0 user data model is company (or platform)-centric. This involves locking your data in monolithic company-owned databases, with the end result being that your identity is fragmented and duplicated across a variety of corporate silos. Web3 brings with it a new way of conceptualizing data: a user-centric data model. In this model, a user owns their data and that data can only be read/edited by them and trusted people and apps. Apps take on a different function: they exist as \"windows\" that a user grants permissions to view or make edits to certain attributes of their data.<br><br>Often, the benefits of web3 technology are put in reactionary terms. That is, it's reacting to the overreaches/missteps of the current corporate stewards of the internet: censorship, sloppy or malicious use of user data, temporality (will I be able to see my photos on Facebook in 25 years? my archived emails on Gmail?), and so on. <br><br>One thing that we aim to do at Fission is not only address the failings of web2, but also create positive reasons to make the jump to web3.</p><p>Decentralized apps should be fun and easy for developers to create, and exciting for users to adopt because they offer features not possible in the old web. This was our motivation when developing our Portable User Settings. We wanted to give the intuition behind some of what's possible with web3 and a technical demo that a more robust version could be based on.<br><br>We also wanted to make this app completely p2p. No HTTP gateways required here! If your browser is IPFS-enabled and you're running a local daemon, the app connects to that daemon. If not, it gracefully sets up an in-browser instance of <a href=\"https://github.com/ipfs/js-ipfs\"><code>js-ipfs</code></a>.</p><p>There are lots of directions this could go. Maybe we want to enable universal dark mode so that all the websites you browse respect your global dark mode setting? Leave a comment on what portable user setting you'd like to see in the world.</p><h2 id=\"technical-results\">Technical Results</h2><p>This project yielded not only a pretty neat demo, but also some useful technical offshoots:<br><br><strong><a href=\"https://github.com/fission-suite/get-ipfs\">get-ipfs</a></strong><br>One of the biggest issues that developers can face when trying to make use of the decentralized web is the high barrier to entry. We wrapped our IPFS fallback functionality into it's own package: <a href=\"https://github.com/fission-suite/get-ipfs\">get-ipfs</a>. This is your new one-stop shop for loading an IPFS instance into a webpage. It's as simple as <code>const ipfs = await getIpfs()</code> and you can make direct P2P use of the decentralized web in your webapp. Give it a go and let us know how it works for you!<br><br><strong>Fission JavaScript Client</strong><br>This app was also our first time using the <a href=\"https://github.com/fission-suite/typescript-client\">Fission JavaScript client</a> in the wild. While adding/getting is done P2P, requests to pin must be sent over HTTP. The library, however, has all the functionality you need to make IPFS-enabled apps over HTTP. Check out the <a href=\"https://github.com/fission-suite/typescript-client\">library</a> and see what cool uses you can come up with!<br><br><strong>Hosted IPFS Node</strong><br>While we were already hosting an IPFS node, our hosted node is now much more robust. It's capable of handling secure websocket connects (so it can talk to in-browser <code>js-ipfs</code> nodes!) and stores data in S3. Check out the walkthrough we posted for <a href=\"https://talk.fission.codes/t/a-loosely-written-guide-to-hosting-an-ipfs-node-on-aws/234\">setting up your own IPFS node on AWS</a>!<br><br>Again, checkout the demo <a href=\"https://fission-suite.github.io/ipfs-user-settings/\">here</a>, or keep reading to find out how to build and host your own!</p><h2 id=\"run-deploy-your-own-app\">Run/Deploy your own app</h2><h3 id=\"fork-the-repo\">Fork the repo</h3><p><em>Note: This is only necessary if you are planning on deploying your own user settings app. If you just want to play around locally, you can simply clone the repository.</em><br><br>Click \"Fork\" in the upper-right corner of the repository.</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://s3.fission.codes/2019/09/fork-repo.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><h3 id=\"clone-the-repo-locally\">Clone the repo locally</h3><p>In your terminal, clone the <code>ipfs-user-settings</code> repo:</p><!--kg-card-begin: code--><pre><code>git clone https://github.com/$YOUR_USERNAME/ipfs-user-settings.git\ncd ipfs-user-settings</code></pre><!--kg-card-end: code--><h3 id=\"setup-environment\">Setup environment</h3><p>The environment variables are optional, but will need to be setup for the best user experience.</p><p>First, create a <code>.env</code> file in the root of the repository:<br><code>touch .env</code></p><p>Your <code>.env</code> will end up looking something like this:</p><!--kg-card-begin: code--><pre><code>REACT_APP_DEFAULT_CID = QmUWWqCNSdZmus7mc52um5cpqUi1CaE97AzBTY7iWfBXV9\nREACT_APP_BOOTSTRAP_NODE = /dns4/ipfs.runfission.com/tcp/4003/wss/ipfs/QmVLEz2SxoNiFnuyLpbXsH6SvjPTrHNMU88vCQZyhgBzgw\nREACT_APP_INTERPLANETARY_FISSION_URL = https://runfission.com\nREACT_APP_INTERPLANETARY_FISSION_USERNAME = ADD_USERNAME_HERE\nREACT_APP_INTERPLANETARY_FISSION_PASSWORD = ADD_PASSWORD_HERE\n</code></pre><!--kg-card-end: code--><p>Let's walk through what each of those variables will do.</p><p><code>REACT_APP_DEFAULT_CID</code>: the cid that contains the default settings that you want a new user to see. You can set it to the above value for our recommended defaults (or leave it blank and it will default to that).</p><p><em>**<em>Edited this section to reflect recent changes</em>**</em><br><code>REACT_APP_BOOTSTRAP_NODE_TCP</code>: the multiaddr of the ipfs node that you would like the user's node to connect to through tcp (for instance with a local daemon through <a href=\"https://github.com/ipfs-shipyard/ipfs-companion\">ipfs companion</a>). You can set it to the above value to connect to the IPFS node that Fission hosts (or leave it blank and it will default to that).<br><code>REACT_APP_BOOTSTRAP_NODE_WSS</code>: the multiaddr of the ipfs node that you would like the user's node to connect to through wss (if the user does not have an ipfs-enabled browser and falls back to an in-browser js-ipfs daemon). You can set it to the above value to connect  to the IPFS node that Fission hosts (or leave it blank and it will  default to that). <br><strong>Note:</strong> if you use a custom node, it must be interoperable with <code>js-ipfs</code>. This means that it either needs to connect via WebRTC or Secured Websockets (notice the <code>wss</code> in the above multiaddr).</p><p><code>REACT_APP_INTERPLANETARY_FISSION_...</code>: the last three variables are your provisioned account information for using the Fission web-api. These are used for pinning content to the Fission IPFS node so that content will stay online even after a user goes offline. If you leave them blank, the webapp will not pin user content. At the moment, these can be obtained by joining the <a href=\"https://elements.heroku.com/addons/interplanetary-fission\">Fission Heroku add-on alpha</a>. If you've tried out our earlier <a href=\"https://github.com/fission-suite/ipfs-photo-gallery\">photo gallery demo</a>, you can use the same credentials here, otherwise follow <a href=\"https://talk.fission.codes/t/ipfs-photo-gallery-in-alpha-mode/197/10\">that tutorial</a> to provision a username and password</p><h3 id=\"run-the-app-locally\">Run the app locally</h3><p>First install dependencies:<br><code>npm install</code></p><p>Then run the app:<br><code>npm run start</code></p><p>This will open up a page in your browser at <code>http://localhost:3000</code>!</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://s3.fission.codes/2019/09/run-local-terminal.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><p>Play around a bit! Try changing your settings, saving it, and loading past CIDs.</p><h3 id=\"build-app\">Build app</h3><p>In order for your app to build with the correct internal links, you'll need to change the homepage:<br>Open <code>package.json</code> and change the <code>homepage</code> to the url where this site will be hosted (<code>$YOUR_USERNAME.github.io/ipfs-user-settings</code>).</p><p>Build the app:<br><code>npm run build</code></p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://s3.fission.codes/2019/09/build-terminal.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><h3 id=\"deploy-app\"><br>Deploy app</h3><p>Deploy with your favorite tool: Heroku, GitHub pages, etc. Or if you're reading this a month from now, use the new \"Fission Live\" tool 😉<br><br>We've included a deployment command for GitHub pages.</p><p>First, make sure that your repository is set as the git remote.<br><strong>This won't work if it's still set to <code>fission-suite</code>.</strong></p><p>Run: <code>git remote -v</code> and ensure that that the url next to remote is <code>https://github.com/$YOUR_USERNAME/ipfs-user-settings.git</code></p><p>If you forked the repo earlier, this should be fine. If you do need to change your remote, just run<br><code>git remote set origin https://github.com/$YOUR_USERNAME/ipfs-user-settings.git</code></p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://s3.fission.codes/2019/09/check-remote.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><p>Deploy the app:<br><code>npm run deploy</code></p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://s3.fission.codes/2019/09/deploy.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><p>Now open your browser to <code>$YOUR_USERNAME.github.io/ipfs-user-settings</code> to see your site up and running!<br><br>Let us know how it goes! We're always eager to hear any feedback so come join the conversation on <a href=\"https://talk.fission.codes/\">our forum</a>, <a href=\"https://discord.gg/daDMAjE\">Discord</a>, or <a href=\"https://github.com/fission-suite/\">GitHub</a>.</p>","url":"https://blog.fission.codes/ipfs-user-settings-app/","canonical_url":null,"uuid":"3fad4646-11d0-47e7-b60c-75eec278c562","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5d76bcdec6f24b001eb931e9","reading_time":null}},{"node":{"id":"Ghost__Post__5cd632bda0118e001e19f75a","title":"The \"dream of Web3\" is alive, you're just looking in the wrong place","slug":"the-dream-of-web3-is-alive-youre-just-looking-in-the-wrong-place","featured":false,"feature_image":"https://images.unsplash.com/photo-1436505743955-a98c0d3eb1a8?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","excerpt":"The \"Dream of Web3\" is alive and goes beyond the crypto community.","custom_excerpt":"The \"Dream of Web3\" is alive and goes beyond the crypto community.","created_at_pretty":"07 May, 2019","published_at_pretty":"07 May, 2019","updated_at_pretty":"16 December, 2019","created_at":"2019-05-07T10:34:46.000-07:00","published_at":"2019-05-07T13:13:15.000-07:00","updated_at":"2019-12-16T09:25:12.000-08:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Trenton Van Epps","slug":"trenton","bio":"Former architect working to grow the Ethereum ecosystem and Web3 tech.","profile_image":"https://s3.fission.codes/2019/05/14054274_10155286912259062_1515671855628123823_o.jpg","twitter":"@trent_vanepps","facebook":null,"website":null}],"primary_author":{"name":"Trenton Van Epps","slug":"trenton","bio":"Former architect working to grow the Ethereum ecosystem and Web3 tech.","profile_image":"https://s3.fission.codes/2019/05/14054274_10155286912259062_1515671855628123823_o.jpg","twitter":"@trent_vanepps","facebook":null,"website":null},"primary_tag":{"name":"Web3","slug":"web3","description":null,"feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"Web3","slug":"web3","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"FISSION","slug":"fission","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"DeFi","slug":"defi","description":"Decentralized Finance","feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"And no one calls it web3 there…\n\n“the dream of the 90’s is alive in Portland”The show Portlandia once produced a\nsegment called “the dream of the ‘90s”. Fred Armisen’s character reminisces\nabout a time where the norm was “getting piercings, tribal tattoos, singing\nabout saving the planet and forming bands” — and then reveals the vision is\nstill alive in Portland, today. \"The hot girls wear glasses, people are content\nto be unambitious!\" The sketch satirically romanticises a return to the past\nreality of 1990s US youth culture.\n\nWe’ve observed the inverse occur in crypto, a desire to not abandon possible\nfutures.\n\nIn this case, a future near and dear to a cypherpunk’s heart, the “Web3 vision\nof Ethereum”  —  data sovereignty, uncensorable distributed storage, and private\ncommunication baked in as defaults. Projects like IPFS, Swarm and Whisper were\nheralded as coequal participants in the distributed revolution.\n\nIuri’s tweet is just the most recent example of a common sentiment in the space:\n\n> Very sad this mentality switch we're seeing from the original web3 vision of\nEthereum to a blockchain-focused for finance-only one, a la bitcoin. \nhttps://t.co/rkzj4BlsMU\n\n— iuri “not Luri” matias (@iurimatias) April 26, 2019\n[https://twitter.com/iurimatias/status/1121796404672733184?ref_src=twsrc%5Etfw]\nIt’s not just the loss of a Web3 vision that brings people down. It’s the active\npresence of scam projects and unsavory characters that permeate the ecosystem.\nAre we doomed to the excesses of fraudulent ICOs, IEOs,  of privacy destroying\ndata extraction until the heat-death of the universe?\n\nThe short answer is no, of course not.\n\nFirst, let’s step back and look around a bit more broadly — Why do some people\nthink Web3 has been abandoned in favor of things like DeFi? (Decentralised\nFinance if you aren’t familiar: financial instruments like Dharma\n[https://www.dharma.io/], Set [https://www.setprotocol.com/], Compound\n[https://compound.finance/])\n\nIn a phrase, product-market fit happened. Look at the following points:\n\n 1. the 2017 bull market left those that sold the top flush with new cash.\n 2. DeFi products have matured enough over 2018 and the beignning of 2019 to\n    have functioning releases. These are relatively straightforward protocols\n    that have engaged user bases, monetisation paths, etc.\n 3. Web3 (including Swarm, IPFS, Whisper and the coordination protocols building\n    on top of them) was always a long term, more complex objective.\n 4. Novel ways of organising human effort is a big task to see through. DAOs\n    like those from Aragon [https://aragon.org/], Colony [https://colony.io/], \n    Daostack [https://daostack.io/]  are going to need a lot more tooling and\n    experimentation, which is fortunately happening today.\n\nEthereum still has a relatively small community, so it’s easy to get stuck in a\nnarrative bubble. And while narratives are important for uniting communities, no\nsingle group can control what ends up being built, whether that's a dapp for\nmanaging your collateralised loan or a DAO for your co-op. \n\nWEB3 VISION OUTSIDE OF CRYPTO\nThe reality is that outside of Ethereum mainchain there are dev communities\ninterested in data sovereignty — it’s just referred to by different names,\nincluding local-first software, hostless & local compute.\n\nDevelopers interested in these types of constructions often have similar\nmotivations as the Web3 community; user privacy, distributed collaboration,\naversion to corporate data mining. IPFS has seen growth both within and without\ncrypto through developers passionate about these ideals.\n\nThe Ink & Switch team recently posted a great writeup on what they call\nlocal-first software [https://www.inkandswitch.com/local-first.html]:\n\n> In this article we propose “local-first software”: a set of principles for\nsoftware that enables both collaboration and  ownership for users. Local-first\nideals include the ability to work offline and collaborate across multiple\ndevices, while also improving the security, privacy, long-term preservation, and\nuser control of data.\nThe authors include a list of 7 benefits  that come from using local-first\nsolutions, which will resonate with the crypto community:\n\n 1. No spinners: your work at your fingertips\n 2. Your work is not trapped on one device\n 3. The network is optional\n 4. Seamless collaboration with colleagues\n 5. The Long Now — able to access and edit over extended timelines\n 6. Security and privacy by default\n 7. You retain ultimate control\n\nHere’s a demo of a sample app called Trellis\n[https://www.youtube.com/watch?v=L9fdyDlhByM]  that duplicates Trello\nfunctionality onto a offline machine. Distributed teams working on the same\nboard can then be synced to a canonical version, all without using a cloud\nprovider.\n\nThe discussion within the Ethereum community continues of course – there are\ndapps and protocols being built around decentralized web use cases, while\nfinancial use cases continue to grow as well.\n\nWorking with FISSION\nI’ve recently begun working with the team at FISSION [https://fission.codes]. My\nbackground is in architecture and design, but I will be helping FISSION with\neverything from developer relations, operations, research, communications, and\nof course, sticker distribution! \n\nI first discovered Ethereum through reddit in 2015, having no previous exposure\nto the worlds of Open Source Software and cryptocurrencies. I've gotten pulled\ndeeper and deeper of the intervening years and am excited to finally be working\nin an ecosystem I see as having tremendous impact both in the short term and far\ninto the future. \n\nJust as DeFi has taken off due to emergent conditions, transitioning Web2 devs\nto Web3 tools will be an effort in meeting people where they are. Meaning don’t\ntry to force use cases before they are ready, support devs where they are\ninterested in spending their time, and generally use Web3 tech to solve real\nproblems.\n\n\n--------------------------------------------------------------------------------\n\nThe first tool that FISSION is working on releasing is built around IPFS:\ngetting websites and files published peer-to-peer to the decentralized web,\nright from your laptop. Interested in being an alpha tester? Sign up on our\nProduct Hunt upcoming page tools.fission.codes » [https://tools.fission.codes]","html":"<p><em>And no one calls it web3 there…</em></p><!--kg-card-begin: embed--><figure class=\"kg-card kg-embed-card kg-card-hascaption\"><iframe width=\"480\" height=\"270\" src=\"https://www.youtube.com/embed/U4hShMEk1Ew?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><figcaption>“the dream of the 90’s is alive in Portland”</figcaption></figure><!--kg-card-end: embed--><p>The show Portlandia once produced a segment called “the dream of the ‘90s”. Fred Armisen’s character reminisces about a time where the norm was “getting piercings, tribal tattoos, singing about saving the planet and forming bands” — and then reveals the vision is still alive in Portland, today. \"The hot girls wear glasses, people are content to be unambitious!\" The sketch satirically romanticises a return to the past reality of 1990s US youth culture.</p><p>We’ve observed the inverse occur in crypto, <strong>a desire to not abandon possible futures</strong>.</p><p>In this case, a future near and dear to a cypherpunk’s heart, the “Web3 vision of Ethereum”  —  data sovereignty, uncensorable distributed storage, and private communication baked in as defaults. Projects like IPFS, Swarm and Whisper were heralded as coequal participants in the distributed revolution.</p><p>Iuri’s tweet is just the most recent example of a common sentiment in the space:</p><!--kg-card-begin: embed--><figure class=\"kg-card kg-embed-card\"><blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">Very sad this mentality switch we&#39;re seeing from the original web3 vision of Ethereum to a blockchain-focused for finance-only one, a la bitcoin. <a href=\"https://t.co/rkzj4BlsMU\">https://t.co/rkzj4BlsMU</a></p>&mdash; iuri “not Luri” matias (@iurimatias) <a href=\"https://twitter.com/iurimatias/status/1121796404672733184?ref_src=twsrc%5Etfw\">April 26, 2019</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n</figure><!--kg-card-end: embed--><p>It’s not just the loss of a Web3 vision that brings people down. It’s the active presence of scam projects and unsavory characters that permeate the ecosystem. Are we doomed to the excesses of fraudulent ICOs, IEOs,  of privacy destroying data extraction until the heat-death of the universe?</p><p><strong>The short answer is no, of course not.</strong></p><p>First, let’s step back and look around a bit more broadly — Why do some people think Web3 has been abandoned in favor of things like DeFi? (Decentralised Finance if you aren’t familiar: financial instruments like <a href=\"https://www.dharma.io/\" rel=\"noopener\">Dharma</a>, <a href=\"https://www.setprotocol.com/\" rel=\"noopener\">Set</a>, <a href=\"https://compound.finance/\" rel=\"noopener\">Compound</a>)</p><p>In a phrase, product-market fit happened. Look at the following points:</p><ol><li>the 2017 bull market left those that sold the top flush with new cash.</li><li>DeFi products have matured enough over 2018 and the beignning of 2019 to have functioning releases. These are relatively straightforward protocols that have engaged user bases, monetisation paths, etc.</li><li>Web3 (including Swarm, IPFS, Whisper and the coordination protocols building on top of them) was always a long term, more complex objective.</li><li>Novel ways of organising human effort is a big task to see through. DAOs like those from <a href=\"https://aragon.org/\" rel=\"noopener\">Aragon</a>, <a href=\"https://colony.io/\" rel=\"noopener\">Colony</a>, <a href=\"https://daostack.io/\" rel=\"noopener\">Daostack</a> are going to need a lot more tooling and experimentation, which is fortunately happening today.</li></ol><p>Ethereum still has a relatively small community, so it’s easy to get stuck in a narrative bubble. And while narratives are important for uniting communities, no single group can control what ends up being built, whether that's a dapp for managing your collateralised loan or a DAO for your co-op. </p><h3 id=\"web3-vision-outside-of-crypto\">WEB3 VISION OUTSIDE OF CRYPTO</h3><p>The reality is that outside of Ethereum mainchain there are dev communities interested in data sovereignty — it’s just referred to by different names, including local-first software, hostless &amp; local compute.</p><p>Developers interested in these types of constructions often have similar motivations as the Web3 community; user privacy, distributed collaboration, aversion to corporate data mining. IPFS has seen growth both within and without crypto through developers passionate about these ideals.</p><p>The Ink &amp; Switch team recently posted <a href=\"https://www.inkandswitch.com/local-first.html\">a great writeup on what they call local-first software</a>:</p><blockquote>In this article we propose “local-first software”: a set of principles for software that enables both collaboration <em><em>and</em></em> ownership for users. Local-first ideals include the ability to work offline and collaborate across multiple devices, while also improving the security, privacy, long-term preservation, and user control of data.</blockquote><p>The authors include a list of <strong>7 benefits</strong> that come from using local-first solutions, which will resonate with the crypto community:</p><ol><li>No spinners: your work at your fingertips</li><li>Your work is not trapped on one device</li><li>The network is optional</li><li>Seamless collaboration with colleagues</li><li>The Long Now — able to access and edit over extended timelines</li><li>Security and privacy by default</li><li>You retain ultimate control</li></ol><p>Here’s a <a href=\"https://www.youtube.com/watch?v=L9fdyDlhByM\" rel=\"noopener\">demo of a sample app called Trellis</a> that duplicates Trello functionality onto a offline machine. Distributed teams working on the same board can then be synced to a canonical version, all without using a cloud provider.</p><p>The discussion within the Ethereum community continues of course – there are dapps and protocols being built around decentralized web use cases, while financial use cases continue to grow as well.</p><h3 id=\"working-with-fission\">Working with FISSION</h3><p>I’ve recently begun working with the team at <a href=\"https://fission.codes\">FISSION</a>. My background is in architecture and design, but I will be helping FISSION with everything from developer relations, operations, research, communications, and of course, sticker distribution! </p><p>I first discovered Ethereum through reddit in 2015, having no previous exposure to the worlds of Open Source Software and cryptocurrencies. I've gotten pulled deeper and deeper of the intervening years and am excited to finally be working in an ecosystem I see as having tremendous impact both in the short term and far into the future. </p><p>Just as DeFi has taken off due to emergent conditions, transitioning Web2 devs to Web3 tools will be an effort in meeting people where they are. Meaning don’t try to force use cases before they are ready, support devs where they are interested in spending their time, and generally use Web3 tech to solve real problems.</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p>The first tool that FISSION is working on releasing is built around IPFS: getting websites and files published peer-to-peer to the decentralized web, right from your laptop. Interested in being an alpha tester? <a href=\"https://tools.fission.codes\">Sign up on our Product Hunt upcoming page tools.fission.codes »</a></p>","url":"https://blog.fission.codes/the-dream-of-web3-is-alive-youre-just-looking-in-the-wrong-place/","canonical_url":null,"uuid":"ab95f007-61a8-46c8-8dff-e658ccc84e62","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5cd1c1b6de962300c004014d","reading_time":null}}]}},"pageContext":{"slug":"web3","pageNumber":0,"humanPageNumber":1,"skip":0,"limit":12,"numberOfPages":1,"previousPagePath":"","nextPagePath":""}},"staticQueryHashes":["1752937443","2358152166","2561578252","2731221146","4145280475"]}