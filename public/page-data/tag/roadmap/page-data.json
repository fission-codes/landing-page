{"componentChunkName":"component---src-templates-tag-js","path":"/tag/roadmap/","result":{"data":{"ghostTag":{"slug":"roadmap","name":"Roadmap","feature_image":null,"description":null,"meta_title":null,"meta_description":null},"allGhostPost":{"edges":[{"node":{"id":"Ghost__Post__602afb91b749da001eeb5b7b","title":"Inside Fission’s Account Recovery Design","slug":"fission-account-recovery-design","featured":false,"feature_image":"https://s3.fission.codes/2021/02/franck-DoWZMPZ-M9s-unsplash-1.jpg","excerpt":"At first glance, account recovery might seem like a simple topic. But, Fission’s commitment to prioritizing user control makes things a little more complicated","custom_excerpt":"At first glance, account recovery might seem like a simple topic. But, Fission’s commitment to prioritizing user control makes things a little more complicated","created_at_pretty":"15 February, 2021","published_at_pretty":"16 February, 2021","updated_at_pretty":"16 February, 2021","created_at":"2021-02-15T14:54:09.000-08:00","published_at":"2021-02-16T08:41:23.000-08:00","updated_at":"2021-02-16T08:41:23.000-08:00","meta_title":"Passwordless Account Recovery | Fission Data Security","meta_description":"Learn how we make Fission's account recovery process easy and password-free while protecting your private data and user control","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"},{"name":"Courtney Hall","slug":"courtney","bio":"I'm a content writer and marketer in Charlotte, NC.","profile_image":"https://s3.fission.codes/2021/02/me.jpg","twitter":"@contentcourtney","facebook":null,"website":null},{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"}],"primary_author":{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"},"primary_tag":{"name":"Security","slug":"security","description":null,"feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"Security","slug":"security","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Privacy","slug":"privacy","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Roadmap","slug":"roadmap","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"passwordless","slug":"passwordless","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"DID","slug":"did","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Account Recovery","slug":"account-recovery","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"At first glance, account recovery might seem like a simple topic: just write a\nreset password function, send a challenge code, and you're done!\n\nBut, Fission’s commitment to prioritizing user control makes things a little\nmore complicated. When the user is in control, how do we help them get back into\ntheir data if they get locked out? The main relevant factors are:\n\n 1. We’ve designed our account system around portable account identifiers,\n    called Decentralized IDs (DIDs)\n 2. Your account holds encryption keys that keep your private content encrypted\n    and private only to you — even the Fission platform doesn’t have access and\n    can’t see your content.\n 3. We wanted an account recovery system that was as trust-minimized as\n    possible. Meaning, you don’t have to trust us, and you would require as few\n    third-party systems as possible to help you out if you lose account access.\n\n> Oh, and one more thing: we wanted to do all of this without passwords.\nAt Fission, being password-free is the default. Instead, we use technology built\ninto modern browsers — including mobile browsers — that generates and keeps a\nprivate encryption key safely stored. This is called the Web Crypto API.\n\nBy the way, if you haven’t tried this yet, head over to the default Fission\nDrive app [https://drive.fission.codes]  and create a new Fission account.\nNotice that it asks you for a unique username and an email address, but it\ndoesn’t ask you for a password.\n\nTo use your account on other devices — like your desktop browser, tablet, or\nphone — you get access by creating a key on your new device and linking it to\nanother device that already has permission.\n\nNow, the private keys built into the browsers on all your devices have\npermission to access your account and all of your encrypted, personal data — all\nwithout setting up or having to remember a password.\n\nApple is known for providing users with end-to-end encryption that keeps\neveryone, including Apple, out of any personal information. Fission is taking\nthe same approach.\n\nWhat about lost devices?\nBut what happens if you lose all your devices? Can you still get access to the\nencrypted content stored and synced online by your Fission account? Right now,\nthe answer is no! We don’t have a copy of your key — and the Web Crypto API\nbuilt into browsers is designed in such a way that we can’t get a copy for\nsecurity reasons. If you lose access to all your devices, how can you recover\nyour encrypted content? This is where Account Recovery comes in.\n\nOne of the design goals we have with Fission is to support a broad number of\ndefault use cases — we think this stuff should just work for everyone. We do\nrely on the most cutting edge browser standards, but we choose these standards\nbased on the real world support available in all major browsers, including\nmobile browsers.\n\nUsing a single-device as a base case\nLet’s consider the base case scenario of a person having just one mobile\ncomputing device — owning and using a single phone — meaning that losing that\none mobile device means you’ve lost everything.\n\nThis is the common base case we need to keep in mind.\n\nIt’s crucial to remember that the typical software developer or early adopter is\nmuch easier to support: at least one mobile device and one desktop/laptop\ndevice. The private key stored on a desktop is much more likely to stick around\nfor a really long time.\n\nIn fact, in some of our user research interviews, developers told us that the \nprivate key they used to securely connect to GitHub\n[https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh] \n was often on their machine for 5 years. Basically, the entire lifetime of\nowning the machine before they got a new computer and set up a new key!\n\nBut since that isn’t the deal for our single mobile device base case, we have to\nplan for account recovery process with just a single device to make the system\naccessible and recoverable by the largest number of users.\n\nSplitting up keys\nOur basic principle involves making backup keys and splitting them into pieces.\nWe then store some of those pieces on the Fission platform linked to the user\naccount.\n\nThe other half is stored “offline” by the user, as recovery codes.\n\nWhen the offline recovery codes are combined with the pieces on Fission, it\ncreates the complete key that can access the person’s account.\n\nBecause of our commitment to privacy, Fission never has access to the whole key.\n\n> If someone breaks into Fission's database, there are no passwords and no secret\nkeys to leak.\nWhere should I store recovery codes?\nOn Apple iOS devices, basic iCloud file storage is built into the operating\nsystem — just like Fission accounts have the Web Native File System included.\nWe’ll recommend that users download the recovery codes and store them in their\nSafari iCloud downloads folder — or somewhere else on their iCloud files.\n\nOn Android, the defaults are a lot more varied. Many Android phones have Google\nservices built in by default, so we’ll recommend this as a similar approach to\nusing iCloud in our iOS example.\n\nAdvanced users can store this file anywhere they feel comfortable - be it in\nApple Notes with a password, printed out on paper, stored in their 1Password\naccount, or even sent as a “Note to Self” in their Signal messenger app.\n\nSignal's Note to Self feature\n[https://support.signal.org/hc/en-us/articles/360043272451-Note-to-Self]And in\nthe future, based on the feedback, we may allow advanced security-conscious\nusers to forgo the use of recovery codes entirely, allowing them to self-manage\nbackup keys.\n\nGet involved\nYou can check out the in-progress diagrams and notes of our Account Recovery\ndesign process [https://talk.fission.codes/t/account-recovery/1432]  in the\nforum.\n\nWe’re not done with our design. We are still working at the level of security,\nsystems, and cryptographic principles, as well as streamlining the user\nexperience and the flows for users.\n\nThe code is being developed out in the open in the Dashboard code repository\n[https://github.com/fission-suite/dashboard]. We welcome questions, suggestions,\nand contributions – drop by our Discord chat [https://fission.codes/discord].","html":"<p>At first glance, account recovery might seem like a simple topic: just write a reset password function, send a challenge code, and you're done!</p><p>But, Fission’s commitment to prioritizing user control makes things a little more complicated. When the user is in control, how do we help them get back into their data if they get locked out? The main relevant factors are:</p><ol><li>We’ve designed our account system around portable account identifiers, called Decentralized IDs (DIDs)</li><li>Your account holds encryption keys that keep your private content encrypted and private only to you — even the Fission platform doesn’t have access and can’t see your content.</li><li>We wanted an account recovery system that was as trust-minimized as possible. Meaning, you don’t have to trust us, and you would require as few third-party systems as possible to help you out if you lose account access.</li></ol><blockquote><strong>Oh, and one more thing: we wanted to do all of this without passwords.</strong></blockquote><p>At Fission, being password-free is the default. Instead, we use technology built into modern browsers — including mobile browsers — that generates and keeps a private encryption key safely stored. This is called the Web Crypto API.</p><p>By the way, if you haven’t tried this yet, head over to the default <a href=\"https://drive.fission.codes\">Fission Drive app</a> and create a new Fission account. Notice that it asks you for a unique username and an email address, but it doesn’t ask you for a password.</p><p>To use your account on other devices — like your desktop browser, tablet, or phone — you get access by creating a key on your new device and linking it to another device that already has permission.</p><p>Now, the private keys built into the browsers on all your devices have permission to access your account and all of your encrypted, personal data — all without setting up or having to remember a password.</p><p>Apple is known for providing users with end-to-end encryption that keeps everyone, including Apple, out of any personal information. Fission is taking the same approach.</p><h2 id=\"what-about-lost-devices\"><strong>What about lost devices?</strong></h2><p>But what happens if you lose all your devices? Can you still get access to the encrypted content stored and synced online by your Fission account? Right now, the answer is no! We don’t have a copy of your key — and the Web Crypto API built into browsers is designed in such a way that we can’t get a copy for security reasons. If you lose access to all your devices, how can you recover your encrypted content? This is where Account Recovery comes in.</p><p>One of the design goals we have with Fission is to support a broad number of default use cases — we think this stuff should just work for everyone. We do rely on the most cutting edge browser standards, but we choose these standards based on the real world support available in all major browsers, including mobile browsers.</p><h2 id=\"using-a-single-device-as-a-base-case\"><strong>Using a single-device as a base case</strong></h2><p>Let’s consider the base case scenario of a person having just one mobile computing device — owning and using a single phone — meaning that losing that one mobile device means you’ve lost everything.</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://s3.fission.codes/2021/02/markus-winkler-ZM0mca86fQM-unsplash-square-crop.jpg\" class=\"kg-image\"></figure><!--kg-card-end: image--><p>This is the common base case we need to keep in mind.</p><p>It’s crucial to remember that the typical software developer or early adopter is much easier to support: at least one mobile device and one desktop/laptop device. The private key stored on a desktop is much more likely to stick around for a really long time.</p><p>In fact, in some of our user research interviews, developers told us that the <a href=\"https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh\">private key they used to securely connect to GitHub</a> was often on their machine for 5 years. Basically, the entire lifetime of owning the machine before they got a new computer and set up a new key!</p><p>But since that isn’t the deal for our single mobile device base case, we have to plan for account recovery process with just a single device to make the system accessible and recoverable by the largest number of users.</p><h2 id=\"splitting-up-keys\"><strong>Splitting up keys</strong></h2><p>Our basic principle involves making backup keys and splitting them into pieces. We then store some of those pieces on the Fission platform linked to the user account.</p><p>The other half is stored “offline” by the user, as recovery codes.</p><p>When the offline recovery codes are combined with the pieces on Fission, it creates the complete key that can access the person’s account.</p><p>Because of our commitment to privacy, Fission never has access to the whole key.</p><blockquote><strong>If someone breaks into Fission's database, there are no passwords and no secret keys to leak.</strong></blockquote><h2 id=\"where-should-i-store-recovery-codes\"><strong>Where should I store recovery codes?</strong></h2><p>On Apple iOS devices, basic iCloud file storage is built into the operating system — just like Fission accounts have the Web Native File System included. We’ll recommend that users download the recovery codes and store them in their Safari iCloud downloads folder — or somewhere else on their iCloud files.</p><p>On Android, the defaults are a lot more varied. Many Android phones have Google services built in by default, so we’ll recommend this as a similar approach to using iCloud in our iOS example.</p><p>Advanced users can store this file anywhere they feel comfortable - be it in Apple Notes with a password, printed out on paper, stored in their 1Password account, or even sent as a “Note to Self” in their Signal messenger app.</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://s3.fission.codes/2021/02/signal_note_to_self.jpg\" class=\"kg-image\"><figcaption>Signal's <a href=\"https://support.signal.org/hc/en-us/articles/360043272451-Note-to-Self\">Note to Self feature</a></figcaption></figure><!--kg-card-end: image--><p>And in the future, based on the feedback, we may allow advanced security-conscious users to forgo the use of recovery codes entirely, allowing them to self-manage backup keys.</p><h2 id=\"get-involved\"><strong>Get involved</strong></h2><p>You can check out the in-progress diagrams and notes of our <a href=\"https://talk.fission.codes/t/account-recovery/1432\">Account Recovery design process</a> in the forum.</p><p>We’re not done with our design. We are still working at the level of security, systems, and cryptographic principles, as well as streamlining the user experience and the flows for users.</p><p>The code is being developed out in the open in the <a href=\"https://github.com/fission-suite/dashboard\">Dashboard code repository</a>. We welcome questions, suggestions, and contributions – drop by our <a href=\"https://fission.codes/discord\">Discord chat</a>.<br></p>","url":"https://blog.fission.codes/fission-account-recovery-design/","canonical_url":null,"uuid":"f777ba3e-c8f5-48fa-b85b-3f7e875b9159","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"602afb91b749da001eeb5b7b","reading_time":null}}]}},"pageContext":{"slug":"roadmap","pageNumber":0,"humanPageNumber":1,"skip":0,"limit":12,"numberOfPages":1,"previousPagePath":"","nextPagePath":""}},"staticQueryHashes":["1752937443","2358152166","2561578252","2731221146","4145280475"]}