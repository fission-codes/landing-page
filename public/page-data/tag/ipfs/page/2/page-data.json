{"componentChunkName":"component---src-templates-tag-js","path":"/tag/ipfs/page/2/","result":{"data":{"ghostTag":{"slug":"ipfs","name":"IPFS","feature_image":null,"description":"InterPlanetary File System","meta_title":null,"meta_description":null},"allGhostPost":{"edges":[{"node":{"id":"Ghost__Post__5d7fd38b4b002b001e43740a","title":"Fission API in ipfs-deploy","slug":"fission-api-in-ipfs-deploy","featured":false,"feature_image":"https://images.unsplash.com/photo-1524741978410-350ba91a70d7?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","excerpt":"We've added Fission API support to Agent Of Users ipfs-deploy.","custom_excerpt":"We've added Fission API support to Agent Of Users ipfs-deploy.","created_at_pretty":"16 September, 2019","published_at_pretty":"27 September, 2019","updated_at_pretty":"27 September, 2019","created_at":"2019-09-16T11:25:15.000-07:00","published_at":"2019-09-26T17:36:20.000-07:00","updated_at":"2019-09-26T17:36:20.000-07:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"}],"primary_author":{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"},"primary_tag":{"name":"Product","slug":"product","description":null,"feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"Product","slug":"product","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"IPFS","slug":"ipfs","description":"InterPlanetary File System","feature_image":null,"meta_description":null,"meta_title":null},{"name":"ipfs-deploy","slug":"ipfs-deploy","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"IPLD","slug":"ipld","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"We've had our eye on Agent of User's [https://agentofuser.com/]  great \nipfs-deploy  tool (now in the IPFS Shipyard Github\n[https://github.com/ipfs-shipyard/ipfs-deploy]) for a while now. It is a quick\nway to get a static website served up through a regular Web2 domain name. It\nautomates both IPFS uploading / pinning as well as updating DNS. \n\nNow that we've got our own web API that supports IPFS, we have a PR to add\nFission support to ipfs-deploy\n[https://github.com/ipfs-shipyard/ipfs-deploy/pull/100]. Thanks Daniel\n[https://talk.fission.codes/u/dholms]  for taking this on!\n\n> \"Adding support prompted us to add another feature to our web api: manipulation\nof InterPlanetary Linked Data (IPLD) nodes.\" – Daniel Holmgren\nRight now we're using this ourselves for some website experiments, leaning on\nthe Cloudflare integration in ipfs-deploy  to automate DNS updates. DNS\nAutomation is something that we're building into the Fission Suite directly, as\npart of our \"batteries included\" approach.\n\nAs well, ipfs-deploy  specifically works without a local IPFS node. The\ndirection we're going with the Fission tools is going to assume that we can run\na local IPFS node everywhere that our CLI can be installed, so we'll be leaning\ninto \"native\" IPFS protocol functionality. We'll be release an alpha of our\nFission CLI shortly so you can check out our approach.\n\nRead Agent of User's Complete Beginner's Guide to Deploying Your First Static\nWebsite to IPFS [https://interplanetarygatsby.com/ipfs-deploy/]  for the full\nrun down on using ipfs-deploy.\n\nSkipping to the end, you can use your Fission credentials & Cloudflare API keys\nto run this one liner:\n\nipd -p fission -d cloudflare\n\nTell us about your IPFS hosted website in the Talk forum >\n[https://talk.fission.codes/t/show-fission-my-website-is-on-ipfs-and-heres-how-i-did-it/278]","html":"<p>We've had our eye on <a href=\"https://agentofuser.com/\">Agent of User's</a> great <em>ipfs-deploy</em> tool (now in the <a href=\"https://github.com/ipfs-shipyard/ipfs-deploy\">IPFS Shipyard Github</a>) for a while now. It is a quick way to get a static website served up through a regular Web2 domain name. It automates both IPFS uploading / pinning as well as updating DNS. </p><p>Now that we've got our own web API that supports IPFS, we have a PR <a href=\"https://github.com/ipfs-shipyard/ipfs-deploy/pull/100\">to add Fission support to <em>ipfs-deploy</em></a><em>. </em>Thanks <a href=\"https://talk.fission.codes/u/dholms\">Daniel</a> for taking this on!</p><blockquote>\"Adding support prompted us to add another feature to our web api: manipulation of InterPlanetary Linked Data (IPLD) nodes.\" – Daniel Holmgren</blockquote><p>Right now we're using this ourselves for some website experiments, leaning on the Cloudflare integration in <em>ipfs-deploy</em> to automate DNS updates. DNS Automation is something that we're building into the Fission Suite directly, as part of our \"batteries included\" approach.</p><p>As well, <em>ipfs-deploy</em> specifically works without a local IPFS node. The direction we're going with the Fission tools is going to assume that we can run a local IPFS node everywhere that our CLI can be installed, so we'll be leaning into \"native\" IPFS protocol functionality. We'll be release an alpha of our Fission CLI shortly so you can check out our approach.</p><p>Read <a href=\"https://interplanetarygatsby.com/ipfs-deploy/\">Agent of User's Complete Beginner's Guide to Deploying Your First Static Website to IPFS</a> for the full run down on using <em>ipfs-deploy</em>.</p><p>Skipping to the end, you can use your Fission credentials &amp; Cloudflare API keys to run this one liner:</p><p><code>ipd -p fission -d cloudflare</code></p><p><a href=\"https://talk.fission.codes/t/show-fission-my-website-is-on-ipfs-and-heres-how-i-did-it/278\">Tell us about your IPFS hosted website in the Talk forum &gt;</a></p>","url":"https://blog.fission.codes/fission-api-in-ipfs-deploy/","canonical_url":null,"uuid":"54d1b846-db5e-4b1e-8f05-d9063950e1b1","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5d7fd38b4b002b001e43740a","reading_time":null}},{"node":{"id":"Ghost__Post__5d8a442b7ec789001efe50c8","title":"Diffusion Developer Conference with IPFS Help Desk","slug":"diffusion-developer-conference-with-ipfs-helpdesk","featured":false,"feature_image":"https://images.unsplash.com/photo-1565556601977-f2241a07ab32?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","excerpt":"The Fission team will be in Berlin for the Diffusion Hackathon Oct 19-20, and will be running the IPFS Help Desk.","custom_excerpt":"The Fission team will be in Berlin for the Diffusion Hackathon Oct 19-20, and will be running the IPFS Help Desk.","created_at_pretty":"24 September, 2019","published_at_pretty":"25 September, 2019","updated_at_pretty":"25 September, 2019","created_at":"2019-09-24T09:28:27.000-07:00","published_at":"2019-09-25T11:11:33.000-07:00","updated_at":"2019-09-25T11:29:37.000-07:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"}],"primary_author":{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"},"primary_tag":{"name":"Events","slug":"event","description":"Events in the decentralized web, p2p, & Ethereum community.","feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"Events","slug":"event","description":"Events in the decentralized web, p2p, & Ethereum community.","feature_image":null,"meta_description":null,"meta_title":null},{"name":"Berlin","slug":"berlin","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"hackathon","slug":"hackathon","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"IPFS","slug":"ipfs","description":"InterPlanetary File System","feature_image":null,"meta_description":null,"meta_title":null},{"name":"Diffusion","slug":"diffusion","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Outlier Ventures","slug":"outlier-ventures","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"The Fission team is heading back to Berlin to take part in the first Diffusion\nDeveloper Conference [https://diffusion.events/], organized by the Outlier\nVentures [https://outlierventures.io]  team around their Convergence Stack\n[https://outlierventures.io/research/the-convergence-stack/]. The concept is to\ntry and bring together different communities that might not meet and work\ntogether at protocol-specific events. They are looking for all participants\ncommitted to building privacy-protecting, peer-to-peer, decentralized\ntechnologies, to join forces to grow Web3.\n\nFull info on the website at Diffusion.events [https://diffusion.events]The event\ntakes place October 19th and 20th at Factory Berlin Goerlitzer Park\n[https://factoryberlin.com/]  location – where this year's ETHBerlin Zwei\n[https://ethberlinzwei.com/]  was held, as well as our own RUN EVM\n[https://runevm.com/]  event. Stay tuned for other Berlin events: we'd love to\nsee you while we're in town, and are talking to the Open Source Salon\n[https://github.com/opensourcesalon/berlin]  crew and others about events while\nwe're in town.\n\nIf you want to participate in coding over the weekend, sign up on Devpost –\nfree\nfor developers to join [https://diffusion2019.devpost.com/].\n\nThere will also be panels and workshops open to everyone on a wide range of\ndistributed web topics if you're not going to be coding. Register for a ticket\non Eventbrite to attend, use code \"OVDiscount\"\n[https://www.eventbrite.co.uk/e/diffusion-2019-tickets-71056994383?fission].\n\nWe'll have more to announce about new tools that we're launching at Diffusion.\nStay tuned! \n\nFrom Mozilla Hacks: Dweb: Building Cooperation and Trust into the Web with IPFS\n[https://hacks.mozilla.org/2018/08/dweb-building-cooperation-and-trust-into-the-web-with-ipfs/]\nIPFS Help Desk\nInspired by the great IPFS Help Desk at ETHBerlin, we've volunteered to help\nstaff one at Diffusion!\n\nSo far we've got André and Vasco from Moxy Studio [https://moxy.studio]  (thanks\nfor the intro, Molly [https://twitter.com/momack28]  from Protocol Labs!)\njoining us to help run the help desk. If you're involved with IPFS, come join\nus.\n\nIf you've got questions about IPFS or want some pointers to cool tools now (or\nwant to help run the Help Desk!), sign up [https://diffusion2019.devpost.com/] \nfor Diffusion Devpost and comment on the discussion thread we've started\n[https://diffusion2019.devpost.com/forum_topics/33166-ipfs-helpdesk-at-diffusion]\n. \n\nLooking forward to seeing everyone in Berlin!","html":"<p>The Fission team is heading back to Berlin to take part in the first <a href=\"https://diffusion.events/\">Diffusion Developer Conference</a>, organized by the <a href=\"https://outlierventures.io\">Outlier Ventures</a> team around their <a href=\"https://outlierventures.io/research/the-convergence-stack/\">Convergence Stack</a>. The concept is to try and bring together different communities that might not meet and work together at protocol-specific events. They are looking for all participants committed to building privacy-protecting, peer-to-peer, decentralized technologies, to join forces to grow Web3.</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://s3.fission.codes/2019/09/Screenshot-2019-09-24-at-09.44.35.png\" class=\"kg-image\"><figcaption>Full info on the website at <a href=\"https://diffusion.events\">Diffusion.events</a></figcaption></figure><!--kg-card-end: image--><p>The event takes place October 19th and 20th at <a href=\"https://factoryberlin.com/\">Factory Berlin Goerlitzer Park</a> location – where this year's <a href=\"https://ethberlinzwei.com/\">ETHBerlin Zwei</a> was held, as well as our own <a href=\"https://runevm.com/\">RUN EVM</a> event. Stay tuned for other Berlin events: we'd love to see you while we're in town, and are talking to the <a href=\"https://github.com/opensourcesalon/berlin\">Open Source Salon</a> crew and others about events while we're in town.</p><p>If you want to participate in coding over the weekend, <a href=\"https://diffusion2019.devpost.com/\">sign up on Devpost – free for developers to join</a>.</p><p>There will also be panels and workshops open to everyone on a wide range of distributed web topics if you're not going to be coding. <a href=\"https://www.eventbrite.co.uk/e/diffusion-2019-tickets-71056994383?fission\">Register for a ticket on Eventbrite to attend, use code \"OVDiscount\"</a>.</p><p>We'll have more to announce about new tools that we're launching at Diffusion. Stay tuned! </p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://s3.fission.codes/2019/09/ipfs-stack-high-level-overview-768x594.png\" class=\"kg-image\"><figcaption>From <a href=\"https://hacks.mozilla.org/2018/08/dweb-building-cooperation-and-trust-into-the-web-with-ipfs/\">Mozilla Hacks: Dweb: Building Cooperation and Trust into the Web with IPFS</a></figcaption></figure><!--kg-card-end: image--><h2 id=\"ipfs-help-desk\">IPFS Help Desk</h2><p>Inspired by the great IPFS Help Desk at ETHBerlin, we've volunteered to help staff one at Diffusion!</p><p>So far we've got André and Vasco from <a href=\"https://moxy.studio\">Moxy Studio</a> (thanks for the intro, <a href=\"https://twitter.com/momack28\">Molly</a> from Protocol Labs!) joining us to help run the help desk. If you're involved with IPFS, come join us.</p><p>If you've got questions about IPFS or want some pointers to cool tools now (or want to help run the Help Desk!), <a href=\"https://diffusion2019.devpost.com/\">sign up</a> for Diffusion Devpost and <a href=\"https://diffusion2019.devpost.com/forum_topics/33166-ipfs-helpdesk-at-diffusion\">comment on the discussion thread we've started</a>. </p><p>Looking forward to seeing everyone in Berlin!</p>","url":"https://blog.fission.codes/diffusion-developer-conference-with-ipfs-helpdesk/","canonical_url":null,"uuid":"344d9a96-f2bd-4020-98d9-291136110828","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5d8a442b7ec789001efe50c8","reading_time":null}},{"node":{"id":"Ghost__Post__5d76bcdec6f24b001eb931e9","title":"First release of IPFS Portable User Settings App","slug":"ipfs-user-settings-app","featured":false,"feature_image":"https://s3.fission.codes/2019/09/josh-clemence-vORp9xB52pQ-unsplash.jpg","excerpt":"New Fission team member Daniel shares the IPFS Portable User Settings app he built, as well as the related IPFS tech that we built to support it.","custom_excerpt":"New Fission team member Daniel shares the IPFS Portable User Settings app he built, as well as the related IPFS tech that we built to support it.","created_at_pretty":"09 September, 2019","published_at_pretty":"10 September, 2019","updated_at_pretty":"28 September, 2019","created_at":"2019-09-09T13:58:06.000-07:00","published_at":"2019-09-10T10:18:17.000-07:00","updated_at":"2019-09-27T18:15:09.000-07:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Daniel Holmgren","slug":"daniel","bio":null,"profile_image":"https://s3.fission.codes/2019/09/75f5c64c98dbaf2b49b86c299104ab06.png","twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Daniel Holmgren","slug":"daniel","bio":null,"profile_image":"https://s3.fission.codes/2019/09/75f5c64c98dbaf2b49b86c299104ab06.png","twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"IPFS","slug":"ipfs","description":"InterPlanetary File System","feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"IPFS","slug":"ipfs","description":"InterPlanetary File System","feature_image":null,"meta_description":null,"meta_title":null},{"name":"Web3","slug":"web3","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"app","slug":"app-tag","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"My name is Daniel, and I'm the newest member of the Fission team. I'm based near\nSpringfield, Missouri, smack dab in the center of the Ozarks (recently made\nfamous by the Netflix show [https://www.imdb.com/title/tt5071412/], which is\nkinda like my life but with money laundering instead of unit tests). When I'm\nnot working on building tools for the decentralized web, you can catch me\nreading cool books (currently reading\n[https://www.amazon.com/Ubik-Philip-K-Dick-ebook/dp/B005LVR6ZA]), listening to\nmusic (currently listening\n[https://open.spotify.com/album/5jgnoe0auRKrLvvj4qO5VX?si=aA_8ILIYQVKwdVaRjvAexg]\n), or rock climbing (my weekend plans\n[https://www.mountainproject.com/area/105903004/horseshoe-canyon-ranch]). \n\nHere at Fission, we've been hard at working cooking up cool new experiments with\nIPFS. IPFS's content-based addressing which gives us a flat, universal namespace\nto store files and other data prompts us to think differently about how we build\nand deploy software. This leads us to build prototypes and experiments, which\nhelp us:\n\n• Ideate projects that either we or another team can expand upon\n• Test and calibrate the tools we build for real world hands-on usage\n• Prompt the creation of new libraries/technologies\n\nOur most recent application came from a simple question that we asked: if my\npreferences are generally the same across apps, why do I need to fill out that\nsame information in every app?\n\nIntroducing IPFS Portable User Settings\n[https://github.com/fission-suite/ipfs-user-settings/]  — a completely client\nside application that allows you to update your preferences over IPFS and take\nthem with you wherever you go.\n\nPlay around with the live demo\n[https://fission-suite.github.io/ipfs-user-settings/]\nBackground\nWhile the emerging decentralized web and the web of yesteryear differ in many\nways, one way to think about it is as a difference in user model. The web2.0\nuser data model is company (or platform)-centric. This involves locking your\ndata in monolithic company-owned databases, with the end result being that your\nidentity is fragmented and duplicated across a variety of corporate silos. Web3\nbrings with it a new way of conceptualizing data: a user-centric data model. In\nthis model, a user owns their data and that data can only be read/edited by them\nand trusted people and apps. Apps take on a different function: they exist as\n\"windows\" that a user grants permissions to view or make edits to certain\nattributes of their data.\n\nOften, the benefits of web3 technology are put in reactionary terms. That is,\nit's reacting to the overreaches/missteps of the current corporate stewards of\nthe internet: censorship, sloppy or malicious use of user data, temporality\n(will I be able to see my photos on Facebook in 25 years? my archived emails on\nGmail?), and so on. \n\nOne thing that we aim to do at Fission is not only address the failings of web2,\nbut also create positive reasons to make the jump to web3.\n\nDecentralized apps should be fun and easy for developers to create, and exciting\nfor users to adopt because they offer features not possible in the old web. This\nwas our motivation when developing our Portable User Settings. We wanted to give\nthe intuition behind some of what's possible with web3 and a technical demo that\na more robust version could be based on.\n\nWe also wanted to make this app completely p2p. No HTTP gateways required here!\nIf your browser is IPFS-enabled and you're running a local daemon, the app\nconnects to that daemon. If not, it gracefully sets up an in-browser instance of\n js-ipfs [https://github.com/ipfs/js-ipfs].\n\nThere are lots of directions this could go. Maybe we want to enable universal\ndark mode so that all the websites you browse respect your global dark mode\nsetting? Leave a comment on what portable user setting you'd like to see in the\nworld.\n\nTechnical Results\nThis project yielded not only a pretty neat demo, but also some useful technical\noffshoots:\n\nget-ipfs [https://github.com/fission-suite/get-ipfs]\nOne of the biggest issues that developers can face when trying to make use of\nthe decentralized web is the high barrier to entry. We wrapped our IPFS fallback\nfunctionality into it's own package: get-ipfs\n[https://github.com/fission-suite/get-ipfs]. This is your new one-stop shop for\nloading an IPFS instance into a webpage. It's as simple as const ipfs = await\ngetIpfs()  and you can make direct P2P use of the decentralized web in your\nwebapp. Give it a go and let us know how it works for you!\n\nFission JavaScript Client\nThis app was also our first time using the Fission JavaScript client\n[https://github.com/fission-suite/typescript-client]  in the wild. While\nadding/getting is done P2P, requests to pin must be sent over HTTP. The library,\nhowever, has all the functionality you need to make IPFS-enabled apps over HTTP.\nCheck out the library [https://github.com/fission-suite/typescript-client]  and\nsee what cool uses you can come up with!\n\nHosted IPFS Node\nWhile we were already hosting an IPFS node, our hosted node is now much more\nrobust. It's capable of handling secure websocket connects (so it can talk to\nin-browser js-ipfs  nodes!) and stores data in S3. Check out the walkthrough we\nposted for setting up your own IPFS node on AWS\n[https://talk.fission.codes/t/a-loosely-written-guide-to-hosting-an-ipfs-node-on-aws/234]\n!\n\nAgain, checkout the demo here\n[https://fission-suite.github.io/ipfs-user-settings/], or keep reading to find\nout how to build and host your own!\n\nRun/Deploy your own app\nFork the repo\nNote: This is only necessary if you are planning on deploying your own user\nsettings app. If you just want to play around locally, you can simply clone the\nrepository.\n\nClick \"Fork\" in the upper-right corner of the repository.\n\nClone the repo locally\nIn your terminal, clone the ipfs-user-settings  repo:\n\ngit clone https://github.com/$YOUR_USERNAME/ipfs-user-settings.git\ncd ipfs-user-settings\n\nSetup environment\nThe environment variables are optional, but will need to be setup for the best\nuser experience.\n\nFirst, create a .env  file in the root of the repository:\ntouch .env\n\nYour .env  will end up looking something like this:\n\nREACT_APP_DEFAULT_CID = QmUWWqCNSdZmus7mc52um5cpqUi1CaE97AzBTY7iWfBXV9\nREACT_APP_BOOTSTRAP_NODE = /dns4/ipfs.runfission.com/tcp/4003/wss/ipfs/QmVLEz2SxoNiFnuyLpbXsH6SvjPTrHNMU88vCQZyhgBzgw\nREACT_APP_INTERPLANETARY_FISSION_URL = https://runfission.com\nREACT_APP_INTERPLANETARY_FISSION_USERNAME = ADD_USERNAME_HERE\nREACT_APP_INTERPLANETARY_FISSION_PASSWORD = ADD_PASSWORD_HERE\n\n\nLet's walk through what each of those variables will do.\n\nREACT_APP_DEFAULT_CID: the cid that contains the default settings that you want\na new user to see. You can set it to the above value for our recommended\ndefaults (or leave it blank and it will default to that).\n\n**Edited this section to reflect recent changes**\nREACT_APP_BOOTSTRAP_NODE_TCP: the multiaddr of the ipfs node that you would like\nthe user's node to connect to through tcp (for instance with a local daemon\nthrough ipfs companion [https://github.com/ipfs-shipyard/ipfs-companion]). You\ncan set it to the above value to connect to the IPFS node that Fission hosts (or\nleave it blank and it will default to that).\nREACT_APP_BOOTSTRAP_NODE_WSS: the multiaddr of the ipfs node that you would like\nthe user's node to connect to through wss (if the user does not have an\nipfs-enabled browser and falls back to an in-browser js-ipfs daemon). You can\nset it to the above value to connect  to the IPFS node that Fission hosts (or\nleave it blank and it will  default to that). \nNote:  if you use a custom node, it must be interoperable with js-ipfs. This\nmeans that it either needs to connect via WebRTC or Secured Websockets (notice\nthe wss  in the above multiaddr).\n\nREACT_APP_INTERPLANETARY_FISSION_...: the last three variables are your\nprovisioned account information for using the Fission web-api. These are used\nfor pinning content to the Fission IPFS node so that content will stay online\neven after a user goes offline. If you leave them blank, the webapp will not pin\nuser content. At the moment, these can be obtained by joining the Fission\nHeroku\nadd-on alpha [https://elements.heroku.com/addons/interplanetary-fission]. If\nyou've tried out our earlier photo gallery demo\n[https://github.com/fission-suite/ipfs-photo-gallery], you can use the same\ncredentials here, otherwise follow that tutorial\n[https://talk.fission.codes/t/ipfs-photo-gallery-in-alpha-mode/197/10]  to\nprovision a username and password\n\nRun the app locally\nFirst install dependencies:\nnpm install\n\nThen run the app:\nnpm run start\n\nThis will open up a page in your browser at http://localhost:3000!\n\nPlay around a bit! Try changing your settings, saving it, and loading past CIDs.\n\nBuild app\nIn order for your app to build with the correct internal links, you'll need to\nchange the homepage:\nOpen package.json  and change the homepage  to the url where this site will be\nhosted ($YOUR_USERNAME.github.io/ipfs-user-settings).\n\nBuild the app:\nnpm run build\n\n\nDeploy app\nDeploy with your favorite tool: Heroku, GitHub pages, etc. Or if you're reading\nthis a month from now, use the new \"Fission Live\" tool 😉\n\nWe've included a deployment command for GitHub pages.\n\nFirst, make sure that your repository is set as the git remote.\nThis won't work if it's still set to fission-suite.\n\nRun: git remote -v  and ensure that that the url next to remote is \nhttps://github.com/$YOUR_USERNAME/ipfs-user-settings.git\n\nIf you forked the repo earlier, this should be fine. If you do need to change\nyour remote, just run\ngit remote set origin https://github.com/$YOUR_USERNAME/ipfs-user-settings.git\n\nDeploy the app:\nnpm run deploy\n\nNow open your browser to $YOUR_USERNAME.github.io/ipfs-user-settings  to see\nyour site up and running!\n\nLet us know how it goes! We're always eager to hear any feedback so come join\nthe conversation on our forum [https://talk.fission.codes/], Discord\n[https://discord.gg/daDMAjE], or GitHub [https://github.com/fission-suite/].","html":"<p><em>My name is Daniel, and I'm the newest member of the Fission team. I'm based near Springfield, Missouri, smack dab in the center of the Ozarks (recently made famous by </em><a href=\"https://www.imdb.com/title/tt5071412/\"><em>the Netflix show</em></a><em>, which is kinda like my life but with money laundering instead of unit tests). When I'm not working on building tools for the decentralized web, you can catch me reading cool books (</em><a href=\"https://www.amazon.com/Ubik-Philip-K-Dick-ebook/dp/B005LVR6ZA\"><em>currently reading</em></a><em>), listening to music (</em><a href=\"https://open.spotify.com/album/5jgnoe0auRKrLvvj4qO5VX?si=aA_8ILIYQVKwdVaRjvAexg\"><em>currently listening</em></a><em>), or rock climbing (</em><a href=\"https://www.mountainproject.com/area/105903004/horseshoe-canyon-ranch\"><em>my weekend plans</em></a><em>). </em><br><br>Here at Fission, we've been hard at working cooking up cool new experiments with IPFS. IPFS's content-based addressing which gives us a flat, universal namespace to store files and other data prompts us to think differently about how we build and deploy software. This leads us to build prototypes and experiments, which help us:<br><br>• Ideate projects that either we or another team can expand upon<br>• Test and calibrate the tools we build for real world hands-on usage<br>• Prompt the creation of new libraries/technologies<br><br>Our most recent application came from a simple question that we asked: if my preferences are generally the same across apps, why do I need to fill out that same information in every app?<br><br>Introducing <a href=\"https://github.com/fission-suite/ipfs-user-settings/\">IPFS Portable User Settings</a> — a completely client side application that allows you to update your preferences over IPFS and take them with you wherever you go.</p><h3 id=\"play-around-with-the-live-demo\">Play around with the <a href=\"https://fission-suite.github.io/ipfs-user-settings/\">live demo</a></h3><!--kg-card-begin: gallery--><figure class=\"kg-card kg-gallery-card kg-width-wide\"><div class=\"kg-gallery-container\"><div class=\"kg-gallery-row\"><div class=\"kg-gallery-image\"><img src=\"https://s3.fission.codes/2019/09/user-settings-screenshot.png\" width=\"1269\" height=\"725\"></div></div></div></figure><!--kg-card-end: gallery--><h2 id=\"background\">Background</h2><p>While the emerging decentralized web and the web of yesteryear differ in many ways, one way to think about it is as a difference in user model. The web2.0 user data model is company (or platform)-centric. This involves locking your data in monolithic company-owned databases, with the end result being that your identity is fragmented and duplicated across a variety of corporate silos. Web3 brings with it a new way of conceptualizing data: a user-centric data model. In this model, a user owns their data and that data can only be read/edited by them and trusted people and apps. Apps take on a different function: they exist as \"windows\" that a user grants permissions to view or make edits to certain attributes of their data.<br><br>Often, the benefits of web3 technology are put in reactionary terms. That is, it's reacting to the overreaches/missteps of the current corporate stewards of the internet: censorship, sloppy or malicious use of user data, temporality (will I be able to see my photos on Facebook in 25 years? my archived emails on Gmail?), and so on. <br><br>One thing that we aim to do at Fission is not only address the failings of web2, but also create positive reasons to make the jump to web3.</p><p>Decentralized apps should be fun and easy for developers to create, and exciting for users to adopt because they offer features not possible in the old web. This was our motivation when developing our Portable User Settings. We wanted to give the intuition behind some of what's possible with web3 and a technical demo that a more robust version could be based on.<br><br>We also wanted to make this app completely p2p. No HTTP gateways required here! If your browser is IPFS-enabled and you're running a local daemon, the app connects to that daemon. If not, it gracefully sets up an in-browser instance of <a href=\"https://github.com/ipfs/js-ipfs\"><code>js-ipfs</code></a>.</p><p>There are lots of directions this could go. Maybe we want to enable universal dark mode so that all the websites you browse respect your global dark mode setting? Leave a comment on what portable user setting you'd like to see in the world.</p><h2 id=\"technical-results\">Technical Results</h2><p>This project yielded not only a pretty neat demo, but also some useful technical offshoots:<br><br><strong><a href=\"https://github.com/fission-suite/get-ipfs\">get-ipfs</a></strong><br>One of the biggest issues that developers can face when trying to make use of the decentralized web is the high barrier to entry. We wrapped our IPFS fallback functionality into it's own package: <a href=\"https://github.com/fission-suite/get-ipfs\">get-ipfs</a>. This is your new one-stop shop for loading an IPFS instance into a webpage. It's as simple as <code>const ipfs = await getIpfs()</code> and you can make direct P2P use of the decentralized web in your webapp. Give it a go and let us know how it works for you!<br><br><strong>Fission JavaScript Client</strong><br>This app was also our first time using the <a href=\"https://github.com/fission-suite/typescript-client\">Fission JavaScript client</a> in the wild. While adding/getting is done P2P, requests to pin must be sent over HTTP. The library, however, has all the functionality you need to make IPFS-enabled apps over HTTP. Check out the <a href=\"https://github.com/fission-suite/typescript-client\">library</a> and see what cool uses you can come up with!<br><br><strong>Hosted IPFS Node</strong><br>While we were already hosting an IPFS node, our hosted node is now much more robust. It's capable of handling secure websocket connects (so it can talk to in-browser <code>js-ipfs</code> nodes!) and stores data in S3. Check out the walkthrough we posted for <a href=\"https://talk.fission.codes/t/a-loosely-written-guide-to-hosting-an-ipfs-node-on-aws/234\">setting up your own IPFS node on AWS</a>!<br><br>Again, checkout the demo <a href=\"https://fission-suite.github.io/ipfs-user-settings/\">here</a>, or keep reading to find out how to build and host your own!</p><h2 id=\"run-deploy-your-own-app\">Run/Deploy your own app</h2><h3 id=\"fork-the-repo\">Fork the repo</h3><p><em>Note: This is only necessary if you are planning on deploying your own user settings app. If you just want to play around locally, you can simply clone the repository.</em><br><br>Click \"Fork\" in the upper-right corner of the repository.</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://s3.fission.codes/2019/09/fork-repo.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><h3 id=\"clone-the-repo-locally\">Clone the repo locally</h3><p>In your terminal, clone the <code>ipfs-user-settings</code> repo:</p><!--kg-card-begin: code--><pre><code>git clone https://github.com/$YOUR_USERNAME/ipfs-user-settings.git\ncd ipfs-user-settings</code></pre><!--kg-card-end: code--><h3 id=\"setup-environment\">Setup environment</h3><p>The environment variables are optional, but will need to be setup for the best user experience.</p><p>First, create a <code>.env</code> file in the root of the repository:<br><code>touch .env</code></p><p>Your <code>.env</code> will end up looking something like this:</p><!--kg-card-begin: code--><pre><code>REACT_APP_DEFAULT_CID = QmUWWqCNSdZmus7mc52um5cpqUi1CaE97AzBTY7iWfBXV9\nREACT_APP_BOOTSTRAP_NODE = /dns4/ipfs.runfission.com/tcp/4003/wss/ipfs/QmVLEz2SxoNiFnuyLpbXsH6SvjPTrHNMU88vCQZyhgBzgw\nREACT_APP_INTERPLANETARY_FISSION_URL = https://runfission.com\nREACT_APP_INTERPLANETARY_FISSION_USERNAME = ADD_USERNAME_HERE\nREACT_APP_INTERPLANETARY_FISSION_PASSWORD = ADD_PASSWORD_HERE\n</code></pre><!--kg-card-end: code--><p>Let's walk through what each of those variables will do.</p><p><code>REACT_APP_DEFAULT_CID</code>: the cid that contains the default settings that you want a new user to see. You can set it to the above value for our recommended defaults (or leave it blank and it will default to that).</p><p><em>**<em>Edited this section to reflect recent changes</em>**</em><br><code>REACT_APP_BOOTSTRAP_NODE_TCP</code>: the multiaddr of the ipfs node that you would like the user's node to connect to through tcp (for instance with a local daemon through <a href=\"https://github.com/ipfs-shipyard/ipfs-companion\">ipfs companion</a>). You can set it to the above value to connect to the IPFS node that Fission hosts (or leave it blank and it will default to that).<br><code>REACT_APP_BOOTSTRAP_NODE_WSS</code>: the multiaddr of the ipfs node that you would like the user's node to connect to through wss (if the user does not have an ipfs-enabled browser and falls back to an in-browser js-ipfs daemon). You can set it to the above value to connect  to the IPFS node that Fission hosts (or leave it blank and it will  default to that). <br><strong>Note:</strong> if you use a custom node, it must be interoperable with <code>js-ipfs</code>. This means that it either needs to connect via WebRTC or Secured Websockets (notice the <code>wss</code> in the above multiaddr).</p><p><code>REACT_APP_INTERPLANETARY_FISSION_...</code>: the last three variables are your provisioned account information for using the Fission web-api. These are used for pinning content to the Fission IPFS node so that content will stay online even after a user goes offline. If you leave them blank, the webapp will not pin user content. At the moment, these can be obtained by joining the <a href=\"https://elements.heroku.com/addons/interplanetary-fission\">Fission Heroku add-on alpha</a>. If you've tried out our earlier <a href=\"https://github.com/fission-suite/ipfs-photo-gallery\">photo gallery demo</a>, you can use the same credentials here, otherwise follow <a href=\"https://talk.fission.codes/t/ipfs-photo-gallery-in-alpha-mode/197/10\">that tutorial</a> to provision a username and password</p><h3 id=\"run-the-app-locally\">Run the app locally</h3><p>First install dependencies:<br><code>npm install</code></p><p>Then run the app:<br><code>npm run start</code></p><p>This will open up a page in your browser at <code>http://localhost:3000</code>!</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://s3.fission.codes/2019/09/run-local-terminal.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><p>Play around a bit! Try changing your settings, saving it, and loading past CIDs.</p><h3 id=\"build-app\">Build app</h3><p>In order for your app to build with the correct internal links, you'll need to change the homepage:<br>Open <code>package.json</code> and change the <code>homepage</code> to the url where this site will be hosted (<code>$YOUR_USERNAME.github.io/ipfs-user-settings</code>).</p><p>Build the app:<br><code>npm run build</code></p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://s3.fission.codes/2019/09/build-terminal.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><h3 id=\"deploy-app\"><br>Deploy app</h3><p>Deploy with your favorite tool: Heroku, GitHub pages, etc. Or if you're reading this a month from now, use the new \"Fission Live\" tool 😉<br><br>We've included a deployment command for GitHub pages.</p><p>First, make sure that your repository is set as the git remote.<br><strong>This won't work if it's still set to <code>fission-suite</code>.</strong></p><p>Run: <code>git remote -v</code> and ensure that that the url next to remote is <code>https://github.com/$YOUR_USERNAME/ipfs-user-settings.git</code></p><p>If you forked the repo earlier, this should be fine. If you do need to change your remote, just run<br><code>git remote set origin https://github.com/$YOUR_USERNAME/ipfs-user-settings.git</code></p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://s3.fission.codes/2019/09/check-remote.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><p>Deploy the app:<br><code>npm run deploy</code></p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://s3.fission.codes/2019/09/deploy.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><p>Now open your browser to <code>$YOUR_USERNAME.github.io/ipfs-user-settings</code> to see your site up and running!<br><br>Let us know how it goes! We're always eager to hear any feedback so come join the conversation on <a href=\"https://talk.fission.codes/\">our forum</a>, <a href=\"https://discord.gg/daDMAjE\">Discord</a>, or <a href=\"https://github.com/fission-suite/\">GitHub</a>.</p>","url":"https://blog.fission.codes/ipfs-user-settings-app/","canonical_url":null,"uuid":"3fad4646-11d0-47e7-b60c-75eec278c562","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5d76bcdec6f24b001eb931e9","reading_time":null}},{"node":{"id":"Ghost__Post__5d1ce6d0030782001ed97a62","title":"FISSION Fragments #7: Weekly Links Roundup","slug":"fission-fragments-7","featured":false,"feature_image":"https://images.unsplash.com/photo-1457803097035-3ace37af34a7?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","excerpt":"Fragments weekly links: OpenID Foundation asks \"Sign in with Apple\" to comply with the spec, Golem launches gWASM, Textile talks IPFSCamp, dschenkelman talks about internal tools teams.","custom_excerpt":"Fragments weekly links: OpenID Foundation asks \"Sign in with Apple\" to comply with the spec, Golem launches gWASM, Textile talks IPFSCamp, dschenkelman talks about internal tools teams.","created_at_pretty":"03 July, 2019","published_at_pretty":"05 July, 2019","updated_at_pretty":"05 July, 2019","created_at":"2019-07-03T10:33:04.000-07:00","published_at":"2019-07-04T17:13:33.000-07:00","updated_at":"2019-07-04T17:13:33.000-07:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"},{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"}],"primary_author":{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"},"primary_tag":{"name":"FISSION Fragments","slug":"fragments","description":"Our weekly round up of links to interesting articles, projects, and more.","feature_image":"https://s3.fission.codes/2019/05/patrick-mcmanaman-116034-unsplash1900.jpg","meta_description":null,"meta_title":null},"tags":[{"name":"FISSION Fragments","slug":"fragments","description":"Our weekly round up of links to interesting articles, projects, and more.","feature_image":"https://s3.fission.codes/2019/05/patrick-mcmanaman-116034-unsplash1900.jpg","meta_description":null,"meta_title":null},{"name":"OpenID","slug":"openid","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"IPFS","slug":"ipfs","description":"InterPlanetary File System","feature_image":null,"meta_description":null,"meta_title":null},{"name":"Golem Project","slug":"golem-project","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"Welcome to FISSION Fragments #7  - our regular newsletter of awesome links. Want\nto get them delivered straight to your inbox? Subscribe! We tweet the links\nafter we publish on our Twitter account @fissioncodes\n[https://twitter.com/FISSIONCodes], or join our Discord chat\n[https://fission.codes/discord]  to see them in real time.\n\n\n--------------------------------------------------------------------------------\n\nAt Apple's developer conference, they announced their new Sign In With Apple, a\nuser login system that will, among other things, generate a random email address\nper app / sign in (WWDC 2019 Session Video\n[https://developer.apple.com/videos/play/wwdc2019/706/]).\n\nNow, the OpenID Foundation has published an open letter to Apple, asking them to\ncomply with the spec:\n\n> It appears Apple has largely adopted OpenID Connect for their Sign In with Apple\nimplementation offering, or at least has intended to. Known differences between\nthe two are tracked in a document managed by the OIDF certification team, found\nhere: \nhttps://bitbucket.org/openid/connect/src/default/How-Sign-in-with-Apple-differs-from-OpenID-Connect.md\n.\n\nThe current set of differences between OpenID Connect and Sign In with Apple\nreduces the places where users can use Sign In with Apple and exposes them to\ngreater security and privacy risks. It also places an unnecessary burden on\ndevelopers of both OpenID Connect and Sign In with Apple. By closing the current\ngaps, Apple would be interoperable with widely-available OpenID Connect Relying\nParty software.\n\n--------------------------------------------------------------------------------\n\nThe Golem Project announces support for heavy compute tasks on their network\nusing WASM binaries through their gWASM implementation\n[https://blog.golemproject.net/gwasm-in-answers-some-things-you-need-to-know-about-our-latest-use-case/]\n.\n\n\n--------------------------------------------------------------------------------\n\nThe Textile team went to IPFS Camp and came back with a blog post of all their\nhighlights and takeaways\n[https://medium.com/textileio/ipfs-camp-2019-the-highlights-and-takeaways-2b3cb4f42513]\n. This Filecoin vs IPFS tidbit was interesting:\n\n> Filecoin was not the focus of any projects I spoke with, and only came up in a\nfew general conversations. To me, that signals that IPFS is going to be a robust\nand independent technology for as long as I can see, and the success of Filecoin\nwill be independent from the success of the IPFS network.\n\n--------------------------------------------------------------------------------\n\nGreat tweet thread by @dschenkelman\n[https://twitter.com/dschenkelman/status/1145756194184806400], Director of\nEngineering at Auth0, on internal tools teams:\n\n> 1/15 For the last 2.5 years I've been working with the Internal Tools teams \n@auth0 [https://twitter.com/auth0?ref_src=twsrc%5Etfw].\n\nWhy have an internal tools team?\nThe typical answer is economies of scale, standardizing through code rather than\njust proces\n\n— Yenkel (@dschenkelman) July 1, 2019\n[https://twitter.com/dschenkelman/status/1145756194184806400?ref_src=twsrc%5Etfw]\nThis also reminded me of a 2015 post by Peter Seibel on Engineering\nEffectiveness at Twitter, titled \"Let a 1000 flowers bloom, then rip 999 out by\nthe roots\".\n[https://talk.fission.codes/t/engineering-effectiveness-at-twitter-peter-seibel-2015/146]\n\n\n--------------------------------------------------------------------------------\n\nCover image [https://unsplash.com/photos/-uPDkAK6f8A]  by hollymindrup\n[https://unsplash.com/@hollymindrup]","html":"<p>Welcome to <strong>FISSION Fragments #7</strong> - our regular newsletter of awesome links. Want to get them delivered straight to your inbox? <a href=\"#subscribe\">Subscribe</a>! We tweet the links after we publish on <a href=\"https://twitter.com/FISSIONCodes\">our Twitter account @fissioncodes</a>, or join our <a href=\"https://fission.codes/discord\">Discord chat</a> to see them in real time.</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p>At Apple's developer conference, they announced their new <strong>Sign In With Apple</strong>, a user login system that will, among other things, generate a random email address per app / sign in (<a href=\"https://developer.apple.com/videos/play/wwdc2019/706/\">WWDC 2019 Session Video</a>).</p><p>Now, the OpenID Foundation has published an open letter to Apple, asking them to comply with the spec:</p><blockquote>It appears Apple has largely adopted OpenID Connect for their Sign In with Apple implementation offering, or at least has intended to. Known differences between the two are tracked in a document managed by the OIDF certification team, found here: <a href=\"https://bitbucket.org/openid/connect/src/default/How-Sign-in-with-Apple-differs-from-OpenID-Connect.md\">https://bitbucket.org/openid/connect/src/default/How-Sign-in-with-Apple-differs-from-OpenID-Connect.md</a>.<br><br>The current set of differences between OpenID Connect and Sign In with Apple reduces the places where users can use Sign In with Apple and exposes them to greater security and privacy risks. It also places an unnecessary burden on developers of both OpenID Connect and Sign In with Apple. By closing the current gaps, Apple would be interoperable with widely-available OpenID Connect Relying Party software.</blockquote><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://s3.fission.codes/2019/07/gWASM-develop-apps.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><p>The Golem Project announces support for <a href=\"https://blog.golemproject.net/gwasm-in-answers-some-things-you-need-to-know-about-our-latest-use-case/\">heavy compute tasks on their network using WASM binaries through their gWASM implementation</a>.</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p>The Textile team went to <a href=\"https://medium.com/textileio/ipfs-camp-2019-the-highlights-and-takeaways-2b3cb4f42513\">IPFS Camp and came back with a blog post of all their highlights and takeaways</a>. This Filecoin vs IPFS tidbit was interesting:</p><blockquote>Filecoin was not the focus of any projects I spoke with, and only came up in a few general conversations. To me, that signals that IPFS is going to be a robust and independent technology for as long as I can see, and the success of Filecoin will be independent from the success of the IPFS network.</blockquote><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p>Great <a href=\"https://twitter.com/dschenkelman/status/1145756194184806400\">tweet thread by @dschenkelman</a>, Director of Engineering at Auth0, on internal tools teams:</p><!--kg-card-begin: embed--><figure class=\"kg-card kg-embed-card\"><blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">1/15 For the last 2.5 years I&#39;ve been working with the Internal Tools teams <a href=\"https://twitter.com/auth0?ref_src=twsrc%5Etfw\">@auth0</a>.<br><br>Why have an internal tools team?<br>The typical answer is economies of scale, standardizing through code rather than just proces</p>&mdash; Yenkel (@dschenkelman) <a href=\"https://twitter.com/dschenkelman/status/1145756194184806400?ref_src=twsrc%5Etfw\">July 1, 2019</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n</figure><!--kg-card-end: embed--><p>This also reminded me of a 2015 post by Peter Seibel on <a href=\"https://talk.fission.codes/t/engineering-effectiveness-at-twitter-peter-seibel-2015/146\">Engineering Effectiveness at Twitter, titled \"Let a 1000 flowers bloom, then rip 999 out by the roots\".</a></p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p><a href=\"https://unsplash.com/photos/-uPDkAK6f8A\">Cover image</a> by <a href=\"https://unsplash.com/@hollymindrup\">hollymindrup</a></p>","url":"https://blog.fission.codes/fission-fragments-7/","canonical_url":null,"uuid":"a2c77ad4-6cb5-4810-99a5-c982d6da644d","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5d1ce6d0030782001ed97a62","reading_time":null}},{"node":{"id":"Ghost__Post__5ceda0a70bff56001eb87dd5","title":"FISSION Interviews: Y3","slug":"interview-y3","featured":false,"feature_image":"https://s3.fission.codes/2019/06/Untitled-2-01-1.png","excerpt":"Dive into an IPFS hack from ETHNewYork by Kian Molani called Y3: a decentralized and censorship-resistant video streaming application","custom_excerpt":"Dive into an IPFS hack from ETHNewYork by Kian Molani called Y3: a decentralized and censorship-resistant video streaming application","created_at_pretty":"28 May, 2019","published_at_pretty":"20 June, 2019","updated_at_pretty":"20 June, 2019","created_at":"2019-05-28T13:57:11.000-07:00","published_at":"2019-06-20T06:22:37.000-07:00","updated_at":"2019-06-20T07:08:06.000-07:00","meta_title":null,"meta_description":"Dive into an IPFS hack from ETHNewYork by Kian Molani called Y3: a decentralized and censorship-resistant video streaming application","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Trenton Van Epps","slug":"trenton","bio":"Former architect working to grow the Ethereum ecosystem and Web3 tech.","profile_image":"https://s3.fission.codes/2019/05/14054274_10155286912259062_1515671855628123823_o.jpg","twitter":"@trent_vanepps","facebook":null,"website":null}],"primary_author":{"name":"Trenton Van Epps","slug":"trenton","bio":"Former architect working to grow the Ethereum ecosystem and Web3 tech.","profile_image":"https://s3.fission.codes/2019/05/14054274_10155286912259062_1515671855628123823_o.jpg","twitter":"@trent_vanepps","facebook":null,"website":null},"primary_tag":{"name":"EthNewYork","slug":"ethnewyork","description":null,"feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"EthNewYork","slug":"ethnewyork","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"IPFS","slug":"ipfs","description":"InterPlanetary File System","feature_image":null,"meta_description":null,"meta_title":null},{"name":"Interview","slug":"interview","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"hackathon","slug":"hackathon","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Ethereum","slug":"ethereum","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"This is the third post in a series that highlights projects developing solutions\nthat challenge the current norms of user dependency on the cloud. Given the ever\npresent challenges related to privacy, database breaches and platform lock-in,\nit's crucial to begin returning data autonomy back to users. \n\nThis post highlights an ETHNewYork [https://ethnewyork.com/]  submission from \nKian Molani [https://twitter.com/KianMolani]  called Y3\n[https://devpost.com/software/y3-l8w9mx]: \"a decentralized and\ncensorship-resistant video streaming application that uses Ethereum and IPFS as\nits core technologies.\" ETHNewYork was the first hackathon run in NYC by\nETHglobal, an organisation dedicated to onboarding new Ethereum developers.\nFirst we'll look at how the project works, followed by a few questions FISSION\nasked the team about their background and hackathon experience.\n\nHackathon Devpost: https://devpost.com/software/y3-l8w9mx\n\nRepo: https://github.com/KianMolani/decentralized_video_streaming_app\n\n\n--------------------------------------------------------------------------------\n\nHow Y3 works\nThe name originated as an aspirational take on where video platforms might head\nin our distributed future. If Youtube (Y2) is a legacy system that can censor\nusers and withhold payments for content, Y3 is an exploration towards a future\nwhere new possibilities open up. Self-hosted, replicated content can't be taken\ndown, and payments over Ethereum are censorship resistant to a high degree.\n\nThe first step for users is to be running or have access to an IPFS node. After\nloading their content into the IPFS interface [https://dist.ipfs.io/#go-ipfs],\nusers submit a content hash to the Y3 onchain Ethereum contract. The video\nmetadata gets stored in a contract array to be accessed later by users.\n\nPayment, if required, would be handled via a Python script, conditional upon\nsuccessful delivery of content from the IPFS network. The contract would then\ncall a function that sets up the transaction. This is one thing that still needs\nto be developed for the project to operate properly. According to Kian,  this\nkind of payment scheme wouldn't be practical in reality: \n\n> Instead, an implementation of either state channels or probabilistic\nmicropayments –with the total time of video content already streamed taken to be\nthe primary metric for payment – would be more apt.\nHLS [https://en.wikipedia.org/wiki/HTTP_Live_Streaming]  (HTTP Live Streaming)\nand IPNS [https://docs.ipfs.io/guides/concepts/ipns/]  (InterPlanetary Naming\nSystem) integrations are also still under development. For now, Y3 can only\nserve static content. IPNS would make those links mutable, and would update the\ncontent address as new chunks of data come in.\n\nOther important libraries used are web3.JS\n[https://web3js.readthedocs.io/en/1.0/], Infura's API\n[https://infura.io/docs/gettingStarted/makeRequests.md]  for Ethereum\nintegration, and FFmpeg [https://ffmpeg.org/]  for HLS capable video editing.\n\nIn the future, Kian would like to add a more intuitive frontend. The FISSION\nteam is looking forward to seeing where the project ends up and what functions\nhe can integrate!\n\n\n--------------------------------------------------------------------------------\n\nFinally, here are a few additional questions we had Kian answer about his\nbackground and the hackathon itself:\n\nWhat’s your background as a developer?\n\nI’m currently 21, and so I’m still pursuing my undergrad. As an Engineering\nPhysics major, I’m not left with a lot of time during the semester to develop\nEthereum-related projects, but do develop data processing and machine learning\nsoftware professionally. When I have the time, most of the work that I do in the\ndecentralized space are through hackathons. Thus far, I’ve been to two ETHGlobal\nevents, where the focus of my energy has been to develop two pieces of tech — a\ndecentralized video streaming application and a decentralized computation\napplication.\n\nWhat got you into Ethereum / IPFS / decentralization initially?\n\nI along with most of my peers had heard of the decentralized space via word of\nmouth - at the time, most of the popular discussion surrounded cryptocurrencies.\nOut of curiosity and a desire to distinguish ourselves from the hype, my\ncolleagues and I decided to look more carefully at the tech behind all these\npopular ideas. Eventually, we came to a point where we were able to judge, for\nourselves, that the technology had real value and a wide selection of practical\nand worth-while use cases. Naturally, this realization lent itself to a\nheightened sense of curiosity and greater exposure to more complex and\ncutting-edge developments in the space.\n\nWhere do you go to read tech news / developer news?\n\nFor tech and developer news, I find Twitter to be ideal. In a sense, Twitter is\na very weak filter on ideas, and so when you have a community that is very\nactive on the platform (which is the case for decentralized technologies), the\nresult is a large number of leading figures engaged in discussions on very novel\nconcepts. The downside to this kind of environment is that you’re forced to\njudge for yourself the quality of ideas that have not yet been fully hashed out,\nwhile the upside is that you’re exposed to ideas soon after they’re born.\n\nIn general, talk about your hackathon experience? Highs / lows?\n\nOne of the strong points of this hackathon was that there was a large pool of\nsponsors present there to talk about their products. This made for very fruitful\nand exciting workshops, and along with the large number of high quality hackers\npresent, meant that exposure to new and exciting projects was high.\n\nWhat inspired Y3?\n\nA video steaming application is one of those use cases for decentralized\ntechnologies where the benefits are very obvious to see – you don’t have go\nthrough leaps in logic to explain why it would be useful for people. As a\nplatform, video streaming applications are one of the hallmark luxuries that\nwe’ve been afforded due to the Internet. With them, people are able to share all\nkinds of information in a way that is immediately accessible and highly\nengaging. This luxury, however, isn’t afforded to the billions of people around\nthe world whose governments maintain tight control on Internet transparency.\nThus, the market for this kind of product is huge, and the motivation for the\npursuit of its realization is noble.\n\nWhat made you want to integrate IPFS?\n\nIPFS emerged as a natural solution to what I wanted, and that was a way to store\nthe contents of videos on a decentralized, peer-to-peer network. As a solution,\nit was fairly elegant – the only major disadvantage being the lack of\npersistence of content on the network. This issue, however, is actively being\naddressed by developers of the protocol.\n\nWhat challenges did you experience integrating IPFS?\n\nConnecting my computer to the IPFS network and integrating the appropriate\nPython client libraries were all very straightforward. By far, the biggest\nchallenge that I encountered was in trying to use IPFS in a way that allowed for\nHLS functionality (HLS is a communications protocol that allows for the bit rate\nof incoming data to vary in accordance with the quality of network\nconnectivity).\n\nWhat was the most useful feedback you received from judges or other hackathon\nparticipants?\n\nAfter expressing the difficulty that I encountered in trying to properly\nintegrate IPFS with HLS, I was able to obtain feedback from a gentleman from\nLivepeer (a Platform as a Service used by developers to add videos to their\nprojects). He explained how I could use IPNS (a system used to update links to\nIPFS content) to handle updating a pointer to the hash of the file contents\nperiodically.\n\nAny plans to keep working on the project?\n\nYes. My application does not completely function as intended. I will finish\nproperly implementing HLS functionality and then go on to share the project\nonline.\n\nIn hindsight what’s something you may have done differently for either the\nproject or the hackathon?\n\nI actually anticipated the issue that I had regarding the implementation of HLS\nfunctionality with IPFS before I even started the project. In hindsight, I\nshould have sought out a solution to my problem well before I ever encountered\nit.\n\n\n--------------------------------------------------------------------------------\n\n\nThanks Kian for spending time to help get this post ready for others to learn\nfrom. FISSION is gearing up to launch our first product into Alpha testing: \njoin\nus here [https://www.producthunt.com/upcoming/fission-tools]  if you're\ninterested in poking around the distributed frontier!\n\n\n--------------------------------------------------------------------------------\n\nCover image [https://unsplash.com/photos/WshiPS0giIg]  from Craig Whitehead\n[https://unsplash.com/@sixstreetunder]","html":"<p>This is the third post in a series that highlights projects developing solutions that challenge the current norms of user dependency on the cloud. Given the ever present challenges related to privacy, database breaches and platform lock-in, it's crucial to begin returning data autonomy back to users. </p><p>This post highlights an <a href=\"https://ethnewyork.com/\">ETHNewYork</a> submission from <a href=\"https://twitter.com/KianMolani\">Kian Molani</a> called <a href=\"https://devpost.com/software/y3-l8w9mx\">Y3</a>: \"a decentralized and censorship-resistant video streaming application that uses Ethereum and IPFS as its core technologies.\" ETHNewYork was the first hackathon run in NYC by ETHglobal, an organisation dedicated to onboarding new Ethereum developers. First we'll look at how the project works, followed by a few questions FISSION asked the team about their background and hackathon experience.</p><p>Hackathon Devpost: <a href=\"https://devpost.com/software/y3-l8w9mx\">https://devpost.com/software/y3-l8w9mx</a></p><p>Repo: <a href=\"https://github.com/KianMolani/decentralized_video_streaming_app\">https://github.com/KianMolani/decentralized_video_streaming_app</a></p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><h3 id=\"how-y3-works\">How Y3 works</h3><p>The name originated as an aspirational take on where video platforms might head in our distributed future. If Youtube (Y2) is a legacy system that can censor users and withhold payments for content, Y3 is an exploration towards a future where new possibilities open up. Self-hosted, replicated content can't be taken down, and payments over Ethereum are censorship resistant to a high degree.</p><p>The first step for users is to be running or have access to an IPFS node. After loading their content into the <a href=\"https://dist.ipfs.io/#go-ipfs\">IPFS interface</a>, users submit a content hash to the Y3 onchain Ethereum contract. The video metadata gets stored in a contract array to be accessed later by users.</p><p>Payment, if required, would be handled via a Python script, conditional upon successful delivery of content from the IPFS network. The contract would then call a function that sets up the transaction. This is one thing that still needs to be developed for the project to operate properly. According to Kian,  this kind of payment scheme wouldn't be practical in reality: </p><blockquote>Instead, an implementation of either state channels or probabilistic micropayments –with the total time of video content already streamed taken to be the primary metric for payment – would be more apt.</blockquote><p><a href=\"https://en.wikipedia.org/wiki/HTTP_Live_Streaming\">HLS</a> (HTTP Live Streaming) and <a href=\"https://docs.ipfs.io/guides/concepts/ipns/\">IPNS</a> (InterPlanetary Naming System) integrations are also still under development. For now, Y3 can only serve static content. IPNS would make those links mutable, and would update the content address as new chunks of data come in.</p><p>Other important libraries used are <a href=\"https://web3js.readthedocs.io/en/1.0/\">web3.JS</a>, <a href=\"https://infura.io/docs/gettingStarted/makeRequests.md\">Infura's API</a> for Ethereum integration, and <a href=\"https://ffmpeg.org/\">FFmpeg</a> for HLS capable video editing.</p><p>In the future, Kian would like to add a more intuitive frontend. The FISSION team is looking forward to seeing where the project ends up and what functions he can integrate!</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://s3.fission.codes/2019/06/blog-header-image-19.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p>Finally, here are a few additional questions we had Kian answer about his background and the hackathon itself:</p><p><strong>What’s your background as a developer?</strong></p><p>I’m currently 21, and so I’m still pursuing my undergrad. As an Engineering Physics major, I’m not left with a lot of time during the semester to develop Ethereum-related projects, but do develop data processing and machine learning software professionally. When I have the time, most of the work that I do in the decentralized space are through hackathons. Thus far, I’ve been to two ETHGlobal events, where the focus of my energy has been to develop two pieces of tech — a decentralized video streaming application and a decentralized computation application.</p><p><strong>What got you into Ethereum / IPFS / decentralization initially?</strong></p><p>I along with most of my peers had heard of the decentralized space via word of mouth - at the time, most of the popular discussion surrounded cryptocurrencies. Out of curiosity and a desire to distinguish ourselves from the hype, my colleagues and I decided to look more carefully at the tech behind all these popular ideas. Eventually, we came to a point where we were able to judge, for ourselves, that the technology had real value and a wide selection of practical and worth-while use cases. Naturally, this realization lent itself to a heightened sense of curiosity and greater exposure to more complex and cutting-edge developments in the space.</p><p><strong>Where do you go to read tech news / developer news?</strong></p><p>For tech and developer news, I find Twitter to be ideal. In a sense, Twitter is a very weak filter on ideas, and so when you have a community that is very active on the platform (which is the case for decentralized technologies), the result is a large number of leading figures engaged in discussions on very novel concepts. The downside to this kind of environment is that you’re forced to judge for yourself the quality of ideas that have not yet been fully hashed out, while the upside is that you’re exposed to ideas soon after they’re born.</p><p><strong>In general, talk about your hackathon experience? Highs / lows?</strong></p><p>One of the strong points of this hackathon was that there was a large pool of sponsors present there to talk about their products. This made for very fruitful and exciting workshops, and along with the large number of high quality hackers present, meant that exposure to new and exciting projects was high.</p><p><strong>What inspired Y3?</strong></p><p>A video steaming application is one of those use cases for decentralized technologies where the benefits are very obvious to see – you don’t have go through leaps in logic to explain why it would be useful for people. As a platform, video streaming applications are one of the hallmark luxuries that we’ve been afforded due to the Internet. With them, people are able to share all kinds of information in a way that is immediately accessible and highly engaging. This luxury, however, isn’t afforded to the billions of people around the world whose governments maintain tight control on Internet transparency. Thus, the market for this kind of product is huge, and the motivation for the pursuit of its realization is noble.</p><p><strong>What made you want to integrate IPFS?</strong></p><p>IPFS emerged as a natural solution to what I wanted, and that was a way to store the contents of videos on a decentralized, peer-to-peer network. As a solution, it was fairly elegant – the only major disadvantage being the lack of persistence of content on the network. This issue, however, is actively being addressed by developers of the protocol.</p><p><strong>What challenges did you experience integrating IPFS?</strong></p><p>Connecting my computer to the IPFS network and integrating the appropriate Python client libraries were all very straightforward. By far, the biggest challenge that I encountered was in trying to use IPFS in a way that allowed for HLS functionality (HLS is a communications protocol that allows for the bit rate of incoming data to vary in accordance with the quality of network connectivity).</p><p><strong>What was the most useful feedback you received from judges or other hackathon participants?</strong></p><p>After expressing the difficulty that I encountered in trying to properly integrate IPFS with HLS, I was able to obtain feedback from a gentleman from Livepeer (a Platform as a Service used by developers to add videos to their projects). He explained how I could use IPNS (a system used to update links to IPFS content) to handle updating a pointer to the hash of the file contents periodically.</p><p><strong>Any plans to keep working on the project?</strong></p><p>Yes. My application does not completely function as intended. I will finish properly implementing HLS functionality and then go on to share the project online.</p><p><strong>In hindsight what’s something you may have done differently for either the project or the hackathon?</strong></p><p>I actually anticipated the issue that I had regarding the implementation of HLS functionality with IPFS before I even started the project. In hindsight, I should have sought out a solution to my problem well before I ever encountered it.</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://s3.fission.codes/2019/06/blog-header-image-18.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><p><br>Thanks Kian for spending time to help get this post ready for others to learn from. FISSION is gearing up to launch our first product into Alpha testing: <a href=\"https://www.producthunt.com/upcoming/fission-tools\">join us here</a> if you're interested in poking around the distributed frontier!</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p><em><a href=\"https://unsplash.com/photos/WshiPS0giIg\">Cover image</a> from <a href=\"https://unsplash.com/@sixstreetunder\">Craig Whitehead</a></em></p>","url":"https://blog.fission.codes/interview-y3/","canonical_url":null,"uuid":"144e9c98-16c6-476f-81f0-6dd8f592bc24","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5ceda0a70bff56001eb87dd5","reading_time":null}},{"node":{"id":"Ghost__Post__5ced76e00bff56001eb87d96","title":"FISSION Interviews: Diffuse","slug":"fission-interviews-diffuse","featured":false,"feature_image":"https://images.unsplash.com/photo-1512998844734-cd2cca565822?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","excerpt":"Interviewing Steven Vandevelde, the creator of Diffuse: a tool that connects you to your cloud/distributed music storage.","custom_excerpt":"Interviewing Steven Vandevelde, the creator of Diffuse: a tool that connects you to your cloud/distributed music storage.","created_at_pretty":"28 May, 2019","published_at_pretty":"13 June, 2019","updated_at_pretty":"13 June, 2019","created_at":"2019-05-28T10:58:56.000-07:00","published_at":"2019-06-13T12:48:29.000-07:00","updated_at":"2019-06-13T13:20:59.000-07:00","meta_title":null,"meta_description":"Interviewing Steven Vandevelde, the creator of Diffuse: a tool that connects to your cloud/distributed music storage","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Trenton Van Epps","slug":"trenton","bio":"Former architect working to grow the Ethereum ecosystem and Web3 tech.","profile_image":"https://s3.fission.codes/2019/05/14054274_10155286912259062_1515671855628123823_o.jpg","twitter":"@trent_vanepps","facebook":null,"website":null}],"primary_author":{"name":"Trenton Van Epps","slug":"trenton","bio":"Former architect working to grow the Ethereum ecosystem and Web3 tech.","profile_image":"https://s3.fission.codes/2019/05/14054274_10155286912259062_1515671855628123823_o.jpg","twitter":"@trent_vanepps","facebook":null,"website":null},"primary_tag":{"name":"IPFS","slug":"ipfs","description":"InterPlanetary File System","feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"IPFS","slug":"ipfs","description":"InterPlanetary File System","feature_image":null,"meta_description":null,"meta_title":null},{"name":"Blockstack","slug":"blockstack","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"music","slug":"music","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Interview","slug":"interview","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Local Software","slug":"local-software","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"This is the second post in a series that highlights projects developing\nsolutions that challenge the current norms of user dependency on the cloud.\nGiven the ever present challenges related to privacy, database breaches and\nplatform lock-in, it's crucial to begin returning data autonomy back to users. \n\nFor this issue, we're diving into Steven Vandevelde\n[https://twitter.com/icidasset]'s Diffuse: a music player that connects to your\ncloud/distributed music storage. First we'll look at how the project works,\nfollowed by a few questions FISSION asking about Steven's background.\n\nRepo: https://github.com/icidasset/diffuse\n\nTry it out yourself: https://diffuse.sh [https://diffuse.sh/]\n\n\n--------------------------------------------------------------------------------\n\nHow does Diffuse work\n\nThe basic idea is that users should be able to access music files they own from\nanywhere, even local content.  This ranges from cloud servers like Dropbox or\nGoogle Drive to distributed storage solutions like IPFS. Steven has been\niterating on Diffuse, written in Elm [https://elm-lang.org/], for over 6 years\nnow. The Diffuse About [https://diffuse.sh/about/]  page also has some good\ninformation.\n\nThere are three main pieces to the product: the user data storage,  the file  \nstorage medium, and  the frontend  which sits between them both. \n\nTo start a user would navigate to diffuse.sh [https://diffuse.sh], no need to\ninstall anything. In the current V1, users can authenticate themselves through \nBlockstack [https://blockstack.org/], Remote Storage [https://remotestorage.io/] \n or use the product anonymously via the browser.\n\nhere's what the user sees firstUsing a proper authentication method allows users\nto save things like music metadata, user favourites, and settings, whereas an\n\"anonymous\" login may result in data loss if the browser is cleared. Once they\nhave been authenticated, users are able to add new content or access previously\nadded content. \n\nThe user facing front-end is hosted on Netlify [https://www.netlify.com/].\nFurther down the decentralisation spectrum, it's certainly possible to self-host\nthe frontend by downloading the html and mimicking Netlify (check this IPFS +\nENS site hosting tutorial\n[https://gateway.ipfs.io/ipfs/QmUJKsA1FQRo4rGKJ9WAXNnv6o6HXy4NoJiWH97gPZUddV/ens+ipfs/ENSIPFS-Part-1-Introduction.html]\n). \n\nHere's an example of what would happen under the hood for a file hosted on\nGoogle Drive. Once a user authenticates on Diffuse and requests to add a file,\nthey will be logged into their Google account and asked to allow permissions to\nthe Diffuse app. Once granted, the app will request that Drive construct a\nfiletree, which is a list containing the path to every audio file. It works in\nchunks of 1000 files requested from each url and then gets the music\ntags/metadata from each file via the JSmediatags library\n[https://github.com/aadsm/jsmediatags]. The parsed metadata from those files is\nthen cached in a user's storage provider: in V1 this is limited to either\nBlockstack or RemoteStorage. That way, when a user logs in and any metadata from\npreviously loaded music is already there.\n\nOnce music on the storage medium has been identified and the metadata cached,\nthe app users can enjoy whatever music files they have saved. Content searching\nis facilitated by the Lunr library [https://github.com/olivernn/lunr.js/].\n\nA V2 is already in the works to make the entire product more user friendly. This\nnext version will have data encryption, and even more storage options, including\n Textile [https://textile.io/]  for user data, or Blockstack's Gaia\n[https://docs.blockstack.org/storage/overview.html]  for file access. Fission is\nlooking forward to when the V2 is live hopefully later this summer. We'll plan\nto do a blog post then detailing any of the updates.\n\n\n--------------------------------------------------------------------------------\n\nFinally, here's a set of questions we asked Steven.\n\nWhat’s your background as a developer?\n\nStarted with web dev as a hobby when I was 15 (I’m 29 now). First gig was for a\nweb agency, mainly doing small artsy websites and a cms using ruby. Four years\nlater I started working for another agency, but mainly doing app development.\nI've been doing all kinds of dev things in my spare time, but my main side\nproject for the last 8 years has been Diffuse and its predecessors.\n\nWhere do you go to read tech news / developer news?\n\nTwitter, email newsletters, slack/discord channels\n\nWhat first inspired Diffuse?\n\nSomeone asked me to build a UI for https://github.com/trevorturk/kzak, and at\nthe same time I was collecting music. Seemed like an interesting idea and fun to\nwork on. Also, I used Spotify for a while, but they kept silently removing some\nof my favourite music, after that I never turned back.\n\nHow has user testing gone?\n\nCould be better. People like the design, made a few feature requests, but never\nreally expressed what could be better. That said, Blockstack recently put\nDiffuse on https://www.trymyui.com/  which has given me good feedback.\n\nWhere have you gotten the bulk of your users?\n\nIPFS forum, https://electronjs.org/apps/diffuse  and chinese/japanese blogs\nabout IPFS. I think… I don’t have any analytics except on Github, so I don’t\nreally know.\n\nWhat was the most useful feedback you’ve received?\n\n“I don’t know how to use this”\n\nWhat is the benefit of using Blockstack? Drawbacks?\n\nEasy decentralized authentication. Drawback, way too much javascript, bad\nperformance.\n\nIf you were to redesign or reset your structure what would you have done\ndifferently?\n\nI’m currently working on V2, which is built from scratch. So this’ll be easy to\nanswer 😄 I like the design very much so that stayed the same, just more fine\ntuned, more attention to detail. Structure has improved as well, better\nperformance, moved more things on the web-worker side, easier to extend (build\non).\n\nWhat challenges did you experience integrating IPFS?\n\n  I don’t really remember the music-storage integration, was over a year ago.\nBut I think it went pretty smoothly, except for a CORS issue which was later\nresolved in go-ipfs. I recently did IPFS “authentication”, or in other words\nuser-data storage, which is the unpublished work-in-progress V2. That was more\nchallenging, I had to find a good way to encrypt the user’s data.\n\n\n--------------------------------------------------------------------------------\n\nThanks Steven for spending time to help get this ready for others to learn from.\nWe'll be posting other IPFS projects on this blog as well >> be sure to check\nback soon.\n\n\n--------------------------------------------------------------------------------\n\nCover image [https://unsplash.com/photos/9f1gCaLkZBU]  from David Jorre\n[https://unsplash.com/@davidjorre]","html":"<p>This is the second post in a series that highlights projects developing solutions that challenge the current norms of user dependency on the cloud. Given the ever present challenges related to privacy, database breaches and platform lock-in, it's crucial to begin returning data autonomy back to users. </p><p>For this issue, we're diving into <a href=\"https://twitter.com/icidasset\">Steven Vandevelde</a>'s Diffuse: a music player that connects to your cloud/distributed music storage. First we'll look at how the project works, followed by a few questions FISSION asking about Steven's background.</p><p>Repo: <a href=\"https://github.com/icidasset/diffuse\">https://github.com/icidasset/diffuse</a></p><p>Try it out yourself: <a href=\"https://diffuse.sh/\">https://diffuse.sh</a></p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p><strong>How does Diffuse work</strong></p><p>The basic idea is that users should be able to access music files they own from anywhere, even local content.  This ranges from cloud servers like Dropbox or Google Drive to distributed storage solutions like IPFS. Steven has been iterating on Diffuse, <a href=\"https://elm-lang.org/\">written in Elm</a>, for over 6 years now. The Diffuse <a href=\"https://diffuse.sh/about/\">About</a> page also has some good information.</p><p>There are three main pieces to the product: the <strong>user data storage,</strong> the <strong>file</strong> <strong>storage medium, </strong>and<strong> </strong>the <strong>frontend</strong> which sits between them both. </p><p>To start a user would navigate to <a href=\"https://diffuse.sh\">diffuse.sh</a>, no need to install anything. In the current V1, users can authenticate themselves through <a href=\"https://blockstack.org/\">Blockstack</a>, <a href=\"https://remotestorage.io/\">Remote Storage</a> or use the product anonymously via the browser.  </p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://s3.fission.codes/2019/06/Screen-Shot-2019-06-13-at-11.26.10.png\" class=\"kg-image\"><figcaption>here's what the user sees first</figcaption></figure><!--kg-card-end: image--><p>Using a proper authentication method allows users to save things like music metadata, user favourites, and settings, whereas an \"anonymous\" login may result in data loss if the browser is cleared. Once they have been authenticated, users are able to add new content or access previously added content. </p><p>The user facing front-end is hosted on <a href=\"https://www.netlify.com/\">Netlify</a>. Further down the decentralisation spectrum, it's certainly possible to self-host the frontend by downloading the html and mimicking Netlify (check this IPFS + ENS site <a href=\"https://gateway.ipfs.io/ipfs/QmUJKsA1FQRo4rGKJ9WAXNnv6o6HXy4NoJiWH97gPZUddV/ens+ipfs/ENSIPFS-Part-1-Introduction.html\">hosting tutorial</a>). </p><p>Here's an example of what would happen under the hood for a file hosted on Google Drive. Once a user authenticates on Diffuse and requests to add a file, they will be logged into their Google account and asked to allow permissions to the Diffuse app. Once granted, the app will request that Drive construct a filetree, which is a list containing the path to every audio file. It works in chunks of 1000 files requested from each url and then gets the music tags/metadata from each file via the <a href=\"https://github.com/aadsm/jsmediatags\">JSmediatags library</a>. The parsed metadata from those files is then cached in a user's storage provider: in V1 this is limited to either Blockstack or RemoteStorage. That way, when a user logs in and any metadata from previously loaded music is already there.</p><p>Once music on the storage medium has been identified and the metadata cached, the app users can enjoy whatever music files they have saved. Content searching is facilitated by the <a href=\"https://github.com/olivernn/lunr.js/\">Lunr library</a>.</p><p>A V2 is already in the works to make the entire product more user friendly. This next version will have data encryption, and even more storage options, including <a href=\"https://textile.io/\">Textile</a> for user data, or <a href=\"https://docs.blockstack.org/storage/overview.html\">Blockstack's Gaia</a> for file access. Fission is looking forward to when the V2 is live hopefully later this summer. We'll plan to do a blog post then detailing any of the updates.</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p>Finally, here's a set of questions we asked Steven.</p><p><strong>What’s your background as a developer?</strong></p><p>Started with web dev as a hobby when I was 15 (I’m 29 now). First gig was for a web agency, mainly doing small artsy websites and a cms using ruby. Four years later I started working for another agency, but mainly doing app development. I've been doing all kinds of dev things in my spare time, but my main side project for the last 8 years has been Diffuse and its predecessors.</p><p><strong>Where do you go to read tech news / developer news?</strong></p><p>Twitter, email newsletters, slack/discord channels</p><p><strong>What first inspired Diffuse?</strong></p><p>Someone asked me to build a UI for <a href=\"https://github.com/trevorturk/kzak\">https://github.com/trevorturk/kzak</a>, and at the same time I was collecting music. Seemed like an interesting idea and fun to work on. Also, I used Spotify for a while, but they kept silently removing some of my favourite music, after that I never turned back.</p><p><strong>How has user testing gone?</strong></p><p>Could be better. People like the design, made a few feature requests, but never really expressed what could be better. That said, Blockstack recently put Diffuse on <a href=\"https://www.trymyui.com/\">https://www.trymyui.com/</a> which has given me good feedback.</p><p><strong>Where have you gotten the bulk of your users?</strong></p><p>IPFS forum, <a href=\"https://electronjs.org/apps/diffuse\">https://electronjs.org/apps/diffuse</a> and chinese/japanese blogs about IPFS. I think… I don’t have any analytics except on Github, so I don’t really know.</p><p><strong>What was the most useful feedback you’ve received?</strong></p><p>“I don’t know how to use this”</p><p><strong>What is the benefit of using Blockstack? Drawbacks?</strong></p><p>Easy decentralized authentication. Drawback, way too much javascript, bad performance.</p><p><strong>If you were to redesign or reset your structure what would you have done differently?</strong></p><p>I’m currently working on V2, which is built from scratch. So this’ll be easy to answer 😄 I like the design very much so that stayed the same, just more fine tuned, more attention to detail. Structure has improved as well, better performance, moved more things on the web-worker side, easier to extend (build on).</p><p><strong>What challenges did you experience integrating IPFS?</strong></p><p> I don’t really remember the music-storage integration, was over a year ago. But I think it went pretty smoothly, except for a CORS issue which was later resolved in go-ipfs. I recently did IPFS “authentication”, or in other words user-data storage, which is the unpublished work-in-progress V2. That was more challenging, I had to find a good way to encrypt the user’s data.</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p>Thanks Steven for spending time to help get this ready for others to learn from. We'll be posting other IPFS projects on this blog as well &gt;&gt; be sure to check back soon.</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p><a href=\"https://unsplash.com/photos/9f1gCaLkZBU\">Cover image</a> from <a href=\"https://unsplash.com/@davidjorre\">David Jorre</a></p>","url":"https://blog.fission.codes/fission-interviews-diffuse/","canonical_url":null,"uuid":"b26f8efe-40d9-4726-9e28-5c49e47a2f6b","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5ced76e00bff56001eb87d96","reading_time":null}},{"node":{"id":"Ghost__Post__5d010336fdb93e001e53685d","title":"FISSION Fragments #4: Weekly Links Roundup","slug":"fission-fragments-4","featured":false,"feature_image":"https://images.unsplash.com/photo-1437422061949-f6efbde0a471?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","excerpt":"Fourth edition of our newsletter with content from around the decentralised web. Catch up on mobile compute revolution, website hosting via IPFS + ENS, surprise handheld games (!), decentralised chat apps, and bundling efforts by Dropbox.","custom_excerpt":"Fourth edition of our newsletter with content from around the decentralised web. Catch up on mobile compute revolution, website hosting via IPFS + ENS, surprise handheld games (!), decentralised chat apps, and bundling efforts by Dropbox.","created_at_pretty":"12 June, 2019","published_at_pretty":"13 June, 2019","updated_at_pretty":"13 June, 2019","created_at":"2019-06-12T06:50:46.000-07:00","published_at":"2019-06-12T18:39:33.000-07:00","updated_at":"2019-06-12T18:40:55.000-07:00","meta_title":null,"meta_description":"Fourth edition of the Fission Fragments newsletter with content from around the decentralised web. ","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Trenton Van Epps","slug":"trenton","bio":"Former architect working to grow the Ethereum ecosystem and Web3 tech.","profile_image":"https://s3.fission.codes/2019/05/14054274_10155286912259062_1515671855628123823_o.jpg","twitter":"@trent_vanepps","facebook":null,"website":null},{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"}],"primary_author":{"name":"Trenton Van Epps","slug":"trenton","bio":"Former architect working to grow the Ethereum ecosystem and Web3 tech.","profile_image":"https://s3.fission.codes/2019/05/14054274_10155286912259062_1515671855628123823_o.jpg","twitter":"@trent_vanepps","facebook":null,"website":null},"primary_tag":{"name":"FISSION Fragments","slug":"fragments","description":"Our weekly round up of links to interesting articles, projects, and more.","feature_image":"https://s3.fission.codes/2019/05/patrick-mcmanaman-116034-unsplash1900.jpg","meta_description":null,"meta_title":null},"tags":[{"name":"FISSION Fragments","slug":"fragments","description":"Our weekly round up of links to interesting articles, projects, and more.","feature_image":"https://s3.fission.codes/2019/05/patrick-mcmanaman-116034-unsplash1900.jpg","meta_description":null,"meta_title":null},{"name":"IPFS","slug":"ipfs","description":"InterPlanetary File System","feature_image":null,"meta_description":null,"meta_title":null},{"name":"Ethereum","slug":"ethereum","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Offline first","slug":"offline-first","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Local Software","slug":"local-software","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"Welcome to FISSION Fragments #4  - our regular newsletter of awesome links. Want\nto get them delivered straight to your inbox? Subscribe! We also tend to tweet a\nlot of these links from our Twitter account @fissioncodes\n[https://twitter.com/FISSIONCodes]  if you want to get them in real time.\n\nThis week digs into the mobile compute revolution, website hosting via IPFS +\nENS, surprise handheld games (!), decentralised chat apps, and bundling efforts\nby Dropbox.\n\n\n--------------------------------------------------------------------------------\n\nRoss Schulman [https://twitter.com/RossSchulman]  directly rejects the accepted\nnorm of internet behemoths abusing user data in exchange for \"free services\" in\nan inspiring article: A Revolution In Your Pocket\n[https://rbs.io/2019/05/a-revolution-in-your-pocket/]. What if data and services\nnever had to leave our phones?\n\n> There is the potential today to reclaim control of our digital lives from\nmonopolist platforms and unnecessary rent-seeking. There is a world within reach\nwhere always-on, always-connected pocket computers become personal data stores.\nAll your photos, documents, messages, and other data live with you, not on a\nfaceless server belonging to a random corporation. The only machine learning\ndone is done for you. Data only leaves your device because you want to send it\nsomewhere.\nThe author is careful to balance this aspirational scenario with what are\ngenuine challenges. It will take significant work to realise this vision,\nincluding rethinking the current internet hub-and-spoke model, increasing\nadoption of IPv6, opening up radio spectrums, and extensive user education.\nThough daunting, these are not insurmountable: the activists' best ally is a\ndogged preference for incremental progress over time.\n\n\n--------------------------------------------------------------------------------\n\nHave you ever tried to host your own site through with ENS + IPFS? Timur\n[https://twitter.com/DestinerX]  pointed us to a List of ENS+IPFS websites\n[https://gateway.ipfs.io/ipfs/QmUJKsA1FQRo4rGKJ9WAXNnv6o6HXy4NoJiWH97gPZUddV/ens+ipfs/list-of_ENSIPFS-websites.html] \n that have done this successfully, including the blog at the link.  Also check\nout this great series of tutorials\n[https://gateway.ipfs.io/ipfs/QmUJKsA1FQRo4rGKJ9WAXNnv6o6HXy4NoJiWH97gPZUddV/ens+ipfs/ENSIPFS-Part-1-Introduction.html] \n detailing how to do it for yourself!\n\n> Almonit.club is hosted like a normal website. It is stored on a server, and the\nname almonit.club is registered with a regular name service (DNS). To access\nalmonit.club, the browser first asks the DNS in which server it is stored, and\nthen gets the website from that server. With almonit.eth website we took a bit\ndifferent approach. Instead of a server, we use IPFS, and instead of DNS, we use\nENS.\n\n--------------------------------------------------------------------------------\n\nIt's not often that new handheld gaming devices get announced. Playdate\n[https://play.date/], the brain child of veteran software shop Panic's Play\n[https://panic.com/], incorporates a delightfully odd crank that games can use\nfor play mechanics. The device will include seasons of games specifically for\nthe device. Details are still sparse, but learn along with Fission in this \ntwitter thread [https://twitter.com/playdate/status/1131307504116174848]  and\nthis article excerpt [https://play.date/edge/].\n\n> Created with care, for people who love videogames,\n\n--------------------------------------------------------------------------------\n\nDecentralized, offline-first, cmd-line chat app in < 100 lines of code\n[https://medium.com/textileio/decentralized-offline-first-cmd-line-chat-app-in-100-lines-of-code-43ed71a70950]\n\n> To quote offlinefirst.org [http://offlinefirst.org/], we live in a disconnected\n& battery powered world, but our technology and best practices are a leftover\nfrom the always connected & steadily powered past.\n\n--------------------------------------------------------------------------------\n\nMeet the new Dropbox [https://blog.dropbox.com/topics/product-tips/new-dropbox] \n :: Are we beginning to see the divisions between cloud storage providers be\nrelaxed? One step towards integrating local-first storage and software.\n\n> Create, access, and share cloud content like Google Docs, Sheets, and Slides and\nMicrosoft Office files within Dropbox. You can also choose to open Microsoft\nOffice files in Office Online or the Google web editor.\n\n--------------------------------------------------------------------------------\n\nCover image [https://unsplash.com/photos/X0OoHrPvgXE]  by Luca Zanon\n[https://unsplash.com/@zanonluca]","html":"<p>Welcome to <strong>FISSION Fragments #4</strong> - our regular newsletter of awesome links. Want to get them delivered straight to your inbox? <a href=\"#subscribe\">Subscribe</a>! We also tend to tweet a lot of these links from <a href=\"https://twitter.com/FISSIONCodes\">our Twitter account @fissioncodes</a> if you want to get them in real time.<br><br>This week digs into the mobile compute revolution, website hosting via IPFS + ENS, surprise handheld games (!), decentralised chat apps, and bundling efforts by Dropbox.</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p><a href=\"https://twitter.com/RossSchulman\">Ross Schulman</a> directly rejects the accepted norm of internet behemoths abusing user data in exchange for \"free services\" in an inspiring article: <strong> </strong><a href=\"https://rbs.io/2019/05/a-revolution-in-your-pocket/\"><strong>A Revolution In Your Pocket</strong></a><strong>. </strong>What if data and services never had to leave our phones?</p><blockquote>There is the potential today to reclaim control of our digital lives from monopolist platforms and unnecessary rent-seeking. There is a world within reach where always-on, always-connected pocket computers become personal data stores. All your photos, documents, messages, and other data live with you, not on a faceless server belonging to a random corporation. The only machine learning done is done for you. Data only leaves your device because you want to send it somewhere.</blockquote><p>The author is careful to balance this aspirational scenario with what are genuine challenges. It will take significant work to realise this vision, including rethinking the current internet hub-and-spoke model, increasing adoption of IPv6, opening up radio spectrums, and extensive user education. Though daunting, these are not insurmountable: the activists' best ally is a dogged preference for incremental progress over time.</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p>Have you ever tried to host your own site through with ENS + IPFS? <a href=\"https://twitter.com/DestinerX\">Timur</a> pointed us to a <a href=\"https://gateway.ipfs.io/ipfs/QmUJKsA1FQRo4rGKJ9WAXNnv6o6HXy4NoJiWH97gPZUddV/ens+ipfs/list-of_ENSIPFS-websites.html\"><strong>List of ENS+IPFS websites</strong></a><strong> </strong>that have done this successfully, including the blog at the link<strong>.</strong> Also check out this great <a href=\"https://gateway.ipfs.io/ipfs/QmUJKsA1FQRo4rGKJ9WAXNnv6o6HXy4NoJiWH97gPZUddV/ens+ipfs/ENSIPFS-Part-1-Introduction.html\">series of tutorials</a> detailing how to do it for yourself!</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://s3.fission.codes/2019/06/blog-header-image-06.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><blockquote>Almonit.club is hosted like a normal website. It is stored on a server, and the name almonit.club is registered with a regular name service (DNS). To access almonit.club, the browser first asks the DNS in which server it is stored, and then gets the website from that server. With almonit.eth website we took a bit different approach. Instead of a server, we use IPFS, and instead of DNS, we use ENS.</blockquote><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p>It's not often that new handheld gaming devices get announced. <a href=\"https://play.date/\">Playdate</a>, the brain child of veteran software shop <a href=\"https://panic.com/\">Panic's Play</a>, incorporates a delightfully odd crank that games can use for play mechanics. The device will include seasons of games specifically for the device. Details are still sparse, but learn along with Fission in this <a href=\"https://twitter.com/playdate/status/1131307504116174848\">twitter thread</a> and this <a href=\"https://play.date/edge/\">article excerpt</a>.</p><blockquote>Created with care, for people who love videogames,</blockquote><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://s3.fission.codes/2019/06/image-2.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p><a href=\"https://medium.com/textileio/decentralized-offline-first-cmd-line-chat-app-in-100-lines-of-code-43ed71a70950\"><strong>Decentralized, offline-first, cmd-line chat app in &lt; 100 lines of code</strong></a></p><blockquote>To quote <a href=\"http://offlinefirst.org/\" rel=\"nofollow noopener\">offlinefirst.org</a>, we live in a disconnected &amp; battery powered world, but our technology and best practices are a leftover from the always connected &amp; steadily powered past.</blockquote><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p><a href=\"https://blog.dropbox.com/topics/product-tips/new-dropbox\"><strong>Meet the new Dropbox</strong></a><strong> </strong>:: Are we beginning to see the divisions between cloud storage providers be relaxed? One step towards integrating local-first storage and software.</p><blockquote>Create, access, and share cloud content like Google Docs, Sheets, and Slides and Microsoft Office files within Dropbox. You can also choose to open Microsoft Office files in Office Online or the Google web editor.</blockquote><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://s3.fission.codes/2019/06/Screen-Shot-2019-06-12-at-13.12.17.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p><em><a href=\"https://unsplash.com/photos/X0OoHrPvgXE\">Cover image</a> by <a href=\"https://unsplash.com/@zanonluca\">Luca Zanon</a></em></p>","url":"https://blog.fission.codes/fission-fragments-4/","canonical_url":null,"uuid":"4eb1b00f-bd40-4c3f-92f6-9dd6de219c0b","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5d010336fdb93e001e53685d","reading_time":null}},{"node":{"id":"Ghost__Post__5ced8f3f0bff56001eb87db4","title":"FISSION Interviews: 0xSU","slug":"interview-0xsu","featured":false,"feature_image":"https://images.unsplash.com/photo-1486551937199-baf066858de7?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","excerpt":"Fission Interviews: Dive into an Ethereum + IPFS hack from ETHNewYork called 0xSU: a decentralised URL shortener.","custom_excerpt":"Fission Interviews: Dive into an Ethereum + IPFS hack from ETHNewYork called 0xSU: a decentralised URL shortener.","created_at_pretty":"28 May, 2019","published_at_pretty":"06 June, 2019","updated_at_pretty":"06 June, 2019","created_at":"2019-05-28T12:42:55.000-07:00","published_at":"2019-06-06T10:34:47.000-07:00","updated_at":"2019-06-06T12:01:12.000-07:00","meta_title":null,"meta_description":"Fission Interviews: Dive into an Ethereum + IPFS hack from ETHNewYork called 0xSU: a decentralised URL shortener.","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Trenton Van Epps","slug":"trenton","bio":"Former architect working to grow the Ethereum ecosystem and Web3 tech.","profile_image":"https://s3.fission.codes/2019/05/14054274_10155286912259062_1515671855628123823_o.jpg","twitter":"@trent_vanepps","facebook":null,"website":null}],"primary_author":{"name":"Trenton Van Epps","slug":"trenton","bio":"Former architect working to grow the Ethereum ecosystem and Web3 tech.","profile_image":"https://s3.fission.codes/2019/05/14054274_10155286912259062_1515671855628123823_o.jpg","twitter":"@trent_vanepps","facebook":null,"website":null},"primary_tag":{"name":"Interview","slug":"interview","description":null,"feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"Interview","slug":"interview","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"IPFS","slug":"ipfs","description":"InterPlanetary File System","feature_image":null,"meta_description":null,"meta_title":null},{"name":"Ethereum","slug":"ethereum","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"EthNewYork","slug":"ethnewyork","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"hackathon","slug":"hackathon","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"Welcome to the first in a series where FISSION interviews projects that\nintegrate IPFS and other similar technologies. \n\nThis post highlights an ETHNewYork [https://ethnewyork.com/]  submission from \nAuston Bunsen [https://twitter.com/bunsen]  and Jonathan Biro\n[https://twitter.com/jonathanbiro]  called 0xSU, or Ethereum Short URLs:\n\"Decentralized URL shortener. First we'll look at how the project works,\nfollowed by a few questions FISSION asked the team about their background.\n\nHackathon Devpost: https://devpost.com/software/0xsu-ethereum-short-urls\n\nGitHub repo: https://github.com/du4e\n\nHow 0xSU works\n\"Think of it like goo.gl except it can't be taken down.\" In theory, URL\nshorteners could censor a link or decline to continue forwarding requests. By\ndeploying to the public Ethereum chain, creating open source proxy servers and\nutilising a distributed storage layer like IPFS, much of that risk is avoided. \n\nBefore using 0xSU, users need to make sure they have either a traditional\nweb-browser like Chrome plus wallet extension (ie Metamask\n[https://metamask.io/]) or through a Web3 browser like Status\n[https://status.im/]  or Coinbase Wallet [https://wallet.coinbase.com/]. If\nthat's ready, they can navigate to 0xSU.co [https://0xsu.co/]  with the URL they\nwant to shorten and store immutably. The web3 frontend is hosted through IPFS,\nmeaning everything needed to make this work properly already exists outside of a\ncentralised server. Currently, the node is hosted through Digital Ocean.\n\nOnce on the site, users submit the link along with a small amount of Ether to\ncover associated gas costs. Under the hood, the link is written into the\ncontract (address on Etherscan\n[https://etherscan.io/address/0x19624ffa41fe26744e74fdbba77bef967a222d4c]) as a\nkey value pair: the full link and the shortened one. The backend sits onchain in\nthe contract, accessed via either a helper js library\n[https://github.com/dU4E/0xsu-js-lib]  or one of the open source 0xsu.co\n[http://0xsu.co/]  proxy servers: flask\n[https://github.com/dU4E/0xsu-flask-server], sinatra\n[https://github.com/dU4E/0xsu-sinatra-server], or express\n[https://github.com/dU4E/0xsu-express-server].\n\nAdditionally, the url shortener doesn't work without an http redirect, so they\nwrote open source forwarding proxies that enable this and anyone can run. The\nproject currently uses Quiknode [https://quiknode.io/]  as the Web3 provider to\nsupply a node that the forwarders can hook into.\n\nGiven that the code is open source, anyone could fork the front end and run\ntheir own forwarding instance. In the future, users could get served ads to\noffset the cost of forwarding. Alternatively, the team is also looking at\nintegrating the Gas Station Network\n[https://medium.com/groundhog-network/the-gas-station-network-alliance-6fd543e7eca3]\n, a collaboration between Ethereum organisations that cover the cost of gas for\nonboarding new users and subsidised apps.\n\nIn the future, the project will have to consider the implications of state rent\n[https://www.reddit.com/r/ethereum/comments/arw0au/what_is_state_rent_in_ethereum_and_how_does_it/]\n. Users, or the Gas Station Network might have to provide an additional payment\nto wake a dormant contract back into state. A partial workaround for this could\nbe to cache the high traffic URLs in something like Heroku. \n\nFuture UI improvements might include adding a Wyre [https://www.sendwyre.com/] \nintegration to allow users to use credit cards instead of maintaining a\ncompatible wallet. The team hopes to continue working on it as a side project.\n\nHere's a quick video demo of 0xSU in action:\n\n\n--------------------------------------------------------------------------------\n\nFinally, here's a set of questions we had the team answer:\n\nWhat is your developer background?\n\nJon: I graduated from a full-stack coding bootcamp about a month ago. Before\nthat I just dabbled a little with JavaScript.\n\nAuston: I am a self-taught developer who started writing code about 12 years\nago. I am always interested in learning new languages & Solidity / Ethereum are\nsuper powerful conceptually. \n\nWhat got you into Ethereum / IPFS / decentralisation initially? \n\nJon: I found the idea of the blockchain and its serverless application\nfascinating. I wanted to learn more and my research told me the Ethereum network\nis the best run place to start.\n\nAuston: For me it started in 2011 when my friend Michael had a little hacker\nmeetup & decided to talk about bitcoin. I dismissed it initially but eventually\ncame around to the idea. Finally my friend Kai reached out in 2017 & told me\nabout Ethereum, that’s when I really started to dive deep, as I realized there\nwas now a censorship resistant platform that could be built upon.\n\nWhere do you go to read tech news / developer news?\n\nJon: hackernoon, medium, techcrunch, dev.to [http://dev.to/]\n\nAuston: I love hacker news! Twitter is always fun to discover random things & on\noccasion, Hacker Noon. \n\nDo you listen to any technology or developer podcasts?\n\nJon: I would if I found the time.\n\nAuston: Shill time! I have been working on a podcast for a few weeks with my\nfriend Jose, you can go listen to it on the Devshirts' site\n[https://devshirts.co/blogs/podcasts].\n\nIn general, talk about your hackathon experience? Highs / lows?\n\nJon: Was pretty interesting and inspiring. It was my first time and I didn’t\nknow where to begin, but luckily I teamed up with Auston who is a nice guy &\nhelped guide me.\n\nAuston: It was really invigorating to see so many people hyped up about Ethereum\n& working on Dapps. I definitely appreciated the sponsor dev support, we\nlaunched a node on quiknode.io [http://quiknode.io/]  and got some help from\nthen sendwyre.com [http://sendwyre.com/]  team. Also was super cool to get some\nhelp from Vitalik himself debugging an issue with our smart contract. \n\nWhat inspired the project? \n\nGoo.gl [http://goo.gl/]  had been taken down which is a shame because it was a\nuseful service, and we wanted to make sure that couldn’t happen again by using\nthe blockchain.\n\nWhat made you want to integrate IPFS? \n\nAuston: IPFS is a project I’ve known about since 2017 that again I thought would\nbe a super awesome way to distribute copies of content on.\n\nWhat challenges did you experience integrating IPFS?\n\nAuston: None really, it was actually super easy for the most part. However I had\nto find a guide that showed me to how to point a domain at the IPFS node.\n\nWhat was the most useful feedback you received from judges or other hackathon\nparticipants?\n\nThere were other apps and apis that could make what we did cheaper and faster,\nbut we kept it simple. Also the positive attitude of the judges was really nice\nto have, they were really onboard with the fact that we deployed to main net,\netc. \n\nAny plans to keep working on the project? \n\nWould definitely love to integrate Stripe to make it possible to pay for link\nshortening with a credit/debit card, get more people running a forwarding server\n& perhaps integrate the gas station network to let people pay with BAT or by\nwatching ads.\n\nIn hindsight what’s something you may have done differently for either the\nproject or the hackathon?\n\nAuston: Jon would have liked to integrate more sponsors, but I’m actually really\nhappy with the outcome. \n\nAny side projects or interests you would like to shill?\n\nAuston: Definitely quiknode.io [http://quiknode.io/]  as well as 0xsu.co\n[http://0xsu.co/]  - you should try both and run a forwarding server!!\n\n\n--------------------------------------------------------------------------------\n\nThanks Jon & Auston for spending time to help get this ready for others to learn\nfrom. We'll be posting other IPFS projects on this blog as well >> be sure to\ncheck back soon.\n\nOur first product is an IPFS add-on for Heroku. Interested in testing it out\nwhen we launch? Join us and sign up as an alpha tester on ProductHunt\n[https://www.producthunt.com/upcoming/fission-tools].","html":"<p>Welcome to the first in a series where FISSION interviews projects that integrate IPFS and other similar technologies. <br><br>This post highlights an <a href=\"https://ethnewyork.com/\">ETHNewYork</a> submission from <a href=\"https://twitter.com/bunsen\">Auston Bunsen</a> and <a href=\"https://twitter.com/jonathanbiro\">Jonathan Biro</a> called 0xSU, or Ethereum Short URLs: \"Decentralized URL shortener. First we'll look at how the project works, followed by a few questions FISSION asked the team about their background.</p><p>Hackathon Devpost: <a href=\"https://devpost.com/software/0xsu-ethereum-short-urls\">https://devpost.com/software/0xsu-ethereum-short-urls</a></p><p>GitHub repo: <a href=\"https://github.com/du4e\">https://github.com/du4e</a></p><h3 id=\"how-0xsu-works\">How 0xSU works</h3><p>\"Think of it like goo.gl except it can't be taken down.\" In theory, URL shorteners could censor a link or decline to continue forwarding requests. By deploying to the public Ethereum chain, creating open source proxy servers and utilising a distributed storage layer like IPFS, much of that risk is avoided. </p><p>Before using 0xSU, users need to make sure they have either a traditional web-browser like Chrome plus wallet extension (ie <a href=\"https://metamask.io/\">Metamask</a>) or through a Web3 browser like <a href=\"https://status.im/\">Status</a> or <a href=\"https://wallet.coinbase.com/\">Coinbase Wallet</a>. If that's ready, they can navigate to <a href=\"https://0xsu.co/\">0xSU.co</a> with the URL they want to shorten and store immutably. The web3 frontend is hosted through IPFS, meaning everything needed to make this work properly already exists outside of a centralised server. Currently, the node is hosted through Digital Ocean.</p><p>Once on the site, users submit the link along with a small amount of Ether to cover associated gas costs. Under the hood, the link is written into the contract (<a href=\"https://etherscan.io/address/0x19624ffa41fe26744e74fdbba77bef967a222d4c\">address on Etherscan</a>) as a key value pair: the full link and the shortened one. The backend sits onchain in the contract, accessed via either a <a href=\"https://github.com/dU4E/0xsu-js-lib\">helper js library</a> or one of the open source <a href=\"http://0xsu.co/\" rel=\"noopener noreferrer\">0xsu.co</a> proxy servers: <a href=\"https://github.com/dU4E/0xsu-flask-server\">flask</a>, <a href=\"https://github.com/dU4E/0xsu-sinatra-server\">sinatra</a>, or <a href=\"https://github.com/dU4E/0xsu-express-server\">express</a>.<br><br>Additionally, the url shortener doesn't work without an http redirect, so they wrote open source forwarding proxies that enable this and anyone can run. The project currently uses <a href=\"https://quiknode.io/\">Quiknode</a> as the Web3 provider to supply a node that the forwarders can hook into.</p><p>Given that the code is open source, anyone could fork the front end and run their own forwarding instance. In the future, users could get served ads to offset the cost of forwarding. Alternatively, the team is also looking at integrating the <a href=\"https://medium.com/groundhog-network/the-gas-station-network-alliance-6fd543e7eca3\">Gas Station Network</a>, a collaboration between Ethereum organisations that cover the cost of gas for onboarding new users and subsidised apps.</p><p>In the future, the project will have to consider the implications of <a href=\"https://www.reddit.com/r/ethereum/comments/arw0au/what_is_state_rent_in_ethereum_and_how_does_it/\">state rent</a>. Users, or the Gas Station Network might have to provide an additional payment to wake a dormant contract back into state. A partial workaround for this could be to cache the high traffic URLs in something like Heroku. </p><p>Future UI improvements might include adding a <a href=\"https://www.sendwyre.com/\">Wyre</a> integration to allow users to use credit cards instead of maintaining a compatible wallet. The team hopes to continue working on it as a side project.</p><p>Here's a quick video demo of 0xSU in action:</p><!--kg-card-begin: embed--><figure class=\"kg-card kg-embed-card\"><iframe width=\"459\" height=\"344\" src=\"https://www.youtube.com/embed/55JN4GWSR8w?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></figure><!--kg-card-end: embed--><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p>Finally, here's a set of questions we had the team answer:</p><p><strong>What is your developer background?</strong></p><p>Jon: I graduated from a full-stack coding bootcamp about a month ago. Before that I just dabbled a little with JavaScript.</p><p>Auston: I am a self-taught developer who started writing code about 12 years ago. I am always interested in learning new languages &amp; Solidity / Ethereum are super powerful conceptually. </p><p><strong>What got you into Ethereum / IPFS / decentralisation initially? </strong></p><p>Jon: I found the idea of the blockchain and its serverless application fascinating. I wanted to learn more and my research told me the Ethereum network is the best run place to start.</p><p>Auston: For me it started in 2011 when my friend Michael had a little hacker meetup &amp; decided to talk about bitcoin. I dismissed it initially but eventually came around to the idea. Finally my friend Kai reached out in 2017 &amp; told me about Ethereum, that’s when I really started to dive deep, as I realized there was now a censorship resistant platform that could be built upon.</p><p><strong>Where do you go to read tech news / developer news?</strong></p><p>Jon: hackernoon, medium, techcrunch, <a href=\"http://dev.to/\" rel=\"noopener noreferrer\">dev.to</a></p><p>Auston: I love hacker news! Twitter is always fun to discover random things &amp; on occasion, Hacker Noon. </p><p><strong>Do you listen to any technology or developer podcasts?</strong></p><p>Jon: I would if I found the time.</p><p>Auston: Shill time! I have been working on a podcast for a few weeks with my friend Jose, you can go listen to it on the <a href=\"https://devshirts.co/blogs/podcasts\">Devshirts' site</a>.</p><p><strong>In general, talk about your hackathon experience? Highs / lows?</strong></p><p>Jon: Was pretty interesting and inspiring. It was my first time and I didn’t know where to begin, but luckily I teamed up with Auston who is a nice guy &amp; helped guide me.</p><p>Auston: It was really invigorating to see so many people hyped up about Ethereum &amp; working on Dapps. I definitely appreciated the sponsor dev support, we launched a node on <a href=\"http://quiknode.io/\" rel=\"noopener noreferrer\">quiknode.io</a> and got some help from then <a href=\"http://sendwyre.com/\" rel=\"noopener noreferrer\">sendwyre.com</a> team. Also was super cool to get some help from Vitalik himself debugging an issue with our smart contract. </p><p><strong>What inspired the project? </strong></p><p><a href=\"http://goo.gl/\" rel=\"noopener noreferrer\">Goo.gl</a> had been taken down which is a shame because it was a useful service, and we wanted to make sure that couldn’t happen again by using the blockchain.</p><p><strong>What made you want to integrate IPFS? </strong></p><p>Auston: IPFS is a project I’ve known about since 2017 that again I thought would be a super awesome way to distribute copies of content on.</p><p><strong>What challenges did you experience integrating IPFS?</strong></p><p>Auston: None really, it was actually super easy for the most part. However I had to find a guide that showed me to how to point a domain at the IPFS node.</p><p><strong>What was the most useful feedback you received from judges or other hackathon participants?</strong></p><p>There were other apps and apis that could make what we did cheaper and faster, but we kept it simple. Also the positive attitude of the judges was really nice to have, they were really onboard with the fact that we deployed to main net, etc. </p><p><strong>Any plans to keep working on the project? </strong></p><p>Would definitely love to integrate Stripe to make it possible to pay for link shortening with a credit/debit card, get more people running a forwarding server &amp; perhaps integrate the gas station network to let people pay with BAT or by watching ads.</p><p><strong>In hindsight what’s something you may have done differently for either the project or the hackathon?</strong></p><p>Auston: Jon would have liked to integrate more sponsors, but I’m actually really happy with the outcome. </p><p><strong>Any side projects or interests you would like to shill?</strong></p><p>Auston: Definitely <a href=\"http://quiknode.io/\" rel=\"noopener noreferrer\">quiknode.io</a> as well as <a href=\"http://0xsu.co/\" rel=\"noopener noreferrer\">0xsu.co</a> - you should try both and run a forwarding server!!</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p>Thanks Jon &amp; Auston for spending time to help get this ready for others to learn from. We'll be posting other IPFS projects on this blog as well &gt;&gt; be sure to check back soon.</p><p>Our first product is an IPFS add-on for Heroku. Interested in testing it out when we launch? Join us and sign up as an alpha tester <a href=\"https://www.producthunt.com/upcoming/fission-tools\">on ProductHunt</a>.</p>","url":"https://blog.fission.codes/interview-0xsu/","canonical_url":null,"uuid":"78b5841e-d5c3-402e-b517-1dcd5e415e5a","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5ced8f3f0bff56001eb87db4","reading_time":null}},{"node":{"id":"Ghost__Post__5cf0b7d365698d001ede6c39","title":"Presentations at the Seattle Ethereum Meetup","slug":"presentations-at-the-seattle-ethereum-meetup","featured":false,"feature_image":"https://s3.fission.codes/2019/06/B24C82B0-2211-4338-AFFA-AC530E0809B6.jpeg","excerpt":"Boris & Brooke’s presentations at the Seattle Ethereum Meetup.","custom_excerpt":"Boris & Brooke’s presentations at the Seattle Ethereum Meetup.","created_at_pretty":"31 May, 2019","published_at_pretty":"06 June, 2019","updated_at_pretty":"06 June, 2019","created_at":"2019-05-30T22:12:51.000-07:00","published_at":"2019-06-05T19:05:11.000-07:00","updated_at":"2019-06-05T19:05:11.000-07:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"},{"name":"Brooklyn Zelenka","slug":"expede","bio":"CTO at Fission ♥λ Programs with functions","profile_image":"https://s3.fission.codes/2019/05/IMG_2934-square.jpeg","twitter":"@expede","facebook":null,"website":null}],"primary_author":{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"},"primary_tag":{"name":"Presentations","slug":"presentation","description":null,"feature_image":"https://images.unsplash.com/photo-1535016120720-40c646be5580?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","meta_description":null,"meta_title":null},"tags":[{"name":"Presentations","slug":"presentation","description":null,"feature_image":"https://images.unsplash.com/photo-1535016120720-40c646be5580?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","meta_description":null,"meta_title":null},{"name":"Seattle","slug":"seattle","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Events","slug":"event","description":"Events in the decentralized web, p2p, & Ethereum community.","feature_image":null,"meta_description":null,"meta_title":null},{"name":"IPFS","slug":"ipfs","description":"InterPlanetary File System","feature_image":null,"meta_description":null,"meta_title":null},{"name":"Ethereum","slug":"ethereum","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"On Tuesday, May 28th, the Seattle Ethereum Meetup invited us to present\n[https://blog.fission.codes/fission-seattle-ethereum-meetup-may-2019/]. The\nvenue was the very cool Ada's Technical Books, in their Lab bar\n[https://thelab.adasbooks.com/the-lab-at-adas-data/]. \n\nThanks to Megan, Joshua and everyone that helped out with the meetup, and to\nAda's and Gaudium Capital [https://gaudiumcapital.com]  for sponsoring. The\nSeattle community is super welcoming and had great energy.\n\nAs well as talks, the evening featured burner wallets, and Megan did a great\nwrite up of the event and onboarding people using these wallets\n[https://medium.com/@megan_knab/ethereums-newest-40-users-and-thoughts-on-the-next-10-000-a-quick-burner-wallet-case-study-2adb94212214]\n.\n\nFirst up was Kurt Barry from MakerDAO with a stablecoin primer, focusing on DAI,\nand then Boris and Brooke presented. We're experimenting with using Notist for\nsharing our slide decks [https://noti.st/events/u3f9y1], and we've got brief\noverviews below.\n\nOpen Source & Growing Ethereum\nBoris presented on some of the history and basis of open source, and went on to\ndescribe the Ethereum Stack, Istanbul roadmap, and how to get involved.\n\nIPFS 101 & Introducing FISSION\nBrooke gave an overview of how IPFS works, and described what we're building at\nFISSION.\n\nIf you're interested in being an alpha tester of FISSION's IPFS services, sign\nup on our Product Hunt page at tools.fission.codes [https://tools.fission.codes]\n, or follow all our stuff by subscribing.","html":"<p>On Tuesday, May 28th, the <a href=\"https://blog.fission.codes/fission-seattle-ethereum-meetup-may-2019/\">Seattle Ethereum Meetup invited us to present</a>. The venue was the very cool <a href=\"https://thelab.adasbooks.com/the-lab-at-adas-data/\">Ada's Technical Books, in their Lab bar</a>. </p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://s3.fission.codes/2019/06/0E25061C-3984-4778-A872-690899EB5AEA.jpeg\" class=\"kg-image\"></figure><!--kg-card-end: image--><p>Thanks to Megan, Joshua and everyone that helped out with the meetup, and to Ada's and <a href=\"https://gaudiumcapital.com\">Gaudium Capital</a> for sponsoring. The Seattle community is super welcoming and had great energy.</p><p>As well as talks, the evening featured burner wallets, and <a href=\"https://medium.com/@megan_knab/ethereums-newest-40-users-and-thoughts-on-the-next-10-000-a-quick-burner-wallet-case-study-2adb94212214\">Megan did a great write up of the event and onboarding people using these wallets</a>.</p><p>First up was Kurt Barry from MakerDAO with a stablecoin primer, focusing on DAI, and then Boris and Brooke presented. We're experimenting with using <a href=\"https://noti.st/events/u3f9y1\">Notist for sharing our slide decks</a>, and we've got brief overviews below.</p><h2 id=\"open-source-growing-ethereum\">Open Source &amp; Growing Ethereum</h2><p>Boris presented on some of the history and basis of open source, and went on to describe the Ethereum Stack, Istanbul roadmap, and how to get involved.</p><!--kg-card-begin: gallery--><figure class=\"kg-card kg-gallery-card kg-width-wide\"><div class=\"kg-gallery-container\"><div class=\"kg-gallery-row\"><div class=\"kg-gallery-image\"><img src=\"https://s3.fission.codes/2019/06/A4A2CDF9-F467-4BD1-9C70-E2C8540C8F64.jpeg\" width=\"2244\" height=\"1327\"></div><div class=\"kg-gallery-image\"><img src=\"https://s3.fission.codes/2019/06/B4133F35-52A6-49EF-834F-A568A0CE7923.jpeg\" width=\"2346\" height=\"1317\"></div></div><div class=\"kg-gallery-row\"><div class=\"kg-gallery-image\"><img src=\"https://s3.fission.codes/2019/06/AC8DA537-050B-43E0-81AB-866D4A6B0370.jpeg\" width=\"2329\" height=\"1295\"></div><div class=\"kg-gallery-image\"><img src=\"https://s3.fission.codes/2019/06/16F9F7F1-A7BA-461F-9AB9-D8BDCA15EF5A.jpeg\" width=\"2343\" height=\"1297\"></div></div></div></figure><!--kg-card-end: gallery--><h2 id=\"ipfs-101-introducing-fission\">IPFS 101 &amp; Introducing FISSION</h2><p>Brooke gave an overview of how IPFS works, and described what we're building at FISSION.</p><!--kg-card-begin: gallery--><figure class=\"kg-card kg-gallery-card kg-width-wide\"><div class=\"kg-gallery-container\"><div class=\"kg-gallery-row\"><div class=\"kg-gallery-image\"><img src=\"https://s3.fission.codes/2019/06/F42D1A91-D8CB-4DB0-B3AF-E9622DB06C7C.jpeg\" width=\"2326\" height=\"1288\"></div><div class=\"kg-gallery-image\"><img src=\"https://s3.fission.codes/2019/06/9917293C-47D9-40E3-A75A-3B69A19F72BA.jpeg\" width=\"2326\" height=\"1289\"></div></div><div class=\"kg-gallery-row\"><div class=\"kg-gallery-image\"><img src=\"https://s3.fission.codes/2019/06/ED60812A-76B3-4E63-A5B9-917472758A92.jpeg\" width=\"2323\" height=\"1295\"></div><div class=\"kg-gallery-image\"><img src=\"https://s3.fission.codes/2019/06/B0EEBBEA-95FC-4ECF-9974-76103F5B2045.jpeg\" width=\"2305\" height=\"1297\"></div></div></div></figure><!--kg-card-end: gallery--><p>If you're interested in being an alpha tester of FISSION's IPFS services, sign up on our Product Hunt page at <a href=\"https://tools.fission.codes\">tools.fission.codes</a>, or follow all our stuff by <a href=\"#subscribe\">subscribing</a>.</p>","url":"https://blog.fission.codes/presentations-at-the-seattle-ethereum-meetup/","canonical_url":null,"uuid":"6ff6025a-8849-404d-80c5-eae3046c6d44","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5cf0b7d365698d001ede6c39","reading_time":null}},{"node":{"id":"Ghost__Post__5cf7d70b7eb1bf001e74eeae","title":"FISSION Fragments #3: Weekly Links Roundup","slug":"fission-fragments-3","featured":false,"feature_image":"https://images.unsplash.com/photo-1493329087152-853abc04b84b?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","excerpt":"Third edition of our newsletter with content from around the decentralised web. We call it FISSION Fragments.","custom_excerpt":"Third edition of our newsletter with content from around the decentralised web. We call it FISSION Fragments.","created_at_pretty":"05 June, 2019","published_at_pretty":"05 June, 2019","updated_at_pretty":"05 June, 2019","created_at":"2019-06-05T07:51:55.000-07:00","published_at":"2019-06-05T11:20:46.000-07:00","updated_at":"2019-06-05T11:33:52.000-07:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Trenton Van Epps","slug":"trenton","bio":"Former architect working to grow the Ethereum ecosystem and Web3 tech.","profile_image":"https://s3.fission.codes/2019/05/14054274_10155286912259062_1515671855628123823_o.jpg","twitter":"@trent_vanepps","facebook":null,"website":null},{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"}],"primary_author":{"name":"Trenton Van Epps","slug":"trenton","bio":"Former architect working to grow the Ethereum ecosystem and Web3 tech.","profile_image":"https://s3.fission.codes/2019/05/14054274_10155286912259062_1515671855628123823_o.jpg","twitter":"@trent_vanepps","facebook":null,"website":null},"primary_tag":{"name":"FISSION Fragments","slug":"fragments","description":"Our weekly round up of links to interesting articles, projects, and more.","feature_image":"https://s3.fission.codes/2019/05/patrick-mcmanaman-116034-unsplash1900.jpg","meta_description":null,"meta_title":null},"tags":[{"name":"FISSION Fragments","slug":"fragments","description":"Our weekly round up of links to interesting articles, projects, and more.","feature_image":"https://s3.fission.codes/2019/05/patrick-mcmanaman-116034-unsplash1900.jpg","meta_description":null,"meta_title":null},{"name":"open source","slug":"open-source","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"IPFS","slug":"ipfs","description":"InterPlanetary File System","feature_image":null,"meta_description":null,"meta_title":null},{"name":"GitHub","slug":"github","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Ethereum","slug":"ethereum","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"Welcome to FISSION Fragments #3  - our regular newsletter of awesome links. Want\nto get them delivered straight to your inbox? Subscribe! We also tend to tweet a\nlot of these links from our Twitter account @fissioncodes\n[https://twitter.com/FISSIONCodes]  if you want to get them in real time.\n\nThis week digs into \"Friday wins,\" an IPFS release, what forks mean to Github,\ncloudflare tutorials, and simple dapp frontends through Etherscan.\n\n\n--------------------------------------------------------------------------------\n\nDo you work on a team? -- this thoughtful post from Kellan Elliott-McCrea\n[https://twitter.com/kellan]  is for you. He reminds teams to use \"end of week\nreviews\" as a way to support both each other and collective culture. Read more\non Friday wins and a case study in ritual design\n[https://kellanem.com/notes/friday-wins]\n\n> Culture is what you celebrate. Rituals are the tools you use to shape culture.\nYet very few of us think much about ritual design. \n> A standard piece of software development practice that many teams let lapse, or\nmerely let lapse into being sub-optimal is “Friday wins”, sometimes called\nsprint demos or sprint reviews. But you can take what can be a flaccid and\nrepetitive meeting and make it a valuable ritual by grounding it in values.\nGo-IPFS contributors have crafted a new release: go-ipfs 0.4.21\n[https://github.com/ipfs/go-ipfs/releases/tag/v0.4.21]\n\nA short but useful blog from Drew DeVault titled: What is a fork, really, and\nhow GitHub changed its meaning\n[https://drewdevault.com/2019/05/24/What-is-a-fork.html]. His take is that\npersonal branches that push to core repositories are what GitHub mislabels as\nforks, with the intention to lock projects onto their \"cathedral\" platform.\nSemantics are important!\n\n> The fork button on GitHub - with the little number next to it for depositing\ndopamine into your brain - is a bit misleading. GitHub co-opted the meaning of\n“fork” to trick you into participating in their platform more. They did this in\na well-intentioned way, for the sake of their pull requests feature, but\nultimately this design is self-serving and causes some friction when\ncontributors venture out of their GitHub sandbox and into the rest of the\nsoftware development ecosystem. Let’s clarify what “fork” really means, and what\nwe do without GitHub’s concept of one - for it is in this difference that we\ntruly discover how git is a distributed  version control system.\nCloudflare has produced a very thorough tutorial that dives into Building a\nTo-Do List with Workers and KV\n[https://blog.cloudflare.com/building-a-to-do-list-with-workers-and-kv/]. \n\n> In this tutorial, we’ll build a todo list application in HTML, CSS and\nJavaScript, with a twist: all the data should be stored inside of the\nnewly-launched Workers KV, and the application itself should be served directly\nfrom Cloudflare’s edge network, using Cloudflare Workers\n[https://www.cloudflare.com/products/cloudflare-workers/].\nFrom the Cloudflare tutorialEtherscan, a blockchain explorer for the Ethereum\nnetwork, released a new front-end tool for dapp developers.\n\n> Etherscan Dapp page provides a front-end interface with a custom URL (using\nEthereum name service) for any smart contract on Ethereum.\n\n--------------------------------------------------------------------------------\n\nPhoto by Cassie Matias [https://unsplash.com/@cass4504]  on Unsplash\n[https://unsplash.com/photos/Wgjlk0Lo7-A]","html":"<p>Welcome to <strong>FISSION Fragments #3</strong> - our regular newsletter of awesome links. Want to get them delivered straight to your inbox? <a href=\"#subscribe\">Subscribe</a>! We also tend to tweet a lot of these links from <a href=\"https://twitter.com/FISSIONCodes\">our Twitter account @fissioncodes</a> if you want to get them in real time.<br><br>This week digs into \"Friday wins,\" an IPFS release, what forks mean to Github, cloudflare tutorials, and simple dapp frontends through Etherscan.</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p>Do you work on a team? -- this thoughtful post from <a href=\"https://twitter.com/kellan\">Kellan Elliott-McCrea</a> is for you. He reminds teams to use \"end of week reviews\" as a way to support both each other and collective culture. Read more on <strong><a href=\"https://kellanem.com/notes/friday-wins\">Friday wins and a case study in ritual design</a></strong>  </p><blockquote>Culture is what you celebrate. Rituals are the tools you use to shape culture. Yet very few of us think much about ritual design. </blockquote><blockquote>A standard piece of software development practice that many teams let lapse, or merely let lapse into being sub-optimal is “Friday wins”, sometimes called sprint demos or sprint reviews. But you can take what can be a flaccid and repetitive meeting and make it a valuable ritual by grounding it in values.</blockquote><p>Go-IPFS contributors have crafted a new release: <a href=\"https://github.com/ipfs/go-ipfs/releases/tag/v0.4.21\"><strong>go-ipfs 0.4.21</strong></a></p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://s3.fission.codes/2019/06/fragments-image-02.jpg\" class=\"kg-image\"></figure><!--kg-card-end: image--><p>A short but useful blog from Drew DeVault titled: <strong><a href=\"https://drewdevault.com/2019/05/24/What-is-a-fork.html\">What is a fork, really, and how GitHub changed its meaning</a>. </strong>His take is that personal branches that push to core repositories are what GitHub mislabels as forks, with the intention to lock projects onto their \"cathedral\" platform. Semantics are important!</p><blockquote>The fork button on GitHub - with the little number next to it for depositing dopamine into your brain - is a bit misleading. GitHub co-opted the meaning of “fork” to trick you into participating in their platform more. They did this in a well-intentioned way, for the sake of their pull requests feature, but ultimately this design is self-serving and causes some friction when contributors venture out of their GitHub sandbox and into the rest of the software development ecosystem. Let’s clarify what “fork” really means, and what we do without GitHub’s concept of one - for it is in this difference that we truly discover how git is a <em><em>distributed</em></em> version control system.</blockquote><p>Cloudflare has produced a very thorough tutorial that dives into <a href=\"https://blog.cloudflare.com/building-a-to-do-list-with-workers-and-kv/\">Building a To-Do List with Workers and KV</a>. </p><blockquote>In this tutorial, we’ll build a todo list application in HTML, CSS and JavaScript, with a twist: all the data should be stored inside of the newly-launched Workers KV, and the application itself should be served directly from Cloudflare’s edge network, using <a href=\"https://www.cloudflare.com/products/cloudflare-workers/\">Cloudflare Workers</a>.</blockquote><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://s3.fission.codes/2019/06/image.png\" class=\"kg-image\"><figcaption>From the Cloudflare tutorial</figcaption></figure><!--kg-card-end: image--><p>Etherscan, a blockchain explorer for the Ethereum network, released a new front-end tool for dapp developers.</p><blockquote>Etherscan Dapp page provides a front-end interface with a custom URL (using Ethereum name service) for any smart contract on Ethereum.</blockquote><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://s3.fission.codes/2019/06/image-1.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p><em>Photo by <a href=\"https://unsplash.com/@cass4504\">Cassie Matias</a> on <a href=\"https://unsplash.com/photos/Wgjlk0Lo7-A\">Unsplash</a></em></p>","url":"https://blog.fission.codes/fission-fragments-3/","canonical_url":null,"uuid":"6dadbcaa-16ba-4e5c-9099-590fbf2173b3","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5cf7d70b7eb1bf001e74eeae","reading_time":null}},{"node":{"id":"Ghost__Post__5ceeb8cc50a1e3001e7e4a2b","title":"FISSION Fragments 2: Weekly Links Roundup","slug":"fission-fragments-2","featured":true,"feature_image":"https://images.unsplash.com/photo-1506744038136-46273834b3fb?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","excerpt":"Second edition of our weekly links from around the decentralised web. We call it FISSION Fragments.","custom_excerpt":"Second edition of our weekly links from around the decentralised web. We call it FISSION Fragments.","created_at_pretty":"29 May, 2019","published_at_pretty":"29 May, 2019","updated_at_pretty":"30 May, 2019","created_at":"2019-05-29T09:52:28.000-07:00","published_at":"2019-05-29T13:14:53.000-07:00","updated_at":"2019-05-30T16:29:47.000-07:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Trenton Van Epps","slug":"trenton","bio":"Former architect working to grow the Ethereum ecosystem and Web3 tech.","profile_image":"https://s3.fission.codes/2019/05/14054274_10155286912259062_1515671855628123823_o.jpg","twitter":"@trent_vanepps","facebook":null,"website":null},{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"}],"primary_author":{"name":"Trenton Van Epps","slug":"trenton","bio":"Former architect working to grow the Ethereum ecosystem and Web3 tech.","profile_image":"https://s3.fission.codes/2019/05/14054274_10155286912259062_1515671855628123823_o.jpg","twitter":"@trent_vanepps","facebook":null,"website":null},"primary_tag":{"name":"FISSION Fragments","slug":"fragments","description":"Our weekly round up of links to interesting articles, projects, and more.","feature_image":"https://s3.fission.codes/2019/05/patrick-mcmanaman-116034-unsplash1900.jpg","meta_description":null,"meta_title":null},"tags":[{"name":"FISSION Fragments","slug":"fragments","description":"Our weekly round up of links to interesting articles, projects, and more.","feature_image":"https://s3.fission.codes/2019/05/patrick-mcmanaman-116034-unsplash1900.jpg","meta_description":null,"meta_title":null},{"name":"open source","slug":"open-source","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"IPFS","slug":"ipfs","description":"InterPlanetary File System","feature_image":null,"meta_description":null,"meta_title":null},{"name":"self-hosted","slug":"self-hosted","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"Welcome to FISSION Fragments #2  - our weekly links roundup. Want to get them\ndelivered straight to your inbox? Subscribe! We also tend to tweet a lot of\nthese links from our Twitter account @fissioncodes\n[https://twitter.com/FISSIONCodes]  if you want to get them in real time.\n\nThis week's links look at Open Source maintenance, how communities and project\nowners can better coordinate, as well as some content from around the\ndecentralised web, including a self-hosted resource list.\n\n\n--------------------------------------------------------------------------------\n\nFISSION Fragments #2\nAn article from Chris Siebenmann titled \"Go is Google's language, not ours\n[https://utcc.utoronto.ca/~cks/space/blog/programming/GoIsGooglesLanguage]\" digs\ninto the tension between the community of a widely used language and its\ncorporate maintainers.\n\n> ... in short, Go has community contributions but it is not a community project.\nIt is Google's project. This is an unarguable thing, whether you consider it to\nbe good or bad, and it has effects that we need to accept. For example, if you\nwant some significant thing to be accepted into Go, working to build consensus\nin the community is far less important than persuading the Go core team.\nIPFS .JS has a new release [https://github.com/ipfs/js-ipfs/issues/2024].\n\nDo as little as possible\n[https://alistapart.com/column/do-as-little-as-possible/]: An oldie but a goodie\nfrom Lyza Danger Gardner [https://twitter.com/lyzadanger?], relaying her\nexperience transitioning from web development to mobile platforms and back again\nfull circle. Related to present day, how can distributed technologies operate in\ntrusted environments? What does the gradient between trusted <> permissionless\nlook like?\n\nInterested in self-hosting? Then look no further for resources and inspiration.\nThis massive compilation from Edward Dickson [https://github.com/Kickball] \nshould keep you occupied for quite a while: Awesome Selfhosted\n[https://github.com/Kickball/awesome-selfhosted]:  \"a list of Free Software\nnetwork services and web applications which can be hosted locally.\" Some of the\nsoftware examples include: analytics, email, resource planning, and much more.\n\nheader image from \"The rise of few-maintainer projects\"A sobering look at \"The rise of few-maintainer projects\n[https://increment.com/open-source/the-rise-of-few-maintainer-projects/]\" by \nNadia Eghbal [https://twitter.com/nayafia]. \"As casual contributions—coordinated\nby a handful of maintainers—become ever more prevalent, how should we reset our\nexpectations for OSS?\" \n\nIntroduction to SourceCred\n[https://medium.com/sourcecred/introduction-to-sourcecred-7665297af715]: \"an\nopen-source technology for organizing communities.\"\n\n> SourceCred’s approach is to allow communities to create and curate contribution\nnetworks. A contribution network is a representation of how contributions are\nconnected to other contributions, to members of the community, and to the\ncommunity’s values. The contributions can be imported automatically from sources\nlike GitHub, Google Docs, and Medium, or they can be manually provided by\nmembers of a community.\n\n--------------------------------------------------------------------------------\n\nPhoto by Bailey Zindel\n[https://unsplash.com/photos/NRQV-hBF10M?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText] \n on Unsplash [https://unsplash.com/photos/NRQV-hBF10M]","html":"<p>Welcome to <strong>FISSION Fragments #2</strong> - our weekly links roundup. Want to get them delivered straight to your inbox? <a href=\"#subscribe\">Subscribe</a>! We also tend to tweet a lot of these links from <a href=\"https://twitter.com/FISSIONCodes\">our Twitter account @fissioncodes</a> if you want to get them in real time.</p><p>This week's links look at Open Source maintenance, how communities and project owners can better coordinate, as well as some content from around the decentralised web, including a self-hosted resource list.</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><h3 id=\"fission-fragments-2\">FISSION Fragments #2</h3><p>An article from Chris Siebenmann titled \"<a href=\"https://utcc.utoronto.ca/~cks/space/blog/programming/GoIsGooglesLanguage\"><strong>Go is Google's language, not ours</strong></a>\" digs into the tension between the community of a widely used language and its corporate maintainers.</p><blockquote>... in short, Go has community contributions but it is not a community project. It is Google's project. This is an unarguable thing, whether you consider it to be good or bad, and it has effects that we need to accept. For example, if you want some significant thing to be accepted into Go, working to build consensus in the community is far less important than persuading the Go core team.</blockquote><p>IPFS .JS has a <a href=\"https://github.com/ipfs/js-ipfs/issues/2024\">new release</a>.</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://s3.fission.codes/2019/05/image.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><p><a href=\"https://alistapart.com/column/do-as-little-as-possible/\"><strong>Do as little as possible</strong></a>: An oldie but a goodie from <a href=\"https://twitter.com/lyzadanger?\">Lyza Danger Gardner</a>, relaying her experience transitioning from web development to mobile platforms and back again full circle. Related to present day, how can distributed technologies operate in trusted environments? What does the gradient between trusted &lt;&gt; permissionless look like?</p><p>Interested in self-hosting? Then look no further for resources and inspiration. This massive compilation from <a href=\"https://github.com/Kickball\">Edward Dickson</a> should keep you occupied for quite a while: <a href=\"https://github.com/Kickball/awesome-selfhosted\"><strong>Awesome Selfhosted</strong></a>:  \"a list of Free Software network services and web applications which can be hosted locally.\" Some of the software examples include: analytics, email, resource planning, and much more.</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://s3.fission.codes/2019/05/image-1.png\" class=\"kg-image\"><figcaption>header image from \"The rise of few-maintainer projects\"</figcaption></figure><!--kg-card-end: image--><p>A sobering look at \"<strong><a href=\"https://increment.com/open-source/the-rise-of-few-maintainer-projects/\">The rise of few-maintainer projects</a>\" </strong>by <a href=\"https://twitter.com/nayafia\">Nadia Eghbal</a>. \"As casual contributions—coordinated by a handful of maintainers—become ever more prevalent, how should we reset our expectations for OSS?\" </p><p><a href=\"https://medium.com/sourcecred/introduction-to-sourcecred-7665297af715\">Introduction to SourceCred</a>: \"an open-source technology for organizing communities.\"</p><blockquote>SourceCred’s approach is to allow communities to create and curate contribution networks. A contribution network is a representation of how contributions are connected to other contributions, to members of the community, and to the community’s values. The contributions can be imported automatically from sources like GitHub, Google Docs, and Medium, or they can be manually provided by members of a community.</blockquote><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p><em>Photo by <a href=\"https://unsplash.com/photos/NRQV-hBF10M?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Bailey Zindel</a> on <a href=\"https://unsplash.com/photos/NRQV-hBF10M\">Unsplash</a></em></p>","url":"https://blog.fission.codes/fission-fragments-2/","canonical_url":null,"uuid":"3dff9241-6e26-4c95-b55f-ade7cc6284ab","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5ceeb8cc50a1e3001e7e4a2b","reading_time":null}},{"node":{"id":"Ghost__Post__5cd9faaa26ee00001e4365b6","title":"FISSION Fragments 1: Weekly Links Roundup","slug":"fission-fragments-1","featured":true,"feature_image":"https://s3.fission.codes/2019/05/qingbao-meng-330658-unsplash.jpg","excerpt":"First edition of our weekly roundup of links from around the decentralised web. We call it FISSION Fragments.","custom_excerpt":"First edition of our weekly roundup of links from around the decentralised web. We call it FISSION Fragments.","created_at_pretty":"13 May, 2019","published_at_pretty":"23 May, 2019","updated_at_pretty":"23 May, 2019","created_at":"2019-05-13T16:15:54.000-07:00","published_at":"2019-05-22T17:40:13.000-07:00","updated_at":"2019-05-22T20:19:40.000-07:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":"FISSION Fragments #1 Link Roundup","authors":[{"name":"Trenton Van Epps","slug":"trenton","bio":"Former architect working to grow the Ethereum ecosystem and Web3 tech.","profile_image":"https://s3.fission.codes/2019/05/14054274_10155286912259062_1515671855628123823_o.jpg","twitter":"@trent_vanepps","facebook":null,"website":null},{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"},{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"}],"primary_author":{"name":"Trenton Van Epps","slug":"trenton","bio":"Former architect working to grow the Ethereum ecosystem and Web3 tech.","profile_image":"https://s3.fission.codes/2019/05/14054274_10155286912259062_1515671855628123823_o.jpg","twitter":"@trent_vanepps","facebook":null,"website":null},"primary_tag":{"name":"FISSION Fragments","slug":"fragments","description":"Our weekly round up of links to interesting articles, projects, and more.","feature_image":"https://s3.fission.codes/2019/05/patrick-mcmanaman-116034-unsplash1900.jpg","meta_description":null,"meta_title":null},"tags":[{"name":"FISSION Fragments","slug":"fragments","description":"Our weekly round up of links to interesting articles, projects, and more.","feature_image":"https://s3.fission.codes/2019/05/patrick-mcmanaman-116034-unsplash1900.jpg","meta_description":null,"meta_title":null},{"name":"IPFS","slug":"ipfs","description":"InterPlanetary File System","feature_image":null,"meta_description":null,"meta_title":null},{"name":"Opera","slug":"opera","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"ENS","slug":"ens","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Barcelona","slug":"barcelona","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Stripe","slug":"stripe","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Slack","slug":"slack","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Jekyll","slug":"jekyll","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"What does the fission of uranium produce?\n\n> A uranium-235 atom absorbs a neutron and fissions into two new atoms (fission \nfragments), releasing three new neutrons and some binding energy. – Nuclear\nFission, Wikipedia [https://en.m.wikipedia.org/wiki/Nuclear_fission]\nSo welcome to FISSION Fragments #1  - our weekly links roundup. Want to get them\ndelivered straight to your inbox? Subscribe! We also tend to tweet a lot of\nthese links from our Twitter account @fissioncodes\n[https://twitter.com/FISSIONCodes]  if you want to get them in real time.\n\nWe cover a lot of ground, from open source communities, licensing and ideology,\ncompany & culture building, and of course lots around building and designing\nsoftware, new projects, and decentralized web tech of all kinds.\n\nFISSION Fragments #1\nHow Opera is Using ENS to Decentralize the Web\n[https://medium.com/the-ethereum-name-service/how-opera-is-using-ens-to-decentralize-the-web-ens-integration-spotlight-a545f7825724]\n: \"if you enter an .eth  name that has an IPFS [https://ipfs.io/]  hash in its \nENS records\n[https://medium.com/the-ethereum-name-service/the-new-ens-manager-now-supports-eip1577-contenthash-82e2d6724fae]\n, the IPFS content will be displayed as a normal website.\" Android only for now.\nThe Crypto Wallet you can enable in desktop Opera also needs an Android app\n[https://help.opera.com/en/how-to-use-operas-crypto-wallet-on-your-computer/].\n\nJune 27-30 is Barcelona IPFS camp [https://camp.ipfs.io/]: \"A 3 day hacker\nretreat designed for the builders of the distributed web\". This is the place to\nbe if you're hacking on core IPFS.Local-first software\n[https://www.inkandswitch.com/local-first.html]: Excellent long essay from Ink\nand Switch that are the results of research and development over several years,\nincluding a survey of \"existing approaches to data storage and sharing\". We're\nnot quite as radical about local-first, but we are definitely aligned around the\nideals for software and data they describe:\n\n> In this article we propose “local-first software”: a set of principles for\nsoftware that enables both collaboration and  ownership for users. Local-first\nideals include the ability to work offline and collaborate across multiple\ndevices, while also improving the security, privacy, long-term preservation, and\nuser control of data.\nVia @infominer33 [https://twitter.com/infominer33], Project Pages\n[https://github.com/projectpages/project-pages], a Jekyll Template geared\ntowards collaborative science, with support for Matlab, Jupyter Notebooks, and\nother charting, graphing, and data visualization tools. Thanks ⧉infominer  for\nbeing such a great contributor of links to the FISSION Discord server\n[https://fission.codes/discord]!\n\nWe're exploring a lot of topics around data portability and data ethics (and\nalso the right wording to describe these things!) The Fair Data Society\n[https://fairdatasociety.org/]  and their principles\n[https://docs.google.com/document/d/14-DM3M-cNCrq2Cn_7J8rRawhaoHOhlyXRPSQZ2thiuc/edit#heading=h.tyu66tcq1j2m] \n are good reading on these topics. \"Resistance is Never Futile\" indeed!Via Mike Davidson @mikeindustries\n[https://twitter.com/mikeindustries/status/1130688769625952256], a post from\nDerrick Reimer\n[https://www.derrickreimer.com/essays/2019/05/17/im-walking-away-from-the-product-i-spent-a-year-building.html] \n that happens to mention that Stripe uses Slack but intentionally deletes\nmessages:\n\n> An engineer at Stripe told me about their careful balance of email, forums, and\nSlack. They recognize that Slack is not suitable for meaningful conversations,\nso they automatically delete chat messages older than a few weeks to discourage\nrelying on it for long-term archival. In retrospectives, team members often\nreflect on whether they chose the right medium (email, chat, or forum) for\nvarious conversations.\nOyetoke Toby @OyetokeT [https://twitter.com/OyetokeT]  writes up forking\nCodesandbox so you can deploy to Heroku\n[https://dev.to/oyetoket/how-i-deployed-codesandbox-apps-to-heroku-ndo]. This\ntheme, of being able to code and deploy from anywhere, is another one we're\nfollowing closely. The article is posted to DevTo [https://dev.to], which is a\ndeveloper community we're really enjoying. You can find FISSION on there\n[https://dev.to/fission], too.\n\nTrent was at the ETHNewYork Ethereum hackathon and found a bunch of IPFS\nprojects [https://blog.fission.codes/fission-ethnewyork/]. We're going to be\nkicking off interviews of people building apps like these.\n\n\n--------------------------------------------------------------------------------\n\nPhoto by Qingbao Meng\n[https://unsplash.com/photos/01_igFr7hd4?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText] \n on Unsplash\n[https://unsplash.com/search/photos/nature?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText]","html":"<p>What does the fission of uranium produce?</p><blockquote>A <strong>uranium</strong>-235 atom absorbs a neutron and fissions into two new atoms (<strong>fission </strong>fragments), releasing three new neutrons and some binding energy. – <a href=\"https://en.m.wikipedia.org/wiki/Nuclear_fission\">Nuclear Fission, Wikipedia</a></blockquote><p>So welcome to <strong>FISSION Fragments #1</strong> - our weekly links roundup. Want to get them delivered straight to your inbox? <a href=\"#subscribe\">Subscribe</a>! We also tend to tweet a lot of these links from <a href=\"https://twitter.com/FISSIONCodes\">our Twitter account @fissioncodes</a> if you want to get them in real time.</p><p>We cover a lot of ground, from open source communities, licensing and ideology, company &amp; culture building, and of course lots around building and designing software, new projects, and decentralized web tech of all kinds.</p><h3 id=\"fission-fragments-1\">FISSION Fragments #1</h3><p><a href=\"https://medium.com/the-ethereum-name-service/how-opera-is-using-ens-to-decentralize-the-web-ens-integration-spotlight-a545f7825724\">How Opera is Using ENS to Decentralize the Web</a>: \"if you enter an <code>.eth</code> name that has an <a href=\"https://ipfs.io/\" rel=\"nofollow noopener\">IPFS</a> hash in its <a href=\"https://medium.com/the-ethereum-name-service/the-new-ens-manager-now-supports-eip1577-contenthash-82e2d6724fae\">ENS records</a>, the IPFS content will be displayed as a normal website.\" Android only for now. The Crypto Wallet you can enable in desktop Opera <a href=\"https://help.opera.com/en/how-to-use-operas-crypto-wallet-on-your-computer/\">also needs an Android app</a>.</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://s3.fission.codes/2019/05/ipfscamp.png\" class=\"kg-image\"><figcaption>June 27-30 is <a href=\"https://camp.ipfs.io/\">Barcelona IPFS camp</a>: \"A 3 day hacker retreat designed for the builders of the distributed web\". This is the place to be if you're hacking on core IPFS.</figcaption></figure><!--kg-card-end: image--><p><a href=\"https://www.inkandswitch.com/local-first.html\">Local-first software</a>: Excellent long essay from Ink and Switch that are the results of research and development over several years, including a survey of \"existing approaches to data storage and sharing\". We're not quite as radical about local-first, but we are definitely aligned around the ideals for software and data they describe:</p><blockquote>In this article we propose “local-first software”: a set of principles for software that enables both collaboration <em><em>and</em></em> ownership for users. Local-first ideals include the ability to work offline and collaborate across multiple devices, while also improving the security, privacy, long-term preservation, and user control of data.</blockquote><p>Via <a href=\"https://twitter.com/infominer33\">@infominer33</a>, <a href=\"https://github.com/projectpages/project-pages\">Project Pages</a>, a Jekyll Template geared towards collaborative science, with support for Matlab, Jupyter Notebooks, and other charting, graphing, and data visualization tools. Thanks <strong>⧉infominer</strong> for being such a great contributor of links to the <a href=\"https://fission.codes/discord\">FISSION Discord server</a>!</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://s3.fission.codes/2019/05/fairdatasociety-screenshot.png\" class=\"kg-image\"><figcaption>We're exploring a lot of topics around data portability and data ethics (and also the right wording to describe these things!) The <a href=\"https://fairdatasociety.org/\">Fair Data Society</a> and their <a href=\"https://docs.google.com/document/d/14-DM3M-cNCrq2Cn_7J8rRawhaoHOhlyXRPSQZ2thiuc/edit#heading=h.tyu66tcq1j2m\">principles</a> are good reading on these topics. \"Resistance is Never Futile\" indeed!</figcaption></figure><!--kg-card-end: image--><p>Via <a href=\"https://twitter.com/mikeindustries/status/1130688769625952256\">Mike Davidson @mikeindustries</a>, a <a href=\"https://www.derrickreimer.com/essays/2019/05/17/im-walking-away-from-the-product-i-spent-a-year-building.html\">post from Derrick Reimer</a> that happens to mention that Stripe uses Slack but intentionally deletes messages:</p><blockquote>An engineer at Stripe told me about their careful balance of email, forums, and Slack. They recognize that Slack is not suitable for meaningful conversations, so they automatically delete chat messages older than a few weeks to discourage relying on it for long-term archival. In retrospectives, team members often reflect on whether they chose the right medium (email, chat, or forum) for various conversations.</blockquote><p><a href=\"https://twitter.com/OyetokeT\">Oyetoke Toby @OyetokeT</a> writes up <a href=\"https://dev.to/oyetoket/how-i-deployed-codesandbox-apps-to-heroku-ndo\">forking Codesandbox so you can deploy to Heroku</a>. This theme, of being able to code and deploy from anywhere, is another one we're following closely. The article is posted to <a href=\"https://dev.to\">DevTo</a>, which is a developer community we're really enjoying. You can <a href=\"https://dev.to/fission\">find FISSION on there</a>, too.</p><p>Trent was at the <a href=\"https://blog.fission.codes/fission-ethnewyork/\">ETHNewYork Ethereum hackathon and found a bunch of IPFS projects</a>. We're going to be kicking off interviews of people building apps like these.</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p><em>Photo by <a href=\"https://unsplash.com/photos/01_igFr7hd4?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Qingbao Meng</a> on <a href=\"https://unsplash.com/search/photos/nature?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash</a></em></p>","url":"https://blog.fission.codes/fission-fragments-1/","canonical_url":null,"uuid":"361c02ec-e9e6-47bc-a124-e439bd85da03","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5cd9faaa26ee00001e4365b6","reading_time":null}}]}},"pageContext":{"slug":"ipfs","pageNumber":1,"humanPageNumber":2,"skip":12,"limit":12,"numberOfPages":3,"previousPagePath":"/tag/ipfs","nextPagePath":"/tag/ipfs/page/3"}},"staticQueryHashes":["1752937443","2358152166","2561578252","2731221146","4145280475"]}