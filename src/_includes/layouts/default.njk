<!DOCTYPE html>
<html lang="{{ site.lang }}" class="no-js">
    <head>
        <meta charset="UTF-8" />
        <title>
            {%- if title -%}
                {{ title }} – {{ site.title }}
            {%- else -%}
                {{ site.title }} – {{ site.description }}
            {%- endif -%}
        </title>
        <meta name="description" content="{% block description %}{{ site.description }}{% endblock %}">
        <meta name="robots" content="index,follow">
        <meta name="generator" content="Eleventy">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
        <link rel="icon" type="image/svg+xml" href="{{ "/images/favicon.svg" | relativePath(page) }}" sizes="any">

        {%- block seo -%}
            <!--Twitter Card-->
            <meta name="twitter:site" content="{{ site.twitter }}">
            <meta name="twitter:creator" content="{{ site.twitter }}">
            <meta name="twitter:card" content="summary_large_image">
            <meta name="twitter:url" content="{{ site.url + page.url }}">
            <meta name="twitter:title" content="{{ title + " – " + site.title if title else title }}">
            <meta name="twitter:description" content="{{ site.description }}">
            <meta name="twitter:image" content="/images/openGraph.png?filename=openGraph.png">

            <!--Schema-->
            <link rel="author" href="{{ site.url }}">
            <link rel="publisher" href="{{ site.url }}">
            <meta itemprop="name" content="{{ title + " – " + site.title if title else title }}">
            <meta itemprop="description" content="{{ site.description }}">
            <meta itemprop="image" content="/images/openGraph.png?filename=openGraph.png">

            <!-- Facebook OpenGraph -->
            <meta property="og:url" content="{{site.url + page.url}}">
            <meta property="og:type" content="website">
            <meta property="og:title" content="{{ title + " – " + site.title if title else title }}">
            <meta property="og:image" content="/images/openGraph.png?filename=openGraph.png">
            <meta property="og:description" content="{{ site.description }}">
            <meta property="og:site_name" content="{{ site.title }}">
            <meta property="og:locale" content="{{ site.lang }}">
            <meta property="article:author" content="{{ site.url }}">
        {%- endblock -%}

        <link rel="stylesheet" href="{{ "/stylesheet-new.css" | relativePath(page) }}" />
        <script defer data-domain="fission.codes" src="https://plausible.io/js/script.js"></script>

        <script defer src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.28.0/components/prism-core.min.js" integrity="sha512-9khQRAUBYEJDCDVP2yw3LRUQvjJ0Pjx0EShmaQjcHa6AXiOv6qHQu9lCAIR8O+/D8FtaCoJ2c0Tf9Xo7hYH01Q==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
        <script defer src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.28.0/plugins/autoloader/prism-autoloader.min.js" integrity="sha512-fTl/qcO1VgvKtOMApX2PdZzkziyr2stM65GYPLGuYMnuMm1z2JLJG6XVU7C/mR+E7xBUqCivykuhlzfqxXBXbg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

        <script>

            document.addEventListener('DOMContentLoaded', async () => {
                // Newsletter Submission Handler - ToDo: move this to its own script file
                document.querySelector('.newsletter-form').addEventListener('submit', async (event) => {
                    event.preventDefault();
                    try {
                        const formData = new FormData(event.target)

                        const res = await fetch(
                            'https://api.form-data.com/f/aowqx8bp00phzprfdtxzqu',
                            {
                                method: 'POST',
                                body: JSON.stringify({ email: formData.get('email') }),
                                headers: { 'Content-Type': 'application/json' }
                            }
                        )
                        document.querySelector('.newsletter-form').innerHTML = '<p class="input input-bordered font-normal pl-[25px] pr-[70px] relative z-10 h-[66px] leading-[66px] text-[20px] rounded-sm bg-newneutral-0 text-newneutral-500 border-newneutral-700 ">Please check your email!</p>'
                    } catch (error) {
                        console.error(error)
                        document.querySelector('.newsletter-form input[type="email"]').classList.add('input-error')
                    }
                });

                // Overlay Menu - ToDo: move this to its own script file
                const overlayMenu = document.querySelector('.overlay-menu');

                // this function is used to open the menu
                const openOverlayMenu = () => {
                    overlayMenu.classList.remove('w-0', 'h-0', 'opacity-0');
                    overlayMenu.classList.add('w-screen', 'h-screen', 'opacity-100');
                }

                // this function is used to close the menu
                const closeOverlayMenu = () => {
                    overlayMenu.classList.remove('w-screen', 'h-screen', 'opacity-100');
                    overlayMenu.classList.add('w-0', 'h-0', 'opacity-0');
                }

                document.querySelector('.open-menu').addEventListener('click', openOverlayMenu)
                document.querySelector('.close-menu').addEventListener('click', closeOverlayMenu)

                // Modify home links if viewing the site via IPFS(doing this here instead of via relativePath to optimize performance metrics)
                if (window.location.origin.includes('https://ipfs.')) {
                    const homeLinks = document.querySelectorAll('.homepage-link')
                    homeLinks.forEach((link) => {
                        link.setAttribute('href', `${window.location.origin}/ipns/fissioncodes.fission.app/`);
                    })
                }

                // Audio player
                !function() {
                    const e = function(e) {
                        const t = e.querySelector(".kg-audio-player-container")
                        , a = e.querySelector(".kg-audio-play-icon")
                        , o = e.querySelector(".kg-audio-pause-icon")
                        , i = e.querySelector(".kg-audio-seek-slider")
                        , r = e.querySelector(".kg-audio-playback-rate")
                        , d = e.querySelector(".kg-audio-mute-icon")
                        , l = e.querySelector(".kg-audio-unmute-icon")
                        , s = e.querySelector(".kg-audio-volume-slider")
                        , n = e.querySelector("audio")
                        , c = e.querySelector(".kg-audio-duration")
                        , u = e.querySelector(".kg-audio-current-time");
                        let g = [{
                            rate: .75,
                            label: "0.7×"
                        }, {
                            rate: 1,
                            label: "1×"
                        }, {
                            rate: 1.25,
                            label: "1.2×"
                        }, {
                            rate: 1.75,
                            label: "1.7×"
                        }, {
                            rate: 2,
                            label: "2×"
                        }]
                        , v = null
                        , m = 1;
                        const k = ()=>{
                            i.value = Math.floor(n.currentTime),
                            u.textContent = h(i.value),
                            t.style.setProperty("--seek-before-width", i.value / i.max * 100 + "%"),
                            v = requestAnimationFrame(k)
                        }
                        , y = e=>{
                            e === i ? t.style.setProperty("--seek-before-width", e.value / e.max * 100 + "%") : t.style.setProperty("--volume-before-width", e.value / e.max * 100 + "%")
                        }
                        , h = e=>{
                            const t = Math.floor(e / 60)
                            , a = Math.floor(e % 60);
                            return `${t}:${a < 10 ? `0 ${a}` : `${a}`}`
                        }
                        , p = ()=>{
                            c.textContent = h(n.duration)
                        }
                        , f = ()=>{
                            i.max = Math.floor(n.duration)
                        }
                        , L = ()=>{
                            if (n.buffered.length > 0) {
                                const e = Math.floor(n.buffered.end(n.buffered.length - 1));
                                t.style.setProperty("--buffered-width", e / i.max * 100 + "%")
                            }
                        }
                        ;
                        n.readyState > 0 ? (p(),
                        f(),
                        L()) : n.addEventListener("loadedmetadata", (()=>{
                            p(),
                            f(),
                            L()
                        }
                        )),
                        a.addEventListener("click", (()=>{
                            a.classList.add("kg-audio-hide"),
                            o.classList.remove("kg-audio-hide"),
                            n.play(),
                            requestAnimationFrame(k)
                        }
                        )),
                        o.addEventListener("click", (()=>{
                            o.classList.add("kg-audio-hide"),
                            a.classList.remove("kg-audio-hide"),
                            n.pause(),
                            cancelAnimationFrame(v)
                        }
                        )),
                        d.addEventListener("click", (()=>{
                            d.classList.add("kg-audio-hide"),
                            l.classList.remove("kg-audio-hide"),
                            n.muted = !1
                        }
                        )),
                        l.addEventListener("click", (()=>{
                            l.classList.add("kg-audio-hide"),
                            d.classList.remove("kg-audio-hide"),
                            n.muted = !0
                        }
                        )),
                        r.addEventListener("click", (()=>{
                            let e = g[(m + 1) % 5];
                            m += 1,
                            n.playbackRate = e.rate,
                            r.textContent = e.label
                        }
                        )),
                        n.addEventListener("progress", L),
                        i.addEventListener("input", (e=>{
                            y(e.target),
                            u.textContent = h(i.value),
                            n.paused || cancelAnimationFrame(v)
                        }
                        )),
                        i.addEventListener("change", (()=>{
                            n.currentTime = i.value,
                            n.paused || requestAnimationFrame(k)
                        }
                        )),
                        s.addEventListener("input", (e=>{
                            const t = e.target.value;
                            y(e.target),
                            n.volume = t / 100
                        }
                        ))
                    }
                    , t = document.querySelectorAll(".kg-audio-card");
                    for (let a = 0; a < t.length; a++)
                        e(t[a])
                }();
            });
        </script>
        <script>document.documentElement.classList.remove('no-js');</script>

        {{ site.codeinjection_head | safe if site.codeinjection_head }}
        {{ codeinjection_head | safe if codeinjection_head }}
    </head>
    <body class="bg-newneutral-100 text-newneutral-600 text-xs lg:text-base">
        {% include "partials/icons.njk" %}
        {% include "partials/overlay-menu.njk" %}
        <div class="viewport">

            <div class="viewport-top pt-[70px]">
                <div class="bg-blend-lighten bg-purple-fade h-16 absolute top-[70px] lg:h-28 w-full pointer-events-none"></div>
                {% block header %}
                {% endblock header %}

                <main class="site-main page-wrapper">
                    {% block content %}
                    {% endblock content %}
                </main>
            </div>

            <div class="viewport-bottom">
                {% include "partials/footer.njk" %}
            </div>

            {{ site.codeinjection_foot | safe if site.codeinjection_foot }}
            {{ codeinjection_foot | safe if codeinjection_foot }}
        </div>
    </body>
</html>
