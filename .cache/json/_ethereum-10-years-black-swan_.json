{"data":{"ghostPost":{"id":"Ghost__Post__5cd8704b25232e001e6a6fce","title":"Ethereum’s 10 year future and Black Swan Threats & Opportunities","slug":"ethereum-10-years-black-swan","featured":false,"feature_image":"https://images.unsplash.com/photo-1544789841-88fdfbdfd1e4?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","excerpt":"Russell Keith-Magee's PyCon 2019 keynote looks at Python's history & its 10 year future, including what black swan events it needs to prepare for.\n\nWhat lessons can we take from this for the Ethereum community?","custom_excerpt":"Russell Keith-Magee's PyCon 2019 keynote looks at Python's history & its 10 year future, including what black swan events it needs to prepare for.\n\nWhat lessons can we take from this for the Ethereum community?","created_at_pretty":"12 May, 2019","published_at_pretty":"12 May, 2019","updated_at_pretty":"12 May, 2019","created_at":"2019-05-12T12:13:15.000-07:00","published_at":"2019-05-12T12:38:10.000-07:00","updated_at":"2019-05-12T12:41:27.000-07:00","meta_title":null,"meta_description":"Russell Keith-Magee's PyCon 2019 keynote looks at Python's history & its 10 year future, including what black swan events it needs to prepare for.\n\nWhat lessons can we take from this for the Ethereum community?","og_description":null,"og_image":null,"og_title":null,"twitter_description":"What lessons can the Ethereum community take from the PyCon 2019 keynote on 10 year relevance & black swan threats and opportunities?","twitter_image":null,"twitter_title":"Ethereum's 10 year future & Black Swan","authors":[{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"}],"primary_author":{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"},"primary_tag":{"name":"Ethereum","slug":"ethereum","description":null,"feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"Ethereum","slug":"ethereum","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"open source","slug":"open-source","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"I just watched the entirety of this PyCon keynote [1] by Russell Keith-Magee\n@freakboy3742 [https://twitter.com/freakboy3742]. Python is 28 years old, and\nthe context is — how does it stay relevant for the next 10 years? How does it\nplan to do things, to remain relevant? And what “black swan” events does Python\nneed to be prepared for?\n\nThe essential topic is, Python has been around for 28 years; how does it make\nsure it stays around for 10 more years? Covers “black swan” events, open source\ncommunity norms, WASM, volunteerism vs. funding experts, contributor burn out,\nand more.\n\nTake Aways for Ethereum\nA lot of this is familiar to be me because I have a long history with open\nsource projects. But, that’s history: one big point is that we need to be\nthinking about — and planning for! — the future of collaborative projects. From\nmy recent involvement with the Ethereum project [2], I’ve been thinking a lot\nabout the topics covered.\n\nI feel like Ethereum and its component parts (I’ve started calling this the\n“Ethereum Stack”, more on this in a bit) are just on the way towards becoming\nmore traditional open source projects, from its relatively centralized roots.\n\nAlexey’s article about Eth1x\n[https://medium.com/@akhounov/ethereum-1x-as-an-attempt-to-change-the-process-783efa23cf60] \n highlights this shift well: a shift in who  works on research and\nimplementation, and a shift in how  the process is changing and needs to\ncontinue to evolve.\n\n> Now, instead of waiting for some developers in well-established implementation\nteams to get interested in a proposal, it is possible to form a working group\nand start working on it. Of course, it is still not trivial, because it requires\nfinding people who want to do the work, people who want to pay for it, etc. But\nat least it hopefully gives us a nice separation of duties, and a more scalable\nprocess.\n\n— Alexey Akhunov\n[https://medium.com/@akhounov/ethereum-1x-as-an-attempt-to-change-the-process-783efa23cf60]\nIn other open source communities, a foundation or other entities comes after \ngrowth of the community. We’re in the midst of seeing the Ethereum Foundation\n[https://ethereum.foundation]  actively divest itself of core responsibilities.\n\nOh, and if you don’t know Python, python2 and python3, which after 10 years\nstill co-exist, are also useful to look at for thoughts on ETH2.\n\nIf I could, I would want to get up on stage at DevCon5 [https://devcon.org]  and\nessentially give the exact same talk, applied to Ethereum.\n\nHere are specific areas of the talk, applied to Ethereum:\n\nBecoming Open Source\nEthereum is still learning what it means to be an open source project; we need\nto spread a culture of getting involved, contributions that go beyond code, and\niteratively making things better.\n\nWhat does this mean? It means turning “this sucks” into actionable items, that\nget assigned / have ownership taken, and that get reviewed weekly and monthly.\n\nEvery day, we make things suck less. It may not sound like the best rallying\ncry, but trust me when I say that this appeals to engineering and “do-er”\nmindsets, and that compounding effort pays off. #WeighingWei\n\nI am asking non-code contributors to learn basic open source code repository\nnorms (issues & PRs), asking developers who may not have organic open source\nexperience outside of Ethereum to welcome new contributors (#goodFirstIssue,\nbettering CONTRIBUTING documentation, resources dedicated to bringing on new\ncode contributors), and all of us to learn how to collaborate better.\n\nOpen Source Licensing & Funding isn’t a Solved Problem\nOpen source licensing and funding is at a cross roads, so along with learning\nfrom other open source projects and norms, Ethereum has an opportunity to lead\nin experiments in these areas.\n\nOpen source licensing in Ethereum has not been a strategic consideration. There\nis a mess of different licensing, and many of the licenses used slow down\nadoption by commercial companies and enterprise. Part of the discussion around\nopen source licensing in the broader world is as an opportunity to generate\nrevenue, and to reinforce contributions to the commons.\n\nFunding innovations are popping up left and right in Ethereum, but I would say\nthat only Gitcoin and Gitcoin Grants are firmly rooted in an open source project\ntradition. Meaning: I think other efforts need to understand how to incorporate\nopen source awareness into their thinking.\n\nEmbrace the Ethereum Stack\nI’ve started to think about Ethereum as the “Ethereum Stack” — the EVM, JSON-RPC\nmiddleware, the devp2p networking layer, the Solidity smart contract language,\nthe EIPs that set specifications, the client software that powers nodes — all of\nthese are in many cases open source projects of their own, coordinating and\ncollaborating together, and also getting remixed in different chains,\nsidechains, and private enterprise contexts.\n\nThis is a strength if  we can make a tent that is bigger than main-net Ethereum.\nWhile still leaning into Ethereum public main-net as a global umbrella that the\nentire stack can benefit from and link into.\n\nThe Ethereum community’s “specification first” approach to building software and\nsupporting multiple client implementations is potentially a core strength here.\n\nWe’ve been gathering EVM-related news (I’m realizing that EVM is another analog\nfor Ethereum Stack) on the RUN EVM site [https://RUNEVM.com]. And yet, I was\nstill surprised to see ThoughtWorks Radar highlight “EVM beyond Ethereum”\n[https://www.thoughtworks.com/radar/platforms/evm-beyond-ethereum#.XMNHO1fOmME.link]\n; it’s in their “Trial” category, one before “Adopt” recommendation.\n\nEVM beyond Ethereum in the \"Trial\" area of ThoughtWorks Radar Platform category\n[https://www.thoughtworks.com/radar/platforms]Ethereum’s Black Swans\nWhat disruptions and major shifts in the broader technology industry might\naffect Ethereum? Even while thinking about distributed ledger technology and\nrelated decentralized web tech as a disruption itself, we need to look at how\nthe Ethereum stack fits into other changes.\n\nWASM\nThe community is already working on improving the EVM and making the transition\nto WASM [3], which is mentioned in the video.\n\nSolidity, as a major programming language in the ecosystem, in part “competes”\nwith Python. On the other hand, enabling the Python developer community to write\nEthereum compatible smart contracts is a huge win for our community. This is why\nI want to see LLVM to EVM work today [4], which lets us start recruiting other\nlanguage developers today, and sets us up for support in WASM as well (that is,\nit’s not duplication, it’s forward compatible work, as WASM relies on LLVM for\nother language compatibility as well).\n\nMobile as a Programming Environment\nPersonally, I have been jumping up and down over mobile support, not just for\nEthereum powered applications, but also for writing / launching apps. I see the\nsame “make Ethereum programming work from your phone” opportunity and threat\nhighlighted by Russell.\n\nSince Ethereum chains run continuously as a global “backend” — I see this as an\nopportunity! Front end apps written in JavaScript, CSS, and HTML can get written\n& deployed from mobile devices today — with Ethereum blockchains providing a\nshared backend. This is connected to the “hostless” theme that we are following\nat FISSION.\n\nWhat should we work on?\nThe entire video has lessons, so I really encourage anyone interested in open\nsource, software communities, and contributor culture to watch the whole thing.\n\nHere are my top two picks on base level strengths that I think the Ethereum\ncommunity can work on:\n\n 1. Become experts at commons based peer production, from non-code\n    collaboration, to funding, to open source licensing. Celebrate experiments\n    and new entrants, while also Getting Shit Done.\n 2. Work on building strong maintainers and communities around all components of\n    the Ethereum Stack, and look for adoption of the stack everywhere.\n\nFISSION’s mission is to bring decentralized web technologies to the wider\ndevelopment community by solving real problems today & exploring fundamental\nshifts in the way we host, deploy, and run software for humans. I look forward\nto completing this mission alongside the growth of the Ethereum community.\n\nSign up if you want to get involved as an alpha tester »\n[https://tools.fission.codes]\n\n\n--------------------------------------------------------------------------------\n\nFurther Reading\nI haven’t read Elisabeth Ostrom’s 1990 book, “Governing the Commons: The\nEvolution of Institutions for Collective Action“. It was mentioned in the\nkeynote, and has been brought up multiple times. I’m putting it on my reading\nlist. Everybody has homework!\n\nHere’s a link to a PDF hash on IPFS\n[https://ipfs.bmann.ca/ipfs/QmNviQhSNnmp85pZGfiHuvQd98z3WNoCVGCCFu2UhxPp8d]\n\nOn the recommendation of Trent McConaghy @trentmc0\n[https://twitter.com/trentmc0], I recently bought Pieter Hintjen’s Social\nArchitecture [https://github.com/hintjens/socialarchitecture]. I know Brooke\n@expede [https://twitter.com/expede]  is ahead of me in reading it, and I also\nsent a copy to Trent @trent_vanepps [https://twitter.com/trent_vanepps].\n\nAside from the Github link [https://github.com/hintjens/socialarchitecture]  to\nSocial Architecture, it is available on Amazon, and here are PDF\n[https://ipfs.bmann.ca/ipfs/QmXYe6Y6FU2REMjLaVRDBL9dxn6NZanMWCVS3SJcprsVod]  and\n ePub\n[https://ipfs.bmann.ca/ipfs/QmdxhQCisygwKq4ZzEqtw9upaEGEbnDtkiQzT8RzzcoSZh] \nIPFS hashes.\n\n\n--------------------------------------------------------------------------------\n\n[1] This keynote was given at PyCon 2019 [https://us.pycon.org/2019/about/],\nwhich is the Python communities largest annual gathering.\n\n[2] I wrote a post about Ethereum Governance\n[https://blog.bmannconsulting.com/ethereum-governance/#boriseth]  and covered my\nown entry and participation in the community.\n\n[3] Our team leads the EVM Evolution Working Group\n[https://fission.codes/evmevolution]. Because it likely has to be said, this\ndoes not mean we don’t like WASM! Forward compatibility is our goal, we’re not\ntied to the current spec of the EVM, but rather want to evolve it today, and\nhelp with the WASM transition. I joke (but am actually serious!) that our RUN\nEVM [https://RUNEVM.com]  event and rallying cry stands for “Run Excellent\nVirtual Machines”.\n\n[4] I recently found out that the ETC Labs team is working on an LLVM to EVM\nproject [https://github.com/ethereumproject/evm_llvm/tree/EVM]  — Ethereum Stack\nFTW!","html":"<p>I just watched the entirety of this PyCon keynote [1] by <a href=\"https://twitter.com/freakboy3742\">Russell Keith-Magee @freakboy3742</a>. Python is 28 years old, and the context is — how does it stay relevant for the next 10 years? How does it plan to do things, to remain relevant? And what “black swan” events does Python need to be prepared for?</p><!--kg-card-begin: embed--><figure class=\"kg-card kg-embed-card\"><iframe width=\"480\" height=\"270\" src=\"https://www.youtube.com/embed/ftP5BQh1-YM?start=1239&feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></figure><!--kg-card-end: embed--><p>The essential topic is, Python has been around for 28 years; how does it make sure it stays around for 10 more years? Covers “black swan” events, open source community norms, WASM, volunteerism vs. funding experts, contributor burn out, and more.</p><h2 id=\"take-aways-for-ethereum\">Take Aways for Ethereum</h2><p>A lot of this is familiar to be me because I have a long history with open source projects. <strong>But</strong>, that’s history: one big point is that we need to be thinking about — and planning for! — the future of collaborative projects. From my recent involvement with the Ethereum project [2], I’ve been thinking a lot about the topics covered.</p><p>I feel like Ethereum and its component parts (I’ve started calling this the “Ethereum Stack”, more on this in a bit) are just on the way towards becoming more traditional open source projects, from its relatively centralized roots.</p><p>Alexey’s <a href=\"https://medium.com/@akhounov/ethereum-1x-as-an-attempt-to-change-the-process-783efa23cf60\">article about Eth1x</a> highlights this shift well: a shift in <em>who</em> works on research and implementation, and a shift in <em>how</em> the process is changing and needs to continue to evolve.</p><blockquote>Now, instead of waiting for some developers in well-established implementation teams to get interested in a proposal, it is possible to form a working group and start working on it. Of course, it is still not trivial, because it requires finding people who want to do the work, people who want to pay for it, etc. But at least it hopefully gives us a nice separation of duties, and a more scalable process.<br><br>— <a href=\"https://medium.com/@akhounov/ethereum-1x-as-an-attempt-to-change-the-process-783efa23cf60\">Alexey Akhunov</a></blockquote><p>In other open source communities, a foundation or other entities comes <em>after</em> growth of the community. We’re in the midst of seeing the <a href=\"https://ethereum.foundation\">Ethereum Foundation</a> actively divest itself of core responsibilities.</p><p>Oh, and if you don’t know Python, python2 and python3, which after 10 years still co-exist, are also useful to look at for thoughts on ETH2.</p><p>If I could, I would want to get up on stage at <a href=\"https://devcon.org\">DevCon5</a> and essentially give the exact same talk, applied to Ethereum.</p><p>Here are specific areas of the talk, applied to Ethereum:</p><h3 id=\"becoming-open-source\">Becoming Open Source</h3><p>Ethereum is still learning what it means to be an open source project; we need to spread a culture of getting involved, contributions that go beyond code, and iteratively making things better.</p><p>What does this mean? It means turning “this sucks” into actionable items, that get assigned / have ownership taken, and that get reviewed weekly and monthly.</p><p>Every day, we make things suck less. It may not sound like the best rallying cry, but trust me when I say that this appeals to engineering and “do-er” mindsets, and that compounding effort pays off. #WeighingWei</p><p>I am asking non-code contributors to learn basic open source code repository norms (issues &amp; PRs), asking developers who may not have organic open source experience outside of Ethereum to welcome new contributors (#goodFirstIssue, bettering CONTRIBUTING documentation, resources dedicated to bringing on new code contributors), and all of us to learn how to collaborate better.</p><h3 id=\"open-source-licensing-funding-isn-t-a-solved-problem\">Open Source Licensing &amp; Funding isn’t a Solved Problem</h3><p>Open source licensing and funding is at a cross roads, so along with learning from other open source projects and norms, Ethereum has an opportunity to lead in experiments in these areas.</p><p>Open source licensing in Ethereum has not been a strategic consideration. There is a mess of different licensing, and many of the licenses used slow down adoption by commercial companies and enterprise. Part of the discussion around open source licensing in the broader world is as an opportunity to generate revenue, and to reinforce contributions to the commons.</p><p>Funding innovations are popping up left and right in Ethereum, but I would say that only Gitcoin and Gitcoin Grants are firmly rooted in an open source project tradition. Meaning: I think other efforts need to understand how to incorporate open source awareness into their thinking.</p><h3 id=\"embrace-the-ethereum-stack\">Embrace the Ethereum Stack</h3><p>I’ve started to think about Ethereum as the “Ethereum Stack” — the EVM, JSON-RPC middleware, the devp2p networking layer, the Solidity smart contract language, the EIPs that set specifications, the client software that powers nodes — all of these are in many cases open source projects of their own, coordinating and collaborating together, and also getting remixed in different chains, sidechains, and private enterprise contexts.</p><p>This is a strength <strong>if</strong> we can make a tent that is bigger than main-net Ethereum. While still leaning into Ethereum public main-net as a global umbrella that the entire stack can benefit from and link into.</p><p>The Ethereum community’s “specification first” approach to building software and supporting multiple client implementations is potentially a core strength here.</p><p>We’ve been gathering EVM-related news (I’m realizing that EVM is another analog for Ethereum Stack) on the <a href=\"https://RUNEVM.com\">RUN EVM site</a>. And yet, I was still surprised to see <a href=\"https://www.thoughtworks.com/radar/platforms/evm-beyond-ethereum#.XMNHO1fOmME.link\">ThoughtWorks Radar highlight “EVM beyond Ethereum”</a>; it’s in their “Trial” category, one before “Adopt” recommendation.</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://s3.fission.codes/2019/05/00DB9795-115B-4E74-98A8-AE80D84D9566.png\" class=\"kg-image\"><figcaption>EVM beyond Ethereum in the \"Trial\" area of <a href=\"https://www.thoughtworks.com/radar/platforms\">ThoughtWorks Radar Platform category</a></figcaption></figure><!--kg-card-end: image--><h2 id=\"ethereum-s-black-swans\">Ethereum’s Black Swans</h2><p>What disruptions and major shifts in the broader technology industry might affect Ethereum? Even while thinking about distributed ledger technology and related decentralized web tech as a disruption itself, we need to look at how the Ethereum stack fits into other changes.</p><h3 id=\"wasm\">WASM</h3><p>The community is already working on improving the EVM and making the transition to WASM [3], which is mentioned in the video.</p><p>Solidity, as a major programming language in the ecosystem, in part “competes” with Python. On the other hand, enabling the Python developer community to write Ethereum compatible smart contracts is a huge win for our community. This is why I want to see LLVM to EVM work today [4], which lets us start recruiting other language developers today, and sets us up for support in WASM as well (that is, it’s not duplication, it’s forward compatible work, as WASM relies on LLVM for other language compatibility as well).</p><h3 id=\"mobile-as-a-programming-environment\">Mobile as a Programming Environment</h3><p>Personally, I have been jumping up and down over mobile support, not just for Ethereum powered applications, but also for writing / launching apps. I see the same “make Ethereum programming work from your phone” opportunity and threat highlighted by Russell.</p><p>Since Ethereum chains run continuously as a global “backend” — I see this as an opportunity! Front end apps written in JavaScript, CSS, and HTML can get written &amp; deployed from mobile devices today — with Ethereum blockchains providing a shared backend. This is connected to the “hostless” theme that we are following at FISSION.</p><h2 id=\"what-should-we-work-on\">What should we work on?</h2><p>The entire video has lessons, so I really encourage anyone interested in open source, software communities, and contributor culture to watch the whole thing.</p><p>Here are my top two picks on base level strengths that I think the Ethereum community can work on:</p><ol><li>Become experts at commons based peer production, from non-code collaboration, to funding, to open source licensing. Celebrate experiments and new entrants, while also Getting Shit Done.</li><li>Work on building strong maintainers and communities around all components of the Ethereum Stack, and look for adoption of the stack everywhere.</li></ol><p>FISSION’s mission is to bring decentralized web technologies to the wider development community by solving real problems today &amp; exploring fundamental shifts in the way we host, deploy, and run software for humans. I look forward to completing this mission alongside the growth of the Ethereum community.</p><p><a href=\"https://tools.fission.codes\">Sign up if you want to get involved as an alpha tester »</a></p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><h2 id=\"further-reading\">Further Reading</h2><p>I haven’t read Elisabeth Ostrom’s 1990 book, “Governing the Commons: The Evolution of Institutions for Collective Action“. It was mentioned in the keynote, and has been brought up multiple times. I’m putting it on my reading list. Everybody has homework!</p><p>Here’s a link to a <a href=\"https://ipfs.bmann.ca/ipfs/QmNviQhSNnmp85pZGfiHuvQd98z3WNoCVGCCFu2UhxPp8d\">PDF hash on IPFS</a></p><p>On the recommendation of <a href=\"https://twitter.com/trentmc0\">Trent McConaghy @trentmc0</a>, I recently bought <a href=\"https://github.com/hintjens/socialarchitecture\">Pieter Hintjen’s Social Architecture</a>. I know <a href=\"https://twitter.com/expede\">Brooke @expede</a> is ahead of me in reading it, and I also sent a copy to <a href=\"https://twitter.com/trent_vanepps\">Trent @trent_vanepps</a>.</p><p>Aside from the <a href=\"https://github.com/hintjens/socialarchitecture\">Github link</a> to Social Architecture, it is available on Amazon, and here are <a href=\"https://ipfs.bmann.ca/ipfs/QmXYe6Y6FU2REMjLaVRDBL9dxn6NZanMWCVS3SJcprsVod\">PDF</a> and <a href=\"https://ipfs.bmann.ca/ipfs/QmdxhQCisygwKq4ZzEqtw9upaEGEbnDtkiQzT8RzzcoSZh\">ePub</a> IPFS hashes.</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p>[1] This keynote was given at <a href=\"https://us.pycon.org/2019/about/\">PyCon 2019</a>, which is the Python communities largest annual gathering.</p><p>[2] I wrote a post about <a href=\"https://blog.bmannconsulting.com/ethereum-governance/#boriseth\">Ethereum Governance</a> and covered my own entry and participation in the community.</p><p>[3] Our team leads the <a href=\"https://fission.codes/evmevolution\">EVM Evolution Working Group</a>. Because it likely has to be said, <em>this does not mean we don’t like WASM</em>! Forward compatibility is our goal, we’re not tied to the current spec of the EVM, but rather want to evolve it today, and help with the WASM transition. I joke (but am actually serious!) that our <a href=\"https://RUNEVM.com\">RUN EVM</a> event and rallying cry stands for “Run Excellent Virtual Machines”.</p><p>[4] I recently found out that the <a href=\"https://github.com/ethereumproject/evm_llvm/tree/EVM\">ETC Labs team is working on an LLVM to EVM project</a> — Ethereum Stack FTW!</p>","url":"https://blog.fission.codes/ethereum-10-years-black-swan/","canonical_url":null,"uuid":"9802b865-6d35-45a3-b693-700d36799c24","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5cd8704b25232e001e6a6fce","reading_time":null}},"pageContext":{"slug":"ethereum-10-years-black-swan"}}