{"data":{"ghostAuthor":{"slug":"boris","name":"Boris Mann","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","cover_image":"https://s3.fission.codes/2019/05/9D9432E4-4012-426E-9DE8-1B776F2D28DA.jpeg","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","location":"Vancouver, BC, Canada","website":"https://blog.bmannconsulting.com","twitter":"@bmann","facebook":null},"allGhostPost":{"edges":[{"node":{"id":"Ghost__Post__6049c1d0c695c4001e8c7e86","title":"IPFS Local Offline Collaboration SIG","slug":"ipfs-local-offline-collaboration-sig","featured":false,"feature_image":"https://s3.fission.codes/2021/03/Screen-Shot-2021-03-10-at-11.13.36-PM-1.png","excerpt":"We presented Fission's approach to local first apps on IPFS to the Local Offline Collaboration SIG on March 10th, 2021.","custom_excerpt":"We presented Fission's approach to local first apps on IPFS to the Local Offline Collaboration SIG on March 10th, 2021.","created_at_pretty":"11 March, 2021","published_at_pretty":"10 March, 2021","updated_at_pretty":"11 March, 2021","created_at":"2021-03-10T23:08:00.000-08:00","published_at":"2021-03-10T09:00:00.000-08:00","updated_at":"2021-03-11T11:20:13.000-08:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"},{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"}],"primary_author":{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"},"primary_tag":{"name":"Presentations","slug":"presentation","description":null,"feature_image":"https://images.unsplash.com/photo-1535016120720-40c646be5580?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","meta_description":null,"meta_title":null},"tags":[{"name":"Presentations","slug":"presentation","description":null,"feature_image":"https://images.unsplash.com/photo-1535016120720-40c646be5580?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","meta_description":null,"meta_title":null},{"name":"DWeb","slug":"dweb","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"IPFS","slug":"ipfs","description":"InterPlanetary File System","feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"We presented Fission's approach to local first apps on IPFS with the Fission\npublishing platform and webnative SDK.\n\nOur guiding principle for using IPFS is: Everything should work in the browser,\nincluding on mobile, with no extensions required.\n\nThe Special Interest Group (SIG) focused on IPFS and local offline collaboration\nhas its home base on Github [https://github.com/ipfs/local-offline-collab/],\nwhich you can follow for updates and future meetings. \n\nThe slides are available on IPFS of course »\n[https://ipfs.runfission.com/ipfs/bafybeigr4crq5fe5kwump3pp3a2z74udgsgwum2yxb6cfwfntzez7rs4hu/p/2021-03-10%20IPFS%20Local%20Offline%20Collab.pdf]\n\nA great quote from Brooklyn:\n\n> We're trying to make IPFS boring!\nMeaning: it should just work, and be reliable, and provide great capabilities to\ndevelopers and app users alike.\n\nThe two key links from follow up are:\n\n * Leveraging ws://localhost provided by local IPFS node \n   https://github.com/ipfs/in-web-browsers/issues/177\n * Manifest file for IPFS gateway https://github.com/ipfs/go-ipfs/issues/6214\n\nThanks for inviting us to present!\n\n\n--------------------------------------------------------------------------------\n\nSubscribe to be notified of future events Fission is hosting or presenting at »\n[https://lu.ma/fission]","html":"<p>We presented Fission's approach to local first apps on IPFS with the Fission publishing platform and webnative SDK.</p><p>Our guiding principle for using IPFS is: Everything should work in the browser, including on mobile, with no extensions required.</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://s3.fission.codes/2021/03/Screen-Shot-2021-03-10-at-11.17.42-PM.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><p>The Special Interest Group (SIG) focused on IPFS and local offline collaboration has its <a href=\"https://github.com/ipfs/local-offline-collab/\">home base on Github</a>, which you can follow for updates and future meetings. </p><!--kg-card-begin: embed--><figure class=\"kg-card kg-embed-card\"><iframe width=\"200\" height=\"113\" src=\"https://www.youtube.com/embed/0zUg20816hU?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></figure><!--kg-card-end: embed--><p>The slides are <a href=\"https://ipfs.runfission.com/ipfs/bafybeigr4crq5fe5kwump3pp3a2z74udgsgwum2yxb6cfwfntzez7rs4hu/p/2021-03-10%20IPFS%20Local%20Offline%20Collab.pdf\">available on IPFS of course »</a></p><p>A great quote from Brooklyn:</p><blockquote>We're trying to make IPFS boring!</blockquote><p>Meaning: it should just work, and be reliable, and provide great capabilities to developers and app users alike.</p><p>The two key links from follow up are:</p><ul><li>Leveraging ws://localhost provided by local IPFS node <a href=\"https://github.com/ipfs/in-web-browsers/issues/177\">https://github.com/ipfs/in-web-browsers/issues/177</a></li><li>Manifest file for IPFS gateway <a href=\"https://github.com/ipfs/go-ipfs/issues/6214\">https://github.com/ipfs/go-ipfs/issues/6214</a></li></ul><p>Thanks for inviting us to present!</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p><a href=\"https://lu.ma/fission\"><strong>Subscribe to be notified of future events Fission is hosting or presenting at »</strong></a></p>","url":"https://blog.fission.codes/ipfs-local-offline-collaboration-sig/","canonical_url":null,"uuid":"bf9daf16-d543-4ac3-bb2c-89508654c2ce","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"6049c1d0c695c4001e8c7e86","reading_time":null}},{"node":{"id":"Ghost__Post__602d4afc31be96001e3bed96","title":"Announcing TiddlyWiki on Fission","slug":"announcing-tiddlywiki-on-fission","featured":true,"feature_image":"https://s3.fission.codes/2021/02/motovun_jack.jpg","excerpt":"Jeremy Ruston, creator of TiddlyWiki, is working with Fission to bring a TiddlyWiki app to the platform.","custom_excerpt":"Jeremy Ruston, creator of TiddlyWiki, is working with Fission to bring a TiddlyWiki app to the platform.","created_at_pretty":"17 February, 2021","published_at_pretty":"17 February, 2021","updated_at_pretty":"18 February, 2021","created_at":"2021-02-17T08:57:32.000-08:00","published_at":"2021-02-17T10:21:26.000-08:00","updated_at":"2021-02-17T23:40:09.000-08:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":"https://s3.fission.codes/2021/02/tiddlywiki-character-white-1900-1.png","twitter_title":null,"authors":[{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"},{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"}],"primary_author":{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"},"primary_tag":{"name":"TiddlyWiki","slug":"tiddlywiki","description":null,"feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"TiddlyWiki","slug":"tiddlywiki","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"Fission is working with Jeremy Ruston, creator of TiddlyWiki, to build a\nTiddlyWiki on Fission app and make the Webnative SDK available as a plugin to\nsave and load TW content across browsers.\n\nWe’ve been working out in the open in the TiddlyWiki group on the Fission forum\n[https://talk.fission.codes/c/apps/tiddlywiki/57]  for a couple of weeks, so now\nit’s time to welcome more people to join us.\n\nThe goal is to make it so that TiddlyWiki can easily run as an app on the\nFission publishing platform. Individual users will be able to sign up and launch\na new TiddlyWiki or upload their own. Then, they will have everything saved and\nportable automatically from any browser, including mobile, that's logged into\ntheir Fission account.\n\n\n\nTiddlyWiki on Fission Flag Cat\n[https://talk.fission.codes/t/introducing-flag-cat-tiddlywiki-on-fission-mascot/1578]\n. Stay tuned for more images and stickers!Fission’s webnative javascript\nlibraries and app publishing platform are open source and built on open\nstandards. We’re designing the system to be portable and easy-to-personalize for\nanyone--not just professional developers--so that they can launch a business\naround apps, themes, or other creative software experiments.\n\nWe want to work with TiddlyWiki creators who are making custom Editions\n[https://tiddlywiki.com/static/Editions.html]. The TiddlyWiki launcher that\nwe’re working on with Jeremy can include any community Editions that people want\nto include, and we’ll be opening up the Github repo shortly for that.\n\nAnd if you’re a creator that wants to build a business around a TiddlyWiki\nEdition on Fission, with your own supported app that 100s or 1000s of users can\nlaunch with a click and have their own custom domain, we’d love to talk. Our\nupcoming App Cloning feature is designed for this, and we’ll showcase this\nability in the community-supported TiddlyWiki on Fission app so that you can see\nhow it works.\n\nWe’re totally inspired by the TiddlyWiki community, and want to see what else we\ncan build together. We're on the TiddlyWiki Google Group\n[https://groups.google.com/g/tiddlywiki], and please come by and chat with us in\nthe forum [https://talk.fission.codes/c/apps/tiddlywiki/57]  or Fission's\nDiscord chat [https://fission.codes/discord]  if you have questions. If you're a\ndeveloper, you can follow Fission's guide [https://guide.fission.codes]  to set\nup your developer account and get started.\n\nPlease join us at tomorrow’s Fission February 2021 Demo Day\n[https://talk.fission.codes/t/fission-demo-day-february-2021/1442]  if you’d\nlike to find out more and talk live with Jeremy and the Fission team.\n\nRegister for Fission Feb 18th Demo Day [https://lu.ma/event/evt-nHhXeNbXYwW4DW1]\nYou can also register to attend directly on Luma [https://lu.ma/vhtwkxva].","html":"<p>Fission is working with Jeremy Ruston, creator of TiddlyWiki, to build a TiddlyWiki on Fission app and make the Webnative SDK available as a plugin to save and load TW content across browsers.</p><p>We’ve been working out in the open in the <a href=\"https://talk.fission.codes/c/apps/tiddlywiki/57\">TiddlyWiki group on the Fission forum</a> for a couple of weeks, so now it’s time to welcome more people to join us.</p><p>The goal is to make it so that TiddlyWiki can easily run as an app on the Fission publishing platform. Individual users will be able to sign up and launch a new TiddlyWiki or upload their own. Then, they will have everything saved and portable automatically from any browser, including mobile, that's logged into their Fission account.</p><p></p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://s3.fission.codes/2021/02/tiddlywiki-character-white-1024-square-crop.png\" class=\"kg-image\"><figcaption><a href=\"https://talk.fission.codes/t/introducing-flag-cat-tiddlywiki-on-fission-mascot/1578\">TiddlyWiki on Fission Flag Cat</a>. Stay tuned for more images and stickers!</figcaption></figure><!--kg-card-end: image--><p>Fission’s webnative javascript libraries and app publishing platform are open source and built on open standards. We’re designing the system to be portable and easy-to-personalize for anyone--not just professional developers--so that they can launch a business around apps, themes, or other creative software experiments.</p><p>We want to work with TiddlyWiki creators who are making custom <a href=\"https://tiddlywiki.com/static/Editions.html\">Editions</a>. The TiddlyWiki launcher that we’re working on with Jeremy can include any community Editions that people want to include, and we’ll be opening up the Github repo shortly for that.</p><p>And if you’re a creator that wants to build a business around a TiddlyWiki Edition on Fission, with your own supported app that 100s or 1000s of users can launch with a click and have their own custom domain, we’d love to talk. Our upcoming App Cloning feature is designed for this, and we’ll showcase this ability in the community-supported TiddlyWiki on Fission app so that you can see how it works.</p><p>We’re totally inspired by the TiddlyWiki community, and want to see what else we can build together. We're on the <a href=\"https://groups.google.com/g/tiddlywiki\">TiddlyWiki Google Group</a>, and please come by and chat with us in the <a href=\"https://talk.fission.codes/c/apps/tiddlywiki/57\">forum</a> or <a href=\"https://fission.codes/discord\">Fission's Discord chat</a> if you have questions. If you're a developer, you can follow <a href=\"https://guide.fission.codes\">Fission's guide</a> to set up your developer account and get started.</p><p>Please join us at tomorrow’s <a href=\"https://talk.fission.codes/t/fission-demo-day-february-2021/1442\">Fission February 2021 Demo Day</a> if you’d like to find out more and talk live with Jeremy and the Fission team.</p><!--kg-card-begin: html--><a href=\"https://lu.ma/event/evt-nHhXeNbXYwW4DW1\" class=\"luma-checkout--button\" data-luma-action=\"checkout\" data-luma-event-id=\"evt-nHhXeNbXYwW4DW1\" style=\"color: white; font-size: 1em !important; padding: 10px 25px !important; margin-bottom: 45px !important;\">\n  Register for Fission Feb 18th Demo Day\n</a>\n\n<script id=\"luma-checkout\" src=\"https://embed.lu.ma/checkout-button.js\"></script><!--kg-card-end: html--><p>You can also <a href=\"https://lu.ma/vhtwkxva\">register to attend directly on Luma</a>.</p>","url":"https://blog.fission.codes/announcing-tiddlywiki-on-fission/","canonical_url":null,"uuid":"55f0f51c-2edf-4fa3-848e-cc06504f3651","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"602d4afc31be96001e3bed96","reading_time":null}},{"node":{"id":"Ghost__Post__602afb91b749da001eeb5b7b","title":"Inside Fission’s Account Recovery Design","slug":"fission-account-recovery-design","featured":false,"feature_image":"https://s3.fission.codes/2021/02/franck-DoWZMPZ-M9s-unsplash-1.jpg","excerpt":"At first glance, account recovery might seem like a simple topic. But, Fission’s commitment to prioritizing user control makes things a little more complicated","custom_excerpt":"At first glance, account recovery might seem like a simple topic. But, Fission’s commitment to prioritizing user control makes things a little more complicated","created_at_pretty":"15 February, 2021","published_at_pretty":"16 February, 2021","updated_at_pretty":"16 February, 2021","created_at":"2021-02-15T14:54:09.000-08:00","published_at":"2021-02-16T08:41:23.000-08:00","updated_at":"2021-02-16T08:41:23.000-08:00","meta_title":"Passwordless Account Recovery | Fission Data Security","meta_description":"Learn how we make Fission's account recovery process easy and password-free while protecting your private data and user control","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"},{"name":"Courtney Hall","slug":"courtney","bio":"I'm a content writer and marketer in Charlotte, NC.","profile_image":"https://s3.fission.codes/2021/02/me.jpg","twitter":"@contentcourtney","facebook":null,"website":null},{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"}],"primary_author":{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"},"primary_tag":{"name":"Security","slug":"security","description":null,"feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"Security","slug":"security","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Privacy","slug":"privacy","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Roadmap","slug":"roadmap","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"passwordless","slug":"passwordless","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"DID","slug":"did","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Account Recovery","slug":"account-recovery","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"At first glance, account recovery might seem like a simple topic: just write a\nreset password function, send a challenge code, and you're done!\n\nBut, Fission’s commitment to prioritizing user control makes things a little\nmore complicated. When the user is in control, how do we help them get back into\ntheir data if they get locked out? The main relevant factors are:\n\n 1. We’ve designed our account system around portable account identifiers,\n    called Decentralized IDs (DIDs)\n 2. Your account holds encryption keys that keep your private content encrypted\n    and private only to you — even the Fission platform doesn’t have access and\n    can’t see your content.\n 3. We wanted an account recovery system that was as trust-minimized as\n    possible. Meaning, you don’t have to trust us, and you would require as few\n    third-party systems as possible to help you out if you lose account access.\n\n> Oh, and one more thing: we wanted to do all of this without passwords.\nAt Fission, being password-free is the default. Instead, we use technology built\ninto modern browsers — including mobile browsers — that generates and keeps a\nprivate encryption key safely stored. This is called the Web Crypto API.\n\nBy the way, if you haven’t tried this yet, head over to the default Fission\nDrive app [https://drive.fission.codes]  and create a new Fission account.\nNotice that it asks you for a unique username and an email address, but it\ndoesn’t ask you for a password.\n\nTo use your account on other devices — like your desktop browser, tablet, or\nphone — you get access by creating a key on your new device and linking it to\nanother device that already has permission.\n\nNow, the private keys built into the browsers on all your devices have\npermission to access your account and all of your encrypted, personal data — all\nwithout setting up or having to remember a password.\n\nApple is known for providing users with end-to-end encryption that keeps\neveryone, including Apple, out of any personal information. Fission is taking\nthe same approach.\n\nWhat about lost devices?\nBut what happens if you lose all your devices? Can you still get access to the\nencrypted content stored and synced online by your Fission account? Right now,\nthe answer is no! We don’t have a copy of your key — and the Web Crypto API\nbuilt into browsers is designed in such a way that we can’t get a copy for\nsecurity reasons. If you lose access to all your devices, how can you recover\nyour encrypted content? This is where Account Recovery comes in.\n\nOne of the design goals we have with Fission is to support a broad number of\ndefault use cases — we think this stuff should just work for everyone. We do\nrely on the most cutting edge browser standards, but we choose these standards\nbased on the real world support available in all major browsers, including\nmobile browsers.\n\nUsing a single-device as a base case\nLet’s consider the base case scenario of a person having just one mobile\ncomputing device — owning and using a single phone — meaning that losing that\none mobile device means you’ve lost everything.\n\nThis is the common base case we need to keep in mind.\n\nIt’s crucial to remember that the typical software developer or early adopter is\nmuch easier to support: at least one mobile device and one desktop/laptop\ndevice. The private key stored on a desktop is much more likely to stick around\nfor a really long time.\n\nIn fact, in some of our user research interviews, developers told us that the \nprivate key they used to securely connect to GitHub\n[https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh] \n was often on their machine for 5 years. Basically, the entire lifetime of\nowning the machine before they got a new computer and set up a new key!\n\nBut since that isn’t the deal for our single mobile device base case, we have to\nplan for account recovery process with just a single device to make the system\naccessible and recoverable by the largest number of users.\n\nSplitting up keys\nOur basic principle involves making backup keys and splitting them into pieces.\nWe then store some of those pieces on the Fission platform linked to the user\naccount.\n\nThe other half is stored “offline” by the user, as recovery codes.\n\nWhen the offline recovery codes are combined with the pieces on Fission, it\ncreates the complete key that can access the person’s account.\n\nBecause of our commitment to privacy, Fission never has access to the whole key.\n\n> If someone breaks into Fission's database, there are no passwords and no secret\nkeys to leak.\nWhere should I store recovery codes?\nOn Apple iOS devices, basic iCloud file storage is built into the operating\nsystem — just like Fission accounts have the Web Native File System included.\nWe’ll recommend that users download the recovery codes and store them in their\nSafari iCloud downloads folder — or somewhere else on their iCloud files.\n\nOn Android, the defaults are a lot more varied. Many Android phones have Google\nservices built in by default, so we’ll recommend this as a similar approach to\nusing iCloud in our iOS example.\n\nAdvanced users can store this file anywhere they feel comfortable - be it in\nApple Notes with a password, printed out on paper, stored in their 1Password\naccount, or even sent as a “Note to Self” in their Signal messenger app.\n\nSignal's Note to Self feature\n[https://support.signal.org/hc/en-us/articles/360043272451-Note-to-Self]And in\nthe future, based on the feedback, we may allow advanced security-conscious\nusers to forgo the use of recovery codes entirely, allowing them to self-manage\nbackup keys.\n\nGet involved\nYou can check out the in-progress diagrams and notes of our Account Recovery\ndesign process [https://talk.fission.codes/t/account-recovery/1432]  in the\nforum.\n\nWe’re not done with our design. We are still working at the level of security,\nsystems, and cryptographic principles, as well as streamlining the user\nexperience and the flows for users.\n\nThe code is being developed out in the open in the Dashboard code repository\n[https://github.com/fission-suite/dashboard]. We welcome questions, suggestions,\nand contributions – drop by our Discord chat [https://fission.codes/discord].","html":"<p>At first glance, account recovery might seem like a simple topic: just write a reset password function, send a challenge code, and you're done!</p><p>But, Fission’s commitment to prioritizing user control makes things a little more complicated. When the user is in control, how do we help them get back into their data if they get locked out? The main relevant factors are:</p><ol><li>We’ve designed our account system around portable account identifiers, called Decentralized IDs (DIDs)</li><li>Your account holds encryption keys that keep your private content encrypted and private only to you — even the Fission platform doesn’t have access and can’t see your content.</li><li>We wanted an account recovery system that was as trust-minimized as possible. Meaning, you don’t have to trust us, and you would require as few third-party systems as possible to help you out if you lose account access.</li></ol><blockquote><strong>Oh, and one more thing: we wanted to do all of this without passwords.</strong></blockquote><p>At Fission, being password-free is the default. Instead, we use technology built into modern browsers — including mobile browsers — that generates and keeps a private encryption key safely stored. This is called the Web Crypto API.</p><p>By the way, if you haven’t tried this yet, head over to the default <a href=\"https://drive.fission.codes\">Fission Drive app</a> and create a new Fission account. Notice that it asks you for a unique username and an email address, but it doesn’t ask you for a password.</p><p>To use your account on other devices — like your desktop browser, tablet, or phone — you get access by creating a key on your new device and linking it to another device that already has permission.</p><p>Now, the private keys built into the browsers on all your devices have permission to access your account and all of your encrypted, personal data — all without setting up or having to remember a password.</p><p>Apple is known for providing users with end-to-end encryption that keeps everyone, including Apple, out of any personal information. Fission is taking the same approach.</p><h2 id=\"what-about-lost-devices\"><strong>What about lost devices?</strong></h2><p>But what happens if you lose all your devices? Can you still get access to the encrypted content stored and synced online by your Fission account? Right now, the answer is no! We don’t have a copy of your key — and the Web Crypto API built into browsers is designed in such a way that we can’t get a copy for security reasons. If you lose access to all your devices, how can you recover your encrypted content? This is where Account Recovery comes in.</p><p>One of the design goals we have with Fission is to support a broad number of default use cases — we think this stuff should just work for everyone. We do rely on the most cutting edge browser standards, but we choose these standards based on the real world support available in all major browsers, including mobile browsers.</p><h2 id=\"using-a-single-device-as-a-base-case\"><strong>Using a single-device as a base case</strong></h2><p>Let’s consider the base case scenario of a person having just one mobile computing device — owning and using a single phone — meaning that losing that one mobile device means you’ve lost everything.</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://s3.fission.codes/2021/02/markus-winkler-ZM0mca86fQM-unsplash-square-crop.jpg\" class=\"kg-image\"></figure><!--kg-card-end: image--><p>This is the common base case we need to keep in mind.</p><p>It’s crucial to remember that the typical software developer or early adopter is much easier to support: at least one mobile device and one desktop/laptop device. The private key stored on a desktop is much more likely to stick around for a really long time.</p><p>In fact, in some of our user research interviews, developers told us that the <a href=\"https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh\">private key they used to securely connect to GitHub</a> was often on their machine for 5 years. Basically, the entire lifetime of owning the machine before they got a new computer and set up a new key!</p><p>But since that isn’t the deal for our single mobile device base case, we have to plan for account recovery process with just a single device to make the system accessible and recoverable by the largest number of users.</p><h2 id=\"splitting-up-keys\"><strong>Splitting up keys</strong></h2><p>Our basic principle involves making backup keys and splitting them into pieces. We then store some of those pieces on the Fission platform linked to the user account.</p><p>The other half is stored “offline” by the user, as recovery codes.</p><p>When the offline recovery codes are combined with the pieces on Fission, it creates the complete key that can access the person’s account.</p><p>Because of our commitment to privacy, Fission never has access to the whole key.</p><blockquote><strong>If someone breaks into Fission's database, there are no passwords and no secret keys to leak.</strong></blockquote><h2 id=\"where-should-i-store-recovery-codes\"><strong>Where should I store recovery codes?</strong></h2><p>On Apple iOS devices, basic iCloud file storage is built into the operating system — just like Fission accounts have the Web Native File System included. We’ll recommend that users download the recovery codes and store them in their Safari iCloud downloads folder — or somewhere else on their iCloud files.</p><p>On Android, the defaults are a lot more varied. Many Android phones have Google services built in by default, so we’ll recommend this as a similar approach to using iCloud in our iOS example.</p><p>Advanced users can store this file anywhere they feel comfortable - be it in Apple Notes with a password, printed out on paper, stored in their 1Password account, or even sent as a “Note to Self” in their Signal messenger app.</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://s3.fission.codes/2021/02/signal_note_to_self.jpg\" class=\"kg-image\"><figcaption>Signal's <a href=\"https://support.signal.org/hc/en-us/articles/360043272451-Note-to-Self\">Note to Self feature</a></figcaption></figure><!--kg-card-end: image--><p>And in the future, based on the feedback, we may allow advanced security-conscious users to forgo the use of recovery codes entirely, allowing them to self-manage backup keys.</p><h2 id=\"get-involved\"><strong>Get involved</strong></h2><p>You can check out the in-progress diagrams and notes of our <a href=\"https://talk.fission.codes/t/account-recovery/1432\">Account Recovery design process</a> in the forum.</p><p>We’re not done with our design. We are still working at the level of security, systems, and cryptographic principles, as well as streamlining the user experience and the flows for users.</p><p>The code is being developed out in the open in the <a href=\"https://github.com/fission-suite/dashboard\">Dashboard code repository</a>. We welcome questions, suggestions, and contributions – drop by our <a href=\"https://fission.codes/discord\">Discord chat</a>.<br></p>","url":"https://blog.fission.codes/fission-account-recovery-design/","canonical_url":null,"uuid":"f777ba3e-c8f5-48fa-b85b-3f7e875b9159","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"602afb91b749da001eeb5b7b","reading_time":null}},{"node":{"id":"Ghost__Post__6026e82a522a8e001e882099","title":"Startup Vancouver Interviews Boris Mann about Fission","slug":"startup-vancouver-interviews-boris-mann","featured":false,"feature_image":"https://s3.fission.codes/2021/02/startupvancouver-ep044.jpeg","excerpt":"CEO & Co-founder of Fission, Boris Mann, is interviewed by Reza Varzidehkar as part of the Startup Vancouver Episode 44. Boris covers some of the vision and mission behind what Fission is building.","custom_excerpt":"CEO & Co-founder of Fission, Boris Mann, is interviewed by Reza Varzidehkar as part of the Startup Vancouver Episode 44. Boris covers some of the vision and mission behind what Fission is building.","created_at_pretty":"12 February, 2021","published_at_pretty":"12 February, 2021","updated_at_pretty":"14 February, 2021","created_at":"2021-02-12T12:42:18.000-08:00","published_at":"2021-02-12T14:26:04.000-08:00","updated_at":"2021-02-14T01:13:53.000-08:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"},{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"}],"primary_author":{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"},"primary_tag":{"name":"Presentations","slug":"presentation","description":null,"feature_image":"https://images.unsplash.com/photo-1535016120720-40c646be5580?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","meta_description":null,"meta_title":null},"tags":[{"name":"Presentations","slug":"presentation","description":null,"feature_image":"https://images.unsplash.com/photo-1535016120720-40c646be5580?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","meta_description":null,"meta_title":null},{"name":"Interview","slug":"interview","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"videos","slug":"videos","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Startup Vancouver","slug":"startup-vancouver","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"I was invited to join Episode 44 of Startup Vancouver's #WhatKeepsYouUpAtNight\n[https://www.eventbrite.ca/e/the-what-keeps-you-up-at-night-show-episode-044-tickets-140442079039] \n show. I was interviewed by Reza Varzidehkar. The Q&A format was a really great\nchance to talk about some of the vision and \"why\" behind what we're doing, as\nwell as explain some of the technical building blocks of how Fission works.\n\nHere's the 17 minute clip of my interview:\n\nDirect link to video vimeo.com/511387825 [https://vimeo.com/511387825]The\nco-hosts of the show are Maryam Mobini\n[https://www.linkedin.com/in/maryammobini/], Colin Weston\n[https://www.linkedin.com/in/colin-weston-48bab63/]  and Reza Vee\n[https://www.linkedin.com/in/rezavee/]. Thanks Reza for interviewing me, and\nColin for inviting me!\n\nOther guests included  Melanie Ewan [https://www.linkedin.com/in/melanieewan/] \nof Volition Advisors [http://volitionadvisors.com/], and James Basnett\n[https://www.linkedin.com/in/james-basnett/]  of Shape\n[https://shapeimmersive.com/3d-ar/].\n\nThe full episode is available on YouTube\n[https://www.youtube.com/watch?v=PUMsDXyrueg]. The events are free to attend,\nbut donations are accepted on behalf of jack.org [https://jack.org/], \"Canada's\nonly charity that trains and empowers young leaders to revolutionize mental\nhealth in every province and territory\".","html":"<p>I was invited to join <a href=\"https://www.eventbrite.ca/e/the-what-keeps-you-up-at-night-show-episode-044-tickets-140442079039\">Episode 44 of Startup Vancouver's #WhatKeepsYouUpAtNight</a> show. I was interviewed by Reza Varzidehkar. The Q&amp;A format was a really great chance to talk about some of the vision and \"why\" behind what we're doing, as well as explain some of the technical building blocks of how Fission works.</p><p>Here's the 17 minute clip of my interview:</p><!--kg-card-begin: embed--><figure class=\"kg-card kg-embed-card kg-card-hascaption\"><iframe src=\"https://player.vimeo.com/video/511387825?app_id=122963\" width=\"640\" height=\"336\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen title=\"Startup Vancouver Episode 044: Reza Varzidehkar interviews Boris Mann\"></iframe><figcaption><a href=\"https://vimeo.com/511387825\">Direct link to video vimeo.com/511387825</a></figcaption></figure><!--kg-card-end: embed--><p>The co-hosts of the show are <a href=\"https://www.linkedin.com/in/maryammobini/\" rel=\"nofollow noopener noreferrer\">Maryam Mobini</a>, <a href=\"https://www.linkedin.com/in/colin-weston-48bab63/\" rel=\"nofollow noopener noreferrer\">Colin Weston</a> and <a href=\"https://www.linkedin.com/in/rezavee/\" rel=\"nofollow noopener noreferrer\">Reza Vee</a>. Thanks Reza for interviewing me, and Colin for inviting me!</p><p>Other guests included<a href=\"https://www.linkedin.com/in/melanieewan/\"> Melanie Ewan</a> of <a href=\"http://volitionadvisors.com/\">Volition Advisors</a>, and <a href=\"https://www.linkedin.com/in/james-basnett/\">James Basnett</a> of <a href=\"https://shapeimmersive.com/3d-ar/\">Shape</a>.</p><p>The full episode is <a href=\"https://www.youtube.com/watch?v=PUMsDXyrueg\">available on YouTube</a>. The events are free to attend, but donations are accepted on behalf of <a href=\"https://jack.org/\">jack.org</a>, \"Canada's only charity that trains and empowers young leaders to revolutionize mental health in every province and territory\".</p>","url":"https://blog.fission.codes/startup-vancouver-interviews-boris-mann/","canonical_url":null,"uuid":"21421a8a-824e-4647-b32d-81265a123814","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"6026e82a522a8e001e882099","reading_time":null}},{"node":{"id":"Ghost__Post__5fc559f78d0988001eef486f","title":"Developer Communities on Discord: Share your announce channels!","slug":"developer-communities-on-discord-share-your-announce-channels","featured":true,"feature_image":"https://images.unsplash.com/photo-1545112719-ce81d7de0b71?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","excerpt":"New Discord announce channels: creating an awesome list for great developer community content on Discord.","custom_excerpt":"New Discord announce channels: creating an awesome list for great developer community content on Discord.","created_at_pretty":"30 November, 2020","published_at_pretty":"30 November, 2020","updated_at_pretty":"30 November, 2020","created_at":"2020-11-30T12:45:43.000-08:00","published_at":"2020-11-30T13:49:26.000-08:00","updated_at":"2020-11-30T13:50:58.000-08:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"},{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"}],"primary_author":{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"},"primary_tag":{"name":"Community","slug":"community","description":null,"feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"Community","slug":"community","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Discord","slug":"discord","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"Discord is increasingly being used by a number of developer communities. New\ncommunity server and announce channels are an opportunity for us to share\ninteresting developer content.\n\nFission has already upgraded to being a Community Server\n[https://support.discord.com/hc/en-us/articles/360047132851-Enabling-Your-Community-Server]\n. This means we get a Welcome screen\n[https://support.discord.com/hc/en-us/articles/360043913591]  with recommended\nchannels, along with a few other features. \n\nHere's Fission's Welcome screen:\n\nScreenshot from the edit mode of Fission's Discord Welcome ScreenYou can check\nout the Fission emoji filled server here » [https://fission.codes/discord]\n\n> By the way, on the general topic of tools for developer communities, the Orbit\nteam wrote about Slack vs Discord vs Discourse\n[https://talk.fission.codes/t/slack-vs-discord-vs-discourse-the-best-tool-for-your-community-orbit-blog-may-2020/654] \n back in May. Fission uses Discord (obviously), but specifically we also use it\nfor our private internal company discussions. And we have a Discourse forum\n[https://talk.fission.codes]  that we use the same way, for both public\ncommunity and internal communications.\nAnnouncement Channels\nBut the new thing for inter-connecting people are Announcement Channels\n[https://support.discord.com/hc/en-us/articles/360032008192]: you can post\nupdates in your server to a special channel, which other people can \"follow\" so\nthat the content automatically posts into their server channels.\n\nHere's what the Fission announcements channel looks like, with a \"follow\" button\nat the top:\n\nHere's the link to our #fission-announce [https://discord.gg/JNg3McC6Ew] \nchannelWe've been posting about once per week, around new content, new releases,\nand upcoming events.\n\nOn the \"follower\" side, you can have the posts by published into a channel of\nyour choosing. This could be a single \"subscriptions\" channel, or a dedicated\n#fission-is-cool channel, and it can be public or members only. You can also\nread the background on how to follow channels\n[https://support.discord.com/hc/en-us/articles/360028384531-Channel-Following-FAQ] \n (you'll need to be an admin on a server for this).\n\nShare your announce channels: awesome-discord-announce\nWe've created the beginnings of an awesome-list on Github, \nawesome-discord-announce\n[https://github.com/fission-suite/awesome-discord-announce].\n\nIf you have a Discord server with an announce channel that covers technical\ntopics – add it to the list!\n\nAnd, as a thank you to Sindre Sorhus, creator of the original Awesome list\n[https://github.com/sindresorhus/awesome/], Fission has signed up to support\nhim\non Patreon [https://patreon.com/sindresorhus]. Support all the digital makers\nand open source contributors!","html":"<p>Discord is increasingly being used by a number of developer communities. New community server and announce channels are an opportunity for us to share interesting developer content.</p><p>Fission has already upgraded to being a <a href=\"https://support.discord.com/hc/en-us/articles/360047132851-Enabling-Your-Community-Server\">Community Server</a>. This means we get a <a href=\"https://support.discord.com/hc/en-us/articles/360043913591\">Welcome screen</a> with recommended channels, along with a few other features. </p><p>Here's Fission's Welcome screen:</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://s3.fission.codes/2020/11/Screen-Shot-2020-11-30-at-1.06.15-PM.png\" class=\"kg-image\"><figcaption>Screenshot from the edit mode of Fission's Discord Welcome Screen</figcaption></figure><!--kg-card-end: image--><p>You can check out the <a href=\"https://fission.codes/discord\">Fission emoji filled server here »</a></p><blockquote>By the way, on the general topic of tools for developer communities, the <a href=\"https://talk.fission.codes/t/slack-vs-discord-vs-discourse-the-best-tool-for-your-community-orbit-blog-may-2020/654\">Orbit team wrote about Slack vs Discord vs Discourse</a> back in May. Fission uses Discord (obviously), but specifically we also use it for our private internal company discussions. And we have a <a href=\"https://talk.fission.codes\">Discourse forum</a> that we use the same way, for both public community and internal communications.</blockquote><h2 id=\"announcement-channels\">Announcement Channels</h2><p>But the new thing for inter-connecting people are <a href=\"https://support.discord.com/hc/en-us/articles/360032008192\">Announcement Channels</a>: you can post updates in your server to a special channel, which other people can \"follow\" so that the content automatically posts into their server channels.</p><p>Here's what the Fission announcements channel looks like, with a \"follow\" button at the top:</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://s3.fission.codes/2020/11/Screen-Shot-2020-11-30-at-1.09.27-PM.png\" class=\"kg-image\"><figcaption>Here's the link to our <a href=\"https://discord.gg/JNg3McC6Ew\">#fission-announce</a> channel</figcaption></figure><!--kg-card-end: image--><p>We've been posting about once per week, around new content, new releases, and upcoming events.</p><p>On the \"follower\" side, you can have the posts by published into a channel of your choosing. This could be a single \"subscriptions\" channel, or a dedicated #fission-is-cool channel, and it can be public or members only. You can also read the background on <a href=\"https://support.discord.com/hc/en-us/articles/360028384531-Channel-Following-FAQ\">how to follow channels</a> (you'll need to be an admin on a server for this).</p><h2 id=\"share-your-announce-channels-awesome-discord-announce\">Share your announce channels: awesome-discord-announce</h2><p>We've created the beginnings of an awesome-list on Github, <a href=\"https://github.com/fission-suite/awesome-discord-announce\">awesome-discord-announce</a>.</p><p>If you have a Discord server with an announce channel that covers technical topics – add it to the list!</p><p>And, as a thank you to <strong>Sindre Sorhus</strong>, creator of the <a href=\"https://github.com/sindresorhus/awesome/\">original Awesome list</a>, Fission has signed up to <a href=\"https://patreon.com/sindresorhus\">support him on Patreon</a>. Support all the digital makers and open source contributors!</p>","url":"https://blog.fission.codes/developer-communities-on-discord-share-your-announce-channels/","canonical_url":null,"uuid":"78c1b28e-3c3c-494b-a62e-97ec880d2245","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5fc559f78d0988001eef486f","reading_time":null}},{"node":{"id":"Ghost__Post__5f7c83a7af9100001e524349","title":"Introduction to Web Native Apps","slug":"intro-web-native-apps","featured":true,"feature_image":"https://images.unsplash.com/photo-1483058712412-4245e9b90334?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","excerpt":"An initial intro to Fission's web native apps. Browser as operating system, with the addition of identity and files, like an open source iCloud.","custom_excerpt":"An initial intro to Fission's web native apps. Browser as operating system, with the addition of identity and files, like an open source iCloud.","created_at_pretty":"06 October, 2020","published_at_pretty":"07 October, 2020","updated_at_pretty":"07 October, 2020","created_at":"2020-10-06T07:48:07.000-07:00","published_at":"2020-10-06T17:52:18.000-07:00","updated_at":"2020-10-06T17:52:18.000-07:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"},{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"}],"primary_author":{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"},"primary_tag":{"name":"web native","slug":"web-native","description":null,"feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"web native","slug":"web-native","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"Fission builds on top of the web browser as an operating system, and enables web\nnative apps  with additional features that run locally: user controlled files\nand identity.\n\nTom MacWright's article, A clean start for the web\n[https://macwright.com/2020/08/22/clean-starts-for-the-web.html], introduced a\nuseful distinction: the \"document web\" vs. the \"application web\":\n\n> Then there’s the “application web”. This started as server applications, built\nwith things like Django and Ruby on Rails and before them a variety of\ntechnologies that will live forever in corporations, like Java Servlets.\n\nBackbone.js demonstrated that a lot of these applications could be moved into\nthe browser, and then React and its many SPA-style competitors established a new\norder for the web – highly-interactive, quite complex, client-side applications.\nWe don't necessarily agree with a lot of the changes that MacWright wishes for,\nbut we do think that the documentic-centric web  and the app-centric web  is a\nuseful way to think about the difference between websites that we access through\nour browsers.\n\nLike an operating system, your desktop or mobile browser now provides common\nservices for the many web sites – and increasingly web apps  – that you access\nevery day.\n\nWeb Native Apps\nAt Fission, we're both building on top of features that the browser provides,\nand adding additional features that can be used by Fission-powered apps. \n\nWe call these apps \"web native\" apps:\n\n * Works in all browsers, including mobile\n * Doesn't need browser plug-ins\n * Makes use of advanced web APIs in the browser, including on mobile\n * Has user owned data and storage\n * Gives users control over app permissions\n * Can function local-first, and in many cases, offline\n\nWeb native apps are designed to run on the web, taking advantage of all the\ncapabilities your browser has to offer, as well as native, local capabilities\nlike identity, storage, and computation.\n\nWe're also very inspired by Ink & Switch's research findings on local-first\nsoftware [https://www.inkandswitch.com/local-first.html], and continue to build\non and implement the concepts they outline.\n\nAsking Permission\nOne of the things that smartphone apps do is ask permission: can I use your\ncamera? Can I access your files? Can I see your photos? For security reasons,\nthese same sort of permissions are making their way into modern desktop\noperating systems as well.\n\nWith a regular web app, we don't get any of that. Or, even worse, we're clicking\nthrough an agreement for trackers and cookies to be used!\n\nAs a user, signing up for a hosted web app means agreeing to some terms of\nservice. You're using an app that is running on someone else's server, where\nyour data is stored. At best, you've got an export function, and hopefully a\nlowest common denominator format that you can import somewhere else. \n\nWant to work with a batch of your images? First step, upload them all to a\nserver. And hope that you can get export them later. Or that the developer has\nbacked up those files in case something goes wrong. And, that the developer\nhasn't made any mistakes around security and privacy.\n\nOn our smartphones, we feel more in control. Apps ask us for permission. We can\nattach three or four different apps to our photo library, and switch between\nthem, all the while having all of our photos available to us.\n\nThat's how we've built Fission's web native apps. Each app asks for permission,\ngets its own space to write files to. Everything is encrypted, and neither\nFission nor the app developer can see your files without permission.\n\nI'll quote MacWright again:\n\n> There was a time when we could install applications, give some sort of explicit\nagreement that something would run on our computers and use our hardware. \nUsing a web native app is more like installing an app. It uses your local\nidentity, your files, and in many cases can even run offline.\n\nIt is using your browser as an operating system.\n\nWeb Native Apps with Fission\nFission is building an app hosting marketplace for developers and users that\nsupports web native apps.\n\nFor developers, they can design a user app using only front end and design\nskills. The web native app can be installed by 10 or 10,000 users, just like\nmobile or desktop software. Because the app is running on the user's computer,\nyou can focus on finding new users and adding new features, rather than having\nto learn DevOps or server scaling. It's the fastest way to start sharing – and\nsoon, selling – your app on the web.\n\nUsers create a secure identity in their browsers. Every Fission account is\nlinked to a file system, available in any browser. Much like an open source\niCloud, users give permissions to apps, and can access their files from\nanywhere. Users can browse their file system, both public and private, and mix\nand match which apps they use, just like they're used to with mobile and desktop\napps.\n\n\n--------------------------------------------------------------------------------\n\nOur code is open source [https://github.com/fission-suite]. We're building on\ntop of commons infrastructure, and we're aiming to be a federated constellation\nprovider\n[https://blog.fission.codes/constellation-providers-at-decentralized-storage-summit/] \n rather than a cloud provider.\n\nOur 1.0 release is coming soon, sign up on the home page to get notified\n[https://fission.codes], or jump into our Discord chat\n[https://fission.codes/discord]  to get involved and ask questions.","html":"<p>Fission builds on top of the web browser as an operating system, and enables <strong>web native apps</strong> with additional features that run locally: user controlled files and identity.</p><p>Tom MacWright's article, <a href=\"https://macwright.com/2020/08/22/clean-starts-for-the-web.html\">A clean start for the web</a>, introduced a useful distinction: the \"document web\" vs. the \"application web\":</p><blockquote>Then there’s the “application web”. This started as server applications, built with things like Django and Ruby on Rails and before them a variety of technologies that will live forever in corporations, like Java Servlets.<br><br>Backbone.js demonstrated that a lot of these applications could be moved into the browser, and then React and its many SPA-style competitors established a new order for the web – highly-interactive, quite complex, client-side applications.</blockquote><p>We don't necessarily agree with a lot of the changes that MacWright wishes for, but we do think that the <strong>documentic-centric web</strong> and the <strong>app-centric web</strong> is a useful way to think about the difference between websites that we access through our browsers.</p><p>Like an operating system, your desktop or mobile browser now provides common services for the many web sites – and increasingly web <em>apps</em> – that you access every day.</p><h2 id=\"web-native-apps\">Web Native Apps</h2><p>At Fission, we're both building on top of features that the browser provides, and adding additional features that can be used by Fission-powered apps. </p><p>We call these apps \"web native\" apps:</p><ul><li>Works in all browsers, including mobile</li><li>Doesn't need browser plug-ins</li><li>Makes use of advanced web APIs in the browser, including on mobile</li><li>Has user owned data and storage</li><li>Gives users control over app permissions</li><li>Can function local-first, and in many cases, offline</li></ul><p>Web native apps are designed to run on the web, taking advantage of all the capabilities your browser has to offer, as well as native, local capabilities like identity, storage, and computation.</p><p>We're also very inspired by <a href=\"https://www.inkandswitch.com/local-first.html\">Ink &amp; Switch's research findings on local-first software</a>, and continue to build on and implement the concepts they outline.</p><h2 id=\"asking-permission\">Asking Permission</h2><p>One of the things that smartphone apps do is ask permission: can I use your camera? Can I access your files? Can I see your photos? For security reasons, these same sort of permissions are making their way into modern desktop operating systems as well.</p><p>With a regular web app, we don't get any of that. Or, even worse, we're clicking through an agreement for trackers and cookies to be used!</p><p>As a user, signing up for a hosted web app means agreeing to some terms of service. You're using an app that is running on someone else's server, where your data is stored. At best, you've got an export function, and hopefully a lowest common denominator format that you can import somewhere else. </p><p>Want to work with a batch of your images? First step, upload them all to a server. And hope that you can get export them later. Or that the developer has backed up those files in case something goes wrong. And, that the developer hasn't made any mistakes around security and privacy.</p><p>On our smartphones, we feel more in control. Apps ask us for permission. We can attach three or four different apps to our photo library, and switch between them, all the while having all of our photos available to us.</p><p>That's how we've built Fission's web native apps. Each app asks for permission, gets its own space to write files to. Everything is encrypted, and neither Fission nor the app developer can see your files without permission.</p><p>I'll quote MacWright again:</p><blockquote>There was a time when we could install applications, give some sort of explicit agreement that something would run on our computers and use our hardware. </blockquote><p>Using a web native app is more like installing an app. It uses your local identity, your files, and in many cases can even run offline.</p><p>It is using your browser as an operating system.</p><h2 id=\"web-native-apps-with-fission\">Web Native Apps with Fission</h2><p>Fission is building an app hosting marketplace for developers and users that supports web native apps.</p><p>For developers, they can design a user app using only front end and design skills. The web native app can be installed by 10 or 10,000 users, just like mobile or desktop software. Because the app is running on the user's computer, you can focus on finding new users and adding new features, rather than having to learn DevOps or server scaling. It's the fastest way to start sharing – and soon, selling – your app on the web.</p><p>Users create a secure identity in their browsers. Every Fission account is linked to a file system, available in any browser. Much like an open source iCloud, users give permissions to apps, and can access their files from anywhere. Users can browse their file system, both public and private, and mix and match which apps they use, just like they're used to with mobile and desktop apps.</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p>Our code is <a href=\"https://github.com/fission-suite\">open source</a>. We're building on top of commons infrastructure, and we're aiming to be a federated <a href=\"https://blog.fission.codes/constellation-providers-at-decentralized-storage-summit/\">constellation provider</a> rather than a cloud provider.</p><p>Our 1.0 release is coming soon, <a href=\"https://fission.codes\">sign up on the home page to get notified</a>, or jump into our <a href=\"https://fission.codes/discord\">Discord chat</a> to get involved and ask questions.</p>","url":"https://blog.fission.codes/intro-web-native-apps/","canonical_url":null,"uuid":"f6327283-e877-4625-b614-ef27605157a9","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5f7c83a7af9100001e524349","reading_time":null}},{"node":{"id":"Ghost__Post__5eb0b3c3847394001e25cfe8","title":"TiddlyWiki as the original serverless","slug":"tiddlywiki-as-the-original-serverless","featured":true,"feature_image":"https://images.unsplash.com/photo-1506784881475-0e408bbca849?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","excerpt":"Using TiddlyWiki as your own open source Roam or Notion using the Git saver, plus an App Idea for running this on Fission","custom_excerpt":"Using TiddlyWiki as your own open source Roam or Notion using the Git saver, plus an App Idea for running this on Fission","created_at_pretty":"05 May, 2020","published_at_pretty":"05 May, 2020","updated_at_pretty":"08 October, 2020","created_at":"2020-05-04T17:30:59.000-07:00","published_at":"2020-05-05T11:28:24.000-07:00","updated_at":"2020-10-08T12:33:45.000-07:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"}],"primary_author":{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"},"primary_tag":{"name":"App Ideas","slug":"app-ideas","description":null,"feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"App Ideas","slug":"app-ideas","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"TiddlyWiki","slug":"tiddlywiki","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"serverless","slug":"serverless","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"TiddlyWiki is a really interesting \"non linear personal notebook\" that's\ncurrently getting a lot of people tinkering with it because it's a bit like an\nopen source, build your own Roam Research or Notion: a tool for building second\nbrains.\n\nI've used TiddlyWiki [https://tiddlywiki.com]  off and on over many years. I can\ntrace back to a post from May 2005 on my old blog\n[https://bmannconsulting.com/archive/2005/05/19/tiddlywiki-as-note-system/],\nalthough even there I mention running it earlier than that. A couple of years\nago, I even ran it on Google App Engine with the Go-based TiddlyWiki App Engine\nServer [https://github.com/rsc/tiddly]. That was multi-user, using Google\naccounts to restrict read/write.\n\nAlthough we didn't really appreciate it at the time, it had this lovely aspect\nof all your \"stuff\" being in this one file. You could move the file around,\nwhether it be on a USB stick or an FTP folder or a cloud service. Any web\nbrowser opens it and \"runs\" it – no servers involved.\n\nJeremy Ruston @Jermolene [https://twitter.com/Jermolene], the creator of\nTiddlyWiki, posted a great tweetstorm about how TiddlyWiki has been serverless\nall the way back to 2004:\n\n> TiddlyWiki was literally serverless in 2004, but it was at @Osmosoft\n[https://twitter.com/osmosoft?ref_src=twsrc%5Etfw]  in 2007/8 with @jayfresh\n[https://twitter.com/jayfresh?ref_src=twsrc%5Etfw], @psd\n[https://twitter.com/psd?ref_src=twsrc%5Etfw]  and others that we understood the\nvalue\n\n— Jeremy Ruston (@Jermolene) July 6, 2016\n[https://twitter.com/Jermolene/status/750677048021094400?ref_src=twsrc%5Etfw]\nRun your own Roam with TiddlyWiki plus Git\nThere has been a lot of excitement about Roam Research\n[https://roamresearch.com], which describes itself on the home page as:\n\n> A note-taking tool for networked thought.\nAs easy to use as a document. As powerful as a graph database. Roam helps you\norganize your research for the long haul.\nThe #roamcult  Twitter hashtag or community run @CultRoam account\n[https://twitter.com/CultRoam]  should give you an idea of how excited people\nare, as well as surfacing lots of great tutorials and tips.\n\n(Insert Notion [https://www.notion.so/]  love here if you're a fan of it\ninstead)\n\nVenkatesh Rao wrote about A Text Renaissance\n[https://www.ribbonfarm.com/2020/02/24/a-text-renaissance/]  which covers a bit\nabout why this is all coming up now:\n\n> The text renaissance is an actual renaissance. It’s a story of history-inspired\nrenewal in a very fundamental way: exciting recent developments are due in part\nto a new generation of young product visionaries circling back to the early\nhistory of digital text, rediscovering old, abandoned ideas, and reimagining the\nbleeding edge in terms of the unexplored adjacent possible of the 80s and 90s.\n\n--------------------------------------------------------------------------------\n\nBut of course, both Notion and Roam are hosted SaaS apps, neither of them with\nofficial APIs yet. They have markdown exports, but ultimately your personal\ndata, your notes, or \"Second Brain\" [https://www.buildingasecondbrain.com/]  as\nsome people call it, isn't fully under your control.\n\nEnter TiddlyWiki, which is open source and thus can be hosted and backed up and\nmodified as you desire.\n\nTiddlyBlink [https://giffmex.org/gifts/tiddlyblink.html]  and Drift\n[https://akhater.github.io/drift/]  are two distros / plugins for TiddlyWiki\nthat include the bi-directional linking capability\n\nToday, TiddlyWiki has the concept of \"Savers\"\n[https://tiddlywiki.com/dev/static/Saver.html]. You can still save updates to\nyour local machine, but you can also connect it up to a Git service of your\nchoice and \"save\" by committing the HTML back through an API call.\n\nPesho Ivanov documents this as Two-click TiddlyWiki with Github Pages\n[https://pesho-ivanov.github.io/#Two-click%20TiddlyWiki%20with%20GitHub-pages],\nor you can read the extended edition from Chris Aldrich, Self-hosting\nTiddlyWiki\nwith Github Pages\n[https://boffosocko.com/2020/04/04/self-hosting-tiddlywiki-with-github-pages/].\n\nI set Drift up for myself, including turning on password-based encryption in\nTiddlyWiki [https://tiddlywiki.com/static/Encryption.html]. Here's my publicly\nhosted Drift TiddlyWiki [https://projects.bmannconsulting.com/tiddlywiki-drift/]\n. I can enter the password, and use it in the browser, and then periodically the\nencrypted version is saved back to my own private Github repo.\n\nMy second brain, publicly available everywhere, backed up and versioned. Pretty\nnice!\n\nApp Idea: Fission Saver for TiddlyWiki\nOf course, git is still pretty complex to learn, for someone who mainly wants to\ntake personal notes and make sure they're around forever. What I've described\nabove was a fun exercise for me, but it's very <insert-yak-shaving\n[https://talk.fission.codes/t/yak-shaving-programming-term/582]-gif>.\n\nThe Fission tech stack gives users and developers a web native file system.\nHaving files available everywhere, read/write, encrypted, and accessible through\njust a browser, means that developers can build apps that keep users in control\nof their files, and that a lot of existing apps can easily be connected to\nFission. Serverless, as it were.\n\nI wrote up what a \"Fission Saver\" would look like for TiddlyWiki\n[https://talk.fission.codes/t/fission-saver-for-tiddlywiki/616]  on our App\nIdeas forum, which is a very basic start. Since you can publish files with\nFission, the TiddlyWiki would be hosted on Fission, but also write back to\nitself over the HTTP API. This is pretty much the same as the Git savers today.\n\nBut we can do better than that, since we have portable user IDs and a\npasswordless login which can do encryption. A \"native\" Fission adapter for\nTiddlyWiki would mean offline and online access to your data available\neverywhere, and encrypted or public data as needed. \n\nI'm looking forward to more \"serverless\" thinking with the tools we now have,\nwhich TiddlyWiki had figured out 15+ years ago.","html":"<p>TiddlyWiki is a really interesting \"non linear personal notebook\" that's currently getting a lot of people tinkering with it because it's a bit like an open source, build your own Roam Research or Notion: a tool for building second brains.</p><p>I've used <a href=\"https://tiddlywiki.com\">TiddlyWiki</a> off and on over many years. I can trace back to a <a href=\"https://bmannconsulting.com/archive/2005/05/19/tiddlywiki-as-note-system/\">post from May 2005 on my old blog</a>, although even there I mention running it earlier than that. A couple of years ago, I even ran it on Google App Engine with the <a href=\"https://github.com/rsc/tiddly\">Go-based TiddlyWiki App Engine Server</a>. That was multi-user, using Google accounts to restrict read/write.</p><p>Although we didn't really appreciate it at the time, it had this lovely aspect of all your \"stuff\" being in this one file. You could move the file around, whether it be on a USB stick or an FTP folder or a cloud service. Any web browser opens it and \"runs\" it – no servers involved.</p><p><a href=\"https://twitter.com/Jermolene\">Jeremy Ruston @Jermolene</a>, the creator of TiddlyWiki, posted a great tweetstorm about how TiddlyWiki has been serverless all the way back to 2004:</p><!--kg-card-begin: embed--><figure class=\"kg-card kg-embed-card\"><blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">TiddlyWiki was literally serverless in 2004, but it was at <a href=\"https://twitter.com/osmosoft?ref_src=twsrc%5Etfw\">@Osmosoft</a> in 2007/8 with <a href=\"https://twitter.com/jayfresh?ref_src=twsrc%5Etfw\">@jayfresh</a>, <a href=\"https://twitter.com/psd?ref_src=twsrc%5Etfw\">@psd</a> and others that we understood the value</p>&mdash; Jeremy Ruston (@Jermolene) <a href=\"https://twitter.com/Jermolene/status/750677048021094400?ref_src=twsrc%5Etfw\">July 6, 2016</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n</figure><!--kg-card-end: embed--><h2 id=\"run-your-own-roam-with-tiddlywiki-plus-git\">Run your own Roam with TiddlyWiki plus Git</h2><p>There has been a lot of excitement about <a href=\"https://roamresearch.com\">Roam Research</a>, which describes itself on the home page as:</p><blockquote><strong>A note-taking tool for networked thought.</strong><br>As easy to use as a document. As powerful as a graph database. Roam helps you organize your research for the long haul.</blockquote><p>The <em>#roamcult</em> Twitter hashtag or community run <a href=\"https://twitter.com/CultRoam\">@CultRoam account</a> should give you an idea of how excited people are, as well as surfacing lots of great tutorials and tips.</p><p>(Insert <a href=\"https://www.notion.so/\">Notion</a> love here if you're a fan of it instead)</p><p><a href=\"https://www.ribbonfarm.com/2020/02/24/a-text-renaissance/\">Venkatesh Rao wrote about A Text Renaissance</a> which covers a bit about why this is all coming up now:</p><blockquote>The text renaissance is an actual <em>renaissance. </em>It’s a story of history-inspired renewal in a very fundamental way: exciting recent developments are due in part to a new generation of young product visionaries circling back to the early history of digital text, rediscovering old, abandoned ideas, and reimagining the bleeding edge in terms of the unexplored adjacent possible of the 80s and 90s.</blockquote><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p>But of course, both Notion and Roam are hosted SaaS apps, neither of them with official APIs yet. They have markdown exports, but ultimately your personal data, your notes, or <a href=\"https://www.buildingasecondbrain.com/\">\"Second Brain\"</a> as some people call it, isn't fully under your control.</p><p>Enter TiddlyWiki, which is open source and thus can be hosted and backed up and modified as you desire.</p><p><a href=\"https://giffmex.org/gifts/tiddlyblink.html\">TiddlyBlink</a> and <a href=\"https://akhater.github.io/drift/\">Drift</a> are two distros / plugins for TiddlyWiki that include the bi-directional linking capability</p><p>Today, TiddlyWiki has the concept of <a href=\"https://tiddlywiki.com/dev/static/Saver.html\">\"Savers\"</a>. You can still save updates to your local machine, but you can also connect it up to a Git service of your choice and \"save\" by committing the HTML back through an API call.</p><p>Pesho Ivanov documents this as <a href=\"https://pesho-ivanov.github.io/#Two-click%20TiddlyWiki%20with%20GitHub-pages\">Two-click TiddlyWiki with Github Pages</a>, or you can read the extended edition from <a href=\"https://boffosocko.com/2020/04/04/self-hosting-tiddlywiki-with-github-pages/\">Chris Aldrich, Self-hosting TiddlyWiki with Github Pages</a>.</p><p>I set Drift up for myself, including turning on <a href=\"https://tiddlywiki.com/static/Encryption.html\">password-based encryption in TiddlyWiki</a>. Here's my <a href=\"https://projects.bmannconsulting.com/tiddlywiki-drift/\">publicly hosted Drift TiddlyWiki</a>. I can enter the password, and use it in the browser, and then periodically the encrypted version is saved back to my own private Github repo.</p><p>My second brain, publicly available everywhere, backed up and versioned. Pretty nice!</p><h2 id=\"app-idea-fission-saver-for-tiddlywiki\">App Idea: Fission Saver for TiddlyWiki</h2><p>Of course, git is still pretty complex to learn, for someone who mainly wants to take personal notes and make sure they're around forever. What I've described above was a fun exercise for me, but it's very &lt;insert-<a href=\"https://talk.fission.codes/t/yak-shaving-programming-term/582\">yak-shaving</a>-gif&gt;.</p><p>The Fission tech stack gives users and developers a web native file system. Having files available everywhere, read/write, encrypted, and accessible through just a browser, means that developers can build apps that keep users in control of their files, and that a lot of existing apps can easily be connected to Fission. Serverless, as it were.</p><p>I wrote up what a <a href=\"https://talk.fission.codes/t/fission-saver-for-tiddlywiki/616\">\"Fission Saver\" would look like for TiddlyWiki</a> on our App Ideas forum, which is a very basic start. Since you can publish files with Fission, the TiddlyWiki would be hosted on Fission, but also write back to itself over the HTTP API. This is pretty much the same as the Git savers today.</p><p>But we can do better than that, since we have portable user IDs and a passwordless login which can do encryption. A \"native\" Fission adapter for TiddlyWiki would mean offline and online access to your data available everywhere, and encrypted or public data as needed. </p><p>I'm looking forward to more \"serverless\" thinking with the tools we now have, which TiddlyWiki had figured out 15+ years ago.</p>","url":"https://blog.fission.codes/tiddlywiki-as-the-original-serverless/","canonical_url":null,"uuid":"639e84ca-a7a1-4f62-b6c0-ede9ff32629a","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5eb0b3c3847394001e25cfe8","reading_time":null}},{"node":{"id":"Ghost__Post__5ea068b333f762001e6c6fae","title":"Experimenting with HLS Video Streaming and IPFS","slug":"experimenting-with-hls-video-streaming-and-ipfs","featured":false,"feature_image":"https://images.unsplash.com/photo-1501141178950-e7fa06e4adf5?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","excerpt":"Walk through of encoding video using HTTP Live Streaming (HLS) and publishing to Fission.","custom_excerpt":"Walk through of encoding video using HTTP Live Streaming (HLS) and publishing to Fission.","created_at_pretty":"22 April, 2020","published_at_pretty":"22 April, 2020","updated_at_pretty":"22 April, 2020","created_at":"2020-04-22T08:54:27.000-07:00","published_at":"2020-04-22T10:09:39.000-07:00","updated_at":"2020-04-22T10:09:39.000-07:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"}],"primary_author":{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"},"primary_tag":{"name":"How To","slug":"how-to","description":null,"feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"How To","slug":"how-to","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"IPFS","slug":"ipfs","description":"InterPlanetary File System","feature_image":null,"meta_description":null,"meta_title":null},{"name":"HLS","slug":"hls","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"We've been running weekly developer lunch & learn sessions\n[https://talk.fission.codes/c/events/dweblunchnlearn/27]  over video. I've been\ndownloading the video from Zoom, doing some basic trimming, and then uploading\nit using Fission, and embedding the IPFS link in our Discourse forum. This works\npretty well – Discourse recognizes the video file extension and embeds a video\nplayer in the post automatically. I had read a bit about HTTP Live Streaming\n(HLS) and wanted to experiment.\n\nOriginally developed by Apple, and now widely supported, HLS doesn't need any\nspecial server-side support. A bit more in this freeCodeCamp article:\n\n> The most important feature of HLS is its ability to adapt the bitrate of the\nvideo to the actual speed of the connection. This optimizes the quality of the\nexperience.\n\nHLS videos are encoded in different renditions at different resolutions and\nbitrates. This is usually referred to as the bitrate ladder. When a connection\ngets slower, the protocol automatically adjusts the requested bitrate to the\nbandwidth available.\n\n– freeCodeCamp: HLS Video Streaming: What it is, and When to Use it\n[https://www.freecodecamp.org/news/what-is-hls-and-when-to-use-it/]\nThere's an example in the JavaScript implementation of IPFS about using HLS\nwith\njs-ipfs\n[https://github.com/ipfs/js-ipfs/tree/master/examples/browser-video-streaming].\nThe README explains:\n\n> The fact that HLS content is just \"a bunch of files\" makes it a good choice for\nIPFS (another protocol that works this way is MPEG-DASH, which could certainly\nbe a good choice as well). Furthermore, the hls.js\n[https://github.com/video-dev/hls.js]  library enables straightforward\nintegration with the HTML5 video element.\n\"Just a bunch of files\" is pretty much how we're thinking about Fission. Fission\nand any standard IPFS gateway serves up files over HTTP and/or natively with\nIPFS, without plugins, in any browser. It's really great to get back to what is\nbasically the 2020 equivalent of upload files to the server.\n\nI took the latest video file of Joel talking about Ceramic Network\n[https://talk.fission.codes/t/ceramic-network-technical-discussion-with-joel-thorstensson-cto-of-3box/559] \n and ran the ffmpeg  command from the js-ipfs example. On MacOS, brew install\nffmpeg  will get you the program.\n\nffmpeg -i ../YOURVIDEO.mp4 -profile:v baseline -level 3.0 -start_number 0\n-hls_time 5 -hls_list_size 0 -f hls master.m3u8\n\nOn my desktop iMac, the progress showed to be encoding at 4x - 5x speed. The\nvideo is about an hour, so it took about 20 minutes to complete. The output is\n400+ files, which I uploaded with fission up  and then noted down the hash of\nthe folder.\n\nBrowse the files on IPFS using Fission Drive\n[https://drive.fission.codes/#/QmYGs1ksGX3eMiGvxNuvRT6PD7zPKZpHyiUDXKGQoL4R7S]\nThen I went back and edited the streaming.js  folder and index.html. The \nstreaming.js  file just needs the hash of the folder that contains the\nHLS-encoded video, which for this video is \nQmYGs1ksGX3eMiGvxNuvRT6PD7zPKZpHyiUDXKGQoL4R7S. Feel free to use this to\nexperiment with! I kept the master.m3u8  file name so didn't need to change\nthat.\n\nOne change I made was to to also include the IPFS script from a CDN in the \nindex.html  file (the js-ipfs example assumes you're running things locally and\nworking with js-ipfs from there). Just add this line:\n\n<script src=\"https://cdn.jsdelivr.net/npm/ipfs/dist/index.min.js\"></script>\n\nYou can browse all the files directly using Fission Drive\n[https://drive.fission.codes/#/events.fission.name/2020/04-16-dweb-lunchnlearn-joel-ceramic-network]\n, including the source video that was encoded. Visiting the index page\n[https://events.fission.name/2020/04-16-dweb-lunchnlearn-joel-ceramic-network/] \nwill load the player and HLS stream the video.\n\nExample HLS Video\nHere's the source and video embedded via Codepen – hit the HTML button to view\nsource. Note the Fission gateway link to the published version of the \nstreaming.js  file, also remotely included:\n\nThe video isn't very high quality to begin with, and adding width/height to the\nvideo element could constrain it to different sizes.\n\nMore about Joel and Ceramic Network on the forum event page »\n[https://talk.fission.codes/t/ceramic-network-technical-discussion-with-joel-thorstensson-cto-of-3box/559]\n\nConclusion\nThis is a very manual process, and there are lots of dedicated video encoding\nservices. It was a good experiment to see that anything that is a \"bunch of\nfiles\" can just work over the distributed IPFS network, and easily published and\nhosted on Fission.\n\nExperimenting with a large, high quality video and testing across different\ndevices and network speeds (and whether or not nearby peers had a copy of the\nvideo) would need to be done vs. just embedding the original video to see what\nthe user experience is actually like.\n\nThis also leads to some interesting thoughts about distributed encoding. Once an\noriginal video is encoded and added to the network by one person, it never needs\nto be encoded again. From some brief research, ffmpeg is not deterministic,\nwhich lead to this thread on Mastodon\n[https://mastodon.social/@Gargron/11088922]. This means that different people\nencoding a video could get different output files, which means different hashes\nin IPFS.\n\nHowever, the original video file is unique, so adding metadata to the original\nsource video file for discovery of the unique, permanent hash of an HLS-encoded\nversion could work.\n\nWe're currently doing some work on how to do this for images, so that different\nsizes are automatically available and cached in the network.\n\n\n--------------------------------------------------------------------------------\n\nFission is an app & web hosting platform that implements a web native file\nsystem powered by IPFS. Build and run locally, fission up  to host everywhere. \nRead our guide [https://guide.fission.codes]  to get started and sign up right\nfrom the command line.","html":"<p>We've been running <a href=\"https://talk.fission.codes/c/events/dweblunchnlearn/27\">weekly developer lunch &amp; learn sessions</a> over video. I've been downloading the video from Zoom, doing some basic trimming, and then uploading it using Fission, and embedding the IPFS link in our Discourse forum. This works pretty well – Discourse recognizes the video file extension and embeds a video player in the post automatically. I had read a bit about HTTP Live Streaming (HLS) and wanted to experiment.</p><p>Originally developed by Apple, and now widely supported, HLS doesn't need any special server-side support. A bit more in this freeCodeCamp article:</p><blockquote>The most important feature of HLS is its ability to adapt the bitrate of the video to the actual speed of the connection. This optimizes the quality of the experience.<br><br>HLS videos are encoded in different renditions at different resolutions and bitrates. This is usually referred to as the bitrate ladder. When a connection gets slower, the protocol automatically adjusts the requested bitrate to the bandwidth available.<br><br>– <a href=\"https://www.freecodecamp.org/news/what-is-hls-and-when-to-use-it/\">freeCodeCamp: HLS Video Streaming: What it is, and When to Use it</a></blockquote><p>There's an <a href=\"https://github.com/ipfs/js-ipfs/tree/master/examples/browser-video-streaming\">example in the JavaScript implementation of IPFS about using HLS with js-ipfs</a>. The README explains:</p><blockquote>The fact that HLS content is just \"a bunch of files\" makes it a good choice for IPFS (another protocol that works this way is MPEG-DASH, which could certainly be a good choice as well). Furthermore, the <a href=\"https://github.com/video-dev/hls.js\">hls.js</a> library enables straightforward integration with the HTML5 video element.</blockquote><p>\"Just a bunch of files\" is pretty much how we're thinking about Fission. Fission and any standard IPFS gateway serves up files over HTTP and/or natively with IPFS, without plugins, in any browser. It's really great to get back to what is basically the 2020 equivalent of upload files to the server.</p><p>I took the latest video file of <a href=\"https://talk.fission.codes/t/ceramic-network-technical-discussion-with-joel-thorstensson-cto-of-3box/559\">Joel talking about Ceramic Network</a> and ran the <code>ffmpeg</code> command from the js-ipfs example. On MacOS, <code>brew install ffmpeg</code> will get you the program.</p><p><code>ffmpeg -i ../YOURVIDEO.mp4 -profile:v baseline -level 3.0 -start_number 0 -hls_time 5 -hls_list_size 0 -f hls master.m3u8</code></p><p>On my desktop iMac, the progress showed to be encoding at 4x - 5x speed. The video is about an hour, so it took about 20 minutes to complete. The output is 400+ files, which I uploaded with <code>fission up</code> and then noted down the hash of the folder.</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://s3.fission.codes/2020/04/hls-video-files-in-drive-600.png\" class=\"kg-image\"><figcaption>Browse the <a href=\"https://drive.fission.codes/#/QmYGs1ksGX3eMiGvxNuvRT6PD7zPKZpHyiUDXKGQoL4R7S\">files on IPFS using Fission Drive</a></figcaption></figure><!--kg-card-end: image--><p>Then I went back and edited the <code>streaming.js</code> folder and <code>index.html</code>. The <code>streaming.js</code> file just needs the hash of the folder that contains the HLS-encoded video, which for this video is <code>QmYGs1ksGX3eMiGvxNuvRT6PD7zPKZpHyiUDXKGQoL4R7S</code>. Feel free to use this to experiment with! I kept the <code>master.m3u8</code> file name so didn't need to change that.</p><p>One change I made was to to also include the IPFS script from a CDN in the <code>index.html</code> file (the js-ipfs example assumes you're running things locally and working with js-ipfs from there). Just add this line:</p><p><code>&lt;script src=\"https://cdn.jsdelivr.net/npm/ipfs/dist/index.min.js\"&gt;&lt;/script&gt;</code></p><p>You can <a href=\"https://drive.fission.codes/#/events.fission.name/2020/04-16-dweb-lunchnlearn-joel-ceramic-network\">browse all the files directly using Fission Drive</a>, including the source video that was encoded. <a href=\"https://events.fission.name/2020/04-16-dweb-lunchnlearn-joel-ceramic-network/\">Visiting the index page</a> will load the player and HLS stream the video.</p><h2 id=\"example-hls-video\">Example HLS Video</h2><p>Here's the source and video embedded via Codepen – hit the HTML button to view source. Note the Fission gateway link to the published version of the <code>streaming.js</code> file, also remotely included:</p><!--kg-card-begin: embed--><figure class=\"kg-card kg-embed-card\"><iframe id=\"cp_embed_GRprJoZ\" src=\"https://codepen.io/borismann/embed/preview/GRprJoZ?height=300&amp;slug-hash=GRprJoZ&amp;default-tabs=html,result&amp;host=https://codepen.io\" title=\"HLS Streaming over IPFS Example\" scrolling=\"no\" frameborder=\"0\" height=\"300\" allowtransparency=\"true\" class=\"cp_embed_iframe\" style=\"width: 100%; overflow: hidden;\"></iframe></figure><!--kg-card-end: embed--><p>The video isn't very high quality to begin with, and adding width/height to the video element could constrain it to different sizes.</p><p>More about <a href=\"https://talk.fission.codes/t/ceramic-network-technical-discussion-with-joel-thorstensson-cto-of-3box/559\">Joel and Ceramic Network on the forum event page »</a></p><h2 id=\"conclusion\">Conclusion</h2><p>This is a very manual process, and there are lots of dedicated video encoding services. It was a good experiment to see that anything that is a \"bunch of files\" can just work over the distributed IPFS network, and easily published and hosted on Fission.</p><p>Experimenting with a large, high quality video and testing across different devices and network speeds (and whether or not nearby peers had a copy of the video) would need to be done vs. just embedding the original video to see what the user experience is actually like.</p><p>This also leads to some interesting thoughts about distributed encoding. Once an original video is encoded and added to the network by one person, it never needs to be encoded again. From some brief research, <a href=\"https://mastodon.social/@Gargron/11088922\">ffmpeg is not deterministic, which lead to this thread on Mastodon</a>. This means that different people encoding a video could get different output files, which means different hashes in IPFS.</p><p>However, the original video file is unique, so adding metadata to the original source video file for discovery of the unique, permanent hash of an HLS-encoded version could work.</p><p>We're currently doing some work on how to do this for images, so that different sizes are automatically available and cached in the network.</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p><em>Fission is an app &amp; web hosting platform that implements a web native file system powered by IPFS. Build and run locally, <code>fission up</code> to host everywhere. <a href=\"https://guide.fission.codes\">Read our guide</a> to get started and sign up right from the command line.</em></p>","url":"https://blog.fission.codes/experimenting-with-hls-video-streaming-and-ipfs/","canonical_url":null,"uuid":"a59c1236-5ed1-4fda-8b61-e88a76aca80c","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5ea068b333f762001e6c6fae","reading_time":null}},{"node":{"id":"Ghost__Post__5e50441cf2d438001ebdfeb4","title":"Back to the Future (of Drupal)","slug":"back-to-the-future-of-drupal","featured":true,"feature_image":"https://s3.fission.codes/2020/02/Screenshot-2020-02-21-12.52.48.png","excerpt":"Boris will be presenting on Drupal and the Decentralized Web at DrupalCon Minneapolis, May 18 - 22.","custom_excerpt":"Boris will be presenting on Drupal and the Decentralized Web at DrupalCon Minneapolis, May 18 - 22.","created_at_pretty":"21 February, 2020","published_at_pretty":"21 February, 2020","updated_at_pretty":"23 June, 2020","created_at":"2020-02-21T12:57:00.000-08:00","published_at":"2020-02-21T14:40:45.000-08:00","updated_at":"2020-06-23T11:24:02.000-07:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"}],"primary_author":{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"},"primary_tag":{"name":"Events","slug":"event","description":"Events in the decentralized web, p2p, & Ethereum community.","feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"Events","slug":"event","description":"Events in the decentralized web, p2p, & Ethereum community.","feature_image":null,"meta_description":null,"meta_title":null},{"name":"Drupal","slug":"drupal","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"DrupalCon","slug":"drupalcon","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"speaking","slug":"speaking","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"decentralized web","slug":"decentralized-web","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"After a long absence from the Drupal community, I've been accepted as a speaker\nat DrupalCon Minneapolis [https://events.drupal.org/minneapolis2020/]. I'll be\npresenting about Drupal and the Decentralized Web, and some of the changes that\nhave happened from the past to the present on a number of topics, including open\nsource licenses, a shift in architectures and hosting, the rise of the\nadvertising supported web, and what a more peer-to-peer future holds.\n\nUpdate:  DrupalCon Global has been rescheduled as a fully online, distributed\nconference. I will miss the opportunity to catch up with many people in person.\nBut I have been lucky enough to have my Drupal and the Decentralized Web\nsession\naccepted as a \"live\" talk\n[https://events.drupal.org/global2020/sessions/drupal-and-decentralized-web],\ntaking place on July 14th at 23:15 UTC / 4:15pm PDT / 7:15pm EDT. Please join me\nat the conference and for my session, I've added it as an event on our forum as\nwell\n[https://talk.fission.codes/t/drupal-and-the-decentralized-web-boris-mann-drupalcon-global-july-14th/729]\n.\n\n\n--------------------------------------------------------------------------------\n\nBack in 2003, I joined drupal.org, posted about wrapping recipe.module with CSS\nclasses [https://www.drupal.org/project/recipe/issues/2524], and the rest is\nhistory.\n\n> Happy 16th birthday, Drupal! 🎂🎈 https://t.co/eTO1JMvxTQ  \npic.twitter.com/Q57SXfQQIY [https://t.co/Q57SXfQQIY]\n\n— Dries Buytaert (@Dries) January 15, 2017\n[https://twitter.com/Dries/status/820624651344809984?ref_src=twsrc%5Etfw]\nDries presenting in Vancouver in November 2004, in a tweet from 2017. Drupal is\n19 years old this year!I went on to host Dries in Vancouver [https://dri.es/album/vancouver-2004/]  in\n2004, along with the first printed Drupal t-shirts, a beer tower\n[https://dri.es/album/vancouver-2004/pub-beer-tower-2], and the folks from\nDeanSpace / CivicSpace (working on the Democratic primaries) flew up to join us.\n\nAllow me some brief nostalgia…\n\n\n--------------------------------------------------------------------------------\n\nI founded Bryght\n[https://www.drupal.org/forum/general/news-and-announcements/2004-08-30/who-are-these-bryght-guys]\n, one of the first commercial companies focused on Drupal, helped organize many\nmore DrupalCons and DrupalCamps, and helped found the Drupal Association.\n\nFOSDEM 2005, before which the first DrupalCon had about 40 peopleWe were in the\nthick of Web 1.0 transitioning to Web 2.0, and the early days of identity\nstandards and communication between websites. That post I made about the \nrecipe.module  is actually tied to a Blogger.com account, which at the time you\ncould use to login to drupal.org.\n\nOpen source licenses and the details of GPL were hotly contested, and we faced a\nlot of FUD from Microsoft and others. A global community using mailing lists and\nIRC was forming, and we didn't know what we were doing was new and different,\nbut that we had come for the code and were staying for the community.\n\n\n--------------------------------------------------------------------------------\n\nNow, I see Web3 emerging – although the blog post where I attempt to define what\nthat means to me still isn't finished yet!\n\nNew open source licenses are emerging (Dries on Makers and Takers\n[https://dri.es/balancing-makers-and-takers-to-scale-and-sustain-open-source]),\nbusiness models beyond the advertising supported web are being sought for.\n\nAdvances in computer science theory have given us new tools for distributed\nsystems and cryptography, leading to both better privacy and programmable\nInternet money. \n\nDries' post on low-code and no code tools\n[https://dri.es/low-code-and-no-code-tools-continue-to-drive-the-web-forward] \nshows more changes that I think fit into this theme:\n\n> When everyone is a builder, more good things will happen on the web. I was\nexcited about this trend more than 12 years ago, and remain excited today. I'm\neager to see the progress no-code and low-code solutions will bring to the web\nin the next decade.\nThe Drupal community has long been eager to experiment with new technology and\nstandards. How will Drupal's traditional LAMP stack architecture fit with\nserverless and decentralized approaches? What new standards and protocols make\nsense to integrate and expand on?\n\nWhat new experiences do they enable that offer benefits for everyone from site\nbuilders to Drupal end users?\n\nPlease join me in Minneapolis for my presentation Drupal and the Decentralized\nWeb\n[https://events.drupal.org/minneapolis2020/sessions/drupal-and-decentralized-web]\n. Check out the full list of speakers\n[https://events.drupal.org/minneapolis2020/speakers]  and accepted sessions\n[https://events.drupal.org/minneapolis2020/sessions/accepted].\n\nI'd love to catch up with many of you that I haven't seen for years, and to meet\nmany new members of the Drupal community.\n\n\"The Drop is Always Moving\" is about Drupal always changing and evolving. Image\nfrom the @DropIsMoving [https://twitter.com/DropIsMoving]  account.\n--------------------------------------------------------------------------------\n\nWant to find out more about what we're up to with Fission\n[https://fission.codes]? You can read the latest newsletter in our forum\n[https://talk.fission.codes/t/newsletter-fission-product-update-fission-drive-preview/505]\n, or drop into our Discord chat [https://fission.codes/discord]  to come say\n\"hi\" (plus I'm in the Drupal Slack, too).","html":"<p>After a long absence from the Drupal community, I've been accepted as a speaker at <a href=\"https://events.drupal.org/minneapolis2020/\">DrupalCon Minneapolis</a>. I'll be presenting about Drupal and the Decentralized Web, and some of the changes that have happened from the past to the present on a number of topics, including open source licenses, a shift in architectures and hosting, the rise of the advertising supported web, and what a more peer-to-peer future holds.</p><p><strong>Update:</strong> DrupalCon Global has been rescheduled as a fully online, distributed conference. I will miss the opportunity to catch up with many people in person. But I have been lucky enough to have my <a href=\"https://events.drupal.org/global2020/sessions/drupal-and-decentralized-web\">Drupal and the Decentralized Web session accepted as a \"live\" talk</a>, taking place on July 14th at 23:15 UTC / 4:15pm PDT / 7:15pm EDT. Please join me at the conference and for my session, <a href=\"https://talk.fission.codes/t/drupal-and-the-decentralized-web-boris-mann-drupalcon-global-july-14th/729\">I've added it as an event on our forum as well</a>.</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p>Back in 2003, I joined drupal.org, <a href=\"https://www.drupal.org/project/recipe/issues/2524\">posted about wrapping recipe.module with CSS classes</a>, and the rest is history.</p><!--kg-card-begin: embed--><figure class=\"kg-card kg-embed-card kg-card-hascaption\"><blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">Happy 16th birthday, Drupal! 🎂🎈 <a href=\"https://t.co/eTO1JMvxTQ\">https://t.co/eTO1JMvxTQ</a> <a href=\"https://t.co/Q57SXfQQIY\">pic.twitter.com/Q57SXfQQIY</a></p>&mdash; Dries Buytaert (@Dries) <a href=\"https://twitter.com/Dries/status/820624651344809984?ref_src=twsrc%5Etfw\">January 15, 2017</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<figcaption>Dries presenting in Vancouver in November 2004, in a tweet from 2017. Drupal is 19 years old this year!</figcaption></figure><!--kg-card-end: embed--><p>I went on to <a href=\"https://dri.es/album/vancouver-2004/\">host Dries in Vancouver</a> in 2004, along with the first printed Drupal t-shirts, a <a href=\"https://dri.es/album/vancouver-2004/pub-beer-tower-2\">beer tower</a>, and the folks from DeanSpace / CivicSpace (working on the Democratic primaries) flew up to join us.</p><p><em>Allow me some brief nostalgia…</em></p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p>I founded <a href=\"https://www.drupal.org/forum/general/news-and-announcements/2004-08-30/who-are-these-bryght-guys\">Bryght</a>, one of the first commercial companies focused on Drupal, helped organize many more DrupalCons and DrupalCamps, and helped found the Drupal Association.</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://s3.fission.codes/2020/02/drupal-5-minute-booth_105581628_o.jpg\" class=\"kg-image\"><figcaption>FOSDEM 2005, before which the first DrupalCon had about 40 people</figcaption></figure><!--kg-card-end: image--><p>We were in the thick of Web 1.0 transitioning to Web 2.0, and the early days of identity standards and communication between websites. That post I made about the <em>recipe.module</em> is actually tied to a Blogger.com account, which at the time you could use to login to drupal.org.</p><p>Open source licenses and the details of GPL were hotly contested, and we faced a lot of FUD from Microsoft and others. A global community using mailing lists and IRC was forming, and we didn't know what we were doing was new and different, but that we had come for the code and were staying for the community.</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p>Now, I see Web3 emerging – although the blog post where I attempt to define what that means to me still isn't finished yet!</p><p>New open source licenses are emerging (<a href=\"https://dri.es/balancing-makers-and-takers-to-scale-and-sustain-open-source\">Dries on Makers and Takers</a>), business models beyond the advertising supported web are being sought for.</p><p>Advances in computer science theory have given us new tools for distributed systems and cryptography, leading to both better privacy and programmable Internet money. </p><p><a href=\"https://dri.es/low-code-and-no-code-tools-continue-to-drive-the-web-forward\">Dries' post on low-code and no code tools</a> shows more changes that I think fit into this theme:</p><blockquote>When everyone is a builder, more good things will happen on the web. I was excited about this trend more than 12 years ago, and remain excited today. I'm eager to see the progress no-code and low-code solutions will bring to the web in the next decade.</blockquote><p>The Drupal community has long been eager to experiment with new technology and standards. How will Drupal's traditional LAMP stack architecture fit with serverless and decentralized approaches? What new standards and protocols make sense to integrate and expand on?</p><p>What new experiences do they enable that offer benefits for everyone from site builders to Drupal end users?</p><p>Please join me in Minneapolis for my presentation <a href=\"https://events.drupal.org/minneapolis2020/sessions/drupal-and-decentralized-web\">Drupal and the Decentralized Web</a>. Check out the <a href=\"https://events.drupal.org/minneapolis2020/speakers\">full list of speakers</a> and <a href=\"https://events.drupal.org/minneapolis2020/sessions/accepted\">accepted sessions</a>.</p><p>I'd love to catch up with many of you that I haven't seen for years, and to meet many new members of the Drupal community.</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://s3.fission.codes/2020/02/drop_moving.png\" class=\"kg-image\"><figcaption>\"The Drop is Always Moving\" is about Drupal always changing and evolving. Image from the <a href=\"https://twitter.com/DropIsMoving\">@DropIsMoving</a> account.</figcaption></figure><!--kg-card-end: image--><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p>Want to find out more about what we're up to with <a href=\"https://fission.codes\">Fission</a>? You can <a href=\"https://talk.fission.codes/t/newsletter-fission-product-update-fission-drive-preview/505\">read the latest newsletter in our forum</a>, or drop into our <a href=\"https://fission.codes/discord\">Discord chat</a> to come say \"hi\" (plus I'm in the Drupal Slack, too).</p>","url":"https://blog.fission.codes/back-to-the-future-of-drupal/","canonical_url":null,"uuid":"df025f3f-e59d-4b99-8f7a-3d5f8a545349","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5e50441cf2d438001ebdfeb4","reading_time":null}},{"node":{"id":"Ghost__Post__5e17a981f14aa0001e823397","title":"Fission Drive Preview","slug":"fission-drive-preview","featured":true,"feature_image":"https://s3.fission.codes/2020/02/fission-drive-preview-ramen.png","excerpt":"We're pleased to present the Preview release of Fission Drive, the web native file system browser that we're including as a base component of the Fission stack.","custom_excerpt":"We're pleased to present the Preview release of Fission Drive, the web native file system browser that we're including as a base component of the Fission stack.","created_at_pretty":"09 January, 2020","published_at_pretty":"13 February, 2020","updated_at_pretty":"13 February, 2020","created_at":"2020-01-09T14:30:25.000-08:00","published_at":"2020-02-13T10:51:41.000-08:00","updated_at":"2020-02-13T10:53:28.000-08:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"},{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"}],"primary_author":{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"},"primary_tag":{"name":"FISSION","slug":"fission","description":null,"feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"FISSION","slug":"fission","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Fission Drive","slug":"fission-drive","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"IPFS","slug":"ipfs","description":"InterPlanetary File System","feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"We're pleased to present the Preview release of Fission Drive, the web native\nfile system browser that we're including as a base component of the Fission\nstack.\n\nWe've been hosting files, static websites, and client-side apps on Fission since\nwe launched our CLI tool in October of 2019.\n\nUnderneath, we use IPFS, but increasingly that's a detail that we don't think\nmost users of our service should have to care about. It's a dependency, just\nlike using MySQL or Redis.\n\nOf course, if you do  know what IPFS, great! We want to make it as easy to use\nas any existing Web2 component, while having capabilities at the protocol level\n– like file de-duplication, a global CDN, peer-to-peer sync, immutability, and\noffline support, to name a few– that let us empower all developers to build new\nand interesting tools. \n\nFission Drive is the app that we're building to showcase what the entire Fission\nstack can do, hosted on our own infrastructure. \n\nSteven @icidasset [https://twitter.com/icidasset]  joined the team in December\nand has been full time since January. He designed and built Fission Drive, as\nwell as our slick new home page [https://fission.codes], which is also now\nrunning on Fission. Next up for Steven is building out web-based passwordless\nlogin for Drive, as well as the TypeScript libraries that will let all\ndevelopers build apps like this.\n\nDrive has a few features to play with, like image previews and support for dark\nmode. We'll keep the guide docs updated [https://guide.fission.codes/drive]  as\nwe add features.\n\nFission Drive in Dark Mode, with an image previewThis preview release supports\nbrowsing any public IPFS hash, not just those on Fission. You can use this\nexample hash QmbCLefkFuXbhHBWSW7PWmJzBL7W7e8zm41HK4DGJ1RDwV  to see it in action\nat drive.fission.codes [https://drive.fission.codes].\n\nWant to add your own files? Follow the install instructions for the Fission CLI\n[https://guide.fission.codes/apps/installation]  to easily upload using fission\nup.\n\nYou can subscribe to keep up to date with Fission Drive and other product\nupdates\n[https://5d04d668.sibforms.com/serve/MUIEAD0fi3_BJE-4eieeuK6_0_XZaOPiu1_nfh56jvP1pV9uWy9OLxWLrHtjC148osZF2vcRb0XAymSdzFxhVD7XgvvODjbrp5ClBvQLmY70hyvU1JKu7ucoOP5KFJVRcfNgYN-3qvVppxg72KGyYZlWAJr2IkO7Ae9CIhnjpufaP7npZGPrBFzpmyEaKKLGYyqu0dnQIobGLAMM]\n.","html":"<p>We're pleased to present the Preview release of <strong>Fission Drive</strong>, the web native file system browser that we're including as a base component of the Fission stack.</p><p>We've been hosting files, static websites, and client-side apps on Fission since we launched our CLI tool in October of 2019.</p><p>Underneath, we use IPFS, but increasingly that's a detail that we don't think most users of our service should have to care about. It's a dependency, just like using MySQL or Redis.</p><p>Of course, if you <strong>do</strong> know what IPFS, great! We want to make it as easy to use as any existing Web2 component, while having capabilities at the protocol level – like file de-duplication, a global CDN, peer-to-peer sync, immutability, and offline support, to name a few– that let us empower all developers to build new and interesting tools. </p><p>Fission Drive is the app that we're building to showcase what the entire Fission stack can do, hosted on our own infrastructure. </p><p><a href=\"https://twitter.com/icidasset\">Steven @icidasset</a> joined the team in December and has been full time since January. He designed and built Fission Drive, as well as our <a href=\"https://fission.codes\">slick new home page</a>, which is also now running on Fission. Next up for Steven is building out web-based passwordless login for Drive, as well as the TypeScript libraries that will let all developers build apps like this.</p><p>Drive has a few features to play with, like image previews and support for dark mode. We'll keep the <a href=\"https://guide.fission.codes/drive\">guide docs updated</a> as we add features.</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://s3.fission.codes/2020/02/fission-drive-dark-mode.png\" class=\"kg-image\"><figcaption>Fission Drive in Dark Mode, with an image preview</figcaption></figure><!--kg-card-end: image--><p>This preview release supports browsing any public IPFS hash, not just those on Fission. You can use this example hash <code>QmbCLefkFuXbhHBWSW7PWmJzBL7W7e8zm41HK4DGJ1RDwV</code> to see it in action at <a href=\"https://drive.fission.codes\">drive.fission.codes</a>.</p><p>Want to add your own files? Follow the <a href=\"https://guide.fission.codes/apps/installation\">install instructions for the Fission CLI</a> to easily upload using <code>fission up</code>.</p><p>You can <a href=\"https://5d04d668.sibforms.com/serve/MUIEAD0fi3_BJE-4eieeuK6_0_XZaOPiu1_nfh56jvP1pV9uWy9OLxWLrHtjC148osZF2vcRb0XAymSdzFxhVD7XgvvODjbrp5ClBvQLmY70hyvU1JKu7ucoOP5KFJVRcfNgYN-3qvVppxg72KGyYZlWAJr2IkO7Ae9CIhnjpufaP7npZGPrBFzpmyEaKKLGYyqu0dnQIobGLAMM\">subscribe to keep up to date with Fission Drive and other product updates</a>.</p>","url":"https://blog.fission.codes/fission-drive-preview/","canonical_url":null,"uuid":"ea8c3e36-1184-4679-82d7-1224e7bc4729","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5e17a981f14aa0001e823397","reading_time":null}},{"node":{"id":"Ghost__Post__5df7baaf6da96c001e323622","title":"IPFS Storage Adapter for Ghost Blog with Heroku Deploy","slug":"ipfs-storage-adapter-for-ghost-blog-heroku-deploy","featured":true,"feature_image":"https://s3.fission.codes/2019/12/typewriter-ghost-ipfs-heroku-sidebyside.jpg","excerpt":"We wrote an IPFS Storage Adapter for the Ghost blogging platform, and have packaged it as a one-click deploy to Heroku.","custom_excerpt":"We wrote an IPFS Storage Adapter for the Ghost blogging platform, and have packaged it as a one-click deploy to Heroku.","created_at_pretty":"16 December, 2019","published_at_pretty":"20 December, 2019","updated_at_pretty":"23 January, 2020","created_at":"2019-12-16T09:11:11.000-08:00","published_at":"2019-12-19T16:51:05.000-08:00","updated_at":"2020-01-22T17:42:33.000-08:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"}],"primary_author":{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"},"primary_tag":{"name":"IPFS","slug":"ipfs","description":"InterPlanetary File System","feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"IPFS","slug":"ipfs","description":"InterPlanetary File System","feature_image":null,"meta_description":null,"meta_title":null},{"name":"Ghost","slug":"ghost-tag","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Heroku","slug":"heroku","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"NodeJS","slug":"nodejs","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"Back in May, as part of putting the Fission blog on Ghost, I packaged it up to\nbe a one-click deploy on Heroku\n[https://blog.fission.codes/ghost2-blog-on-heroku/]. We've gone one step further\nand gotten an IPFS Storage Adapter completed, and upgraded to Ghost v3.x.\n\nThis one-click deploy is possible because our IPFS Heroku Add-on is in beta\n[https://elements.heroku.com/addons/interplanetary-fission]! 🙌 🎉\n\nOur IPFS Heroku Add-on\n[https://elements.heroku.com/addons/interplanetary-fission]  is in beta with a\nfree \"test\" plan.This means you can package up apps to be deployed on Heroku\nthat automatically add our add-on. This provisions you a username and API key\nand your app can use our Web API to read and write to IPFS, manage DNS, and\nanything else accessible through our API.\n\nCheck the Github repo for more details\n[https://github.com/fission-suite/heroku-ipfs-ghost], or go ahead and deploy a\nnew Ghost 3 blog here:\n\n \n[https://heroku.com/deploy?template=https://github.com/fission-suite/heroku-ipfs-ghost]\n\nTo complete the Ghost deploy, the only configuration you'll need to do is to set\nthe public URL for your blog – e.g. https://boris-ghost-test1.herokuapp.com.\n\nWe've set the IPFS gateway to use ours by default, but you can put in any\ngateway you like. Images are included from this gateway, but of course using the\n IPFS Companion extension [https://github.com/ipfs-shipyard/ipfs-companion] \nmeans you can serve the images from your local machine.\n\nGo ahead and setup your first user, create a new post, and add an image – voila!\nInterplanetary Ghost Blogging! Here's my sample post\n[https://boris-ghost-test1.herokuapp.com/i-am-testing-ipfs/].\n\n\n--------------------------------------------------------------------------------\n\nWe're working on adding IPFS support for basic file uploads to a number of other\nplatforms. This is a first step in getting more content natively available in\nIPFS. Imagine managing your blog's media assets or a gallery page from your\ndesktop, being able to login to any system and have all your photos and files\navailable for you there.\n\nJoin our App Ideas forum [https://talk.fission.codes/c/app-ideas]  to suggest\nother things you'd like to see. Thanks to Mike Taylor [https://mktlr.com]  \n@mktlrwho [https://twitter.com/MKTLRwho]  for working on this with us!","html":"<p>Back in May, as part of putting the Fission blog on Ghost, I <a href=\"https://blog.fission.codes/ghost2-blog-on-heroku/\">packaged it up to be a one-click deploy on Heroku</a>. We've gone one step further and gotten an IPFS Storage Adapter completed, and upgraded to Ghost v3.x.</p><p>This one-click deploy is possible because our <a href=\"https://elements.heroku.com/addons/interplanetary-fission\">IPFS Heroku Add-on is in beta</a>! 🙌 🎉</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://s3.fission.codes/2019/12/heroku-add-on.png\" class=\"kg-image\"><figcaption>Our <a href=\"https://elements.heroku.com/addons/interplanetary-fission\">IPFS Heroku Add-on</a> is in beta with a free \"test\" plan.</figcaption></figure><!--kg-card-end: image--><p>This means you can package up apps to be deployed on Heroku that automatically add our add-on. This provisions you a username and API key and your app can use our Web API to read and write to IPFS, manage DNS, and anything else accessible through our API.</p><p>Check the <a href=\"https://github.com/fission-suite/heroku-ipfs-ghost\">Github repo for more details</a>, or go ahead and deploy a new Ghost 3 blog here:</p><!--kg-card-begin: markdown--><p><a href=\"https://heroku.com/deploy?template=https://github.com/fission-suite/heroku-ipfs-ghost\"><img src=\"https://www.herokucdn.com/deploy/button.svg\" alt=\"Deploy\"></a></p>\n<!--kg-card-end: markdown--><p>To complete the Ghost deploy, the only configuration you'll need to do is to set the public URL for your blog – e.g. <code>https://boris-ghost-test1.herokuapp.com</code>.</p><p>We've set the IPFS gateway to use ours by default, but you can put in any gateway you like. Images are included from this gateway, but of course using the <a href=\"https://github.com/ipfs-shipyard/ipfs-companion\">IPFS Companion extension</a> means you can serve the images from your local machine.</p><p>Go ahead and setup your first user, create a new post, and add an image – voila! Interplanetary Ghost Blogging! <a href=\"https://boris-ghost-test1.herokuapp.com/i-am-testing-ipfs/\">Here's my sample post</a>.</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p>We're working on adding IPFS support for basic file uploads to a number of other platforms. This is a first step in getting more content natively available in IPFS. Imagine managing your blog's media assets or a gallery page from your desktop, being able to login to any system and have all your photos and files available for you there.</p><p><a href=\"https://talk.fission.codes/c/app-ideas\">Join our App Ideas forum</a> to suggest other things you'd like to see. Thanks to <a href=\"https://mktlr.com\">Mike Taylor</a> <a href=\"https://twitter.com/MKTLRwho\">@mktlrwho</a> for working on this with us!</p>","url":"https://blog.fission.codes/ipfs-storage-adapter-for-ghost-blog-heroku-deploy/","canonical_url":null,"uuid":"c4d7ca0a-9ccc-4ef6-a2d7-1025c1a681e9","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5df7baaf6da96c001e323622","reading_time":null}},{"node":{"id":"Ghost__Post__5dc7cad72c7d24001ef7ff16","title":"Exporting your Facebook photos to Fission","slug":"exporting-your-facebook-photos-to-fission","featured":false,"feature_image":"https://images.unsplash.com/photo-1522159698025-071104a1ddbd?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","excerpt":"A quick how-to on getting the Facebook export of your photos and videos, and then hosting them on Fission.","custom_excerpt":"A quick how-to on getting the Facebook export of your photos and videos, and then hosting them on Fission.","created_at_pretty":"10 November, 2019","published_at_pretty":"10 November, 2019","updated_at_pretty":"10 November, 2019","created_at":"2019-11-10T00:31:19.000-08:00","published_at":"2019-11-10T01:01:10.000-08:00","updated_at":"2019-11-10T01:01:10.000-08:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"}],"primary_author":{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"},"primary_tag":{"name":"How To","slug":"how-to","description":null,"feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"How To","slug":"how-to","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Facebook","slug":"facebook","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"photos","slug":"photos","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"videos","slug":"videos","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"IPFS","slug":"ipfs","description":"InterPlanetary File System","feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"Facebook has a fairly extensive data export system built in. I decided to export\nmy photos and videos and put them up on Fission.\n\nFor now, this is a manual process and involves some command line usage. I'll\nwrite this up as an App Idea in our forum\n[https://talk.fission.codes/c/app-ideas]  and see if we can spend some time\nmaking this \"one-click\".\n\n> Please make that one click for me dude\n\n— Jamie Burke (@jamie247) November 9, 2019\n[https://twitter.com/jamie247/status/1193083841826770944?ref_src=twsrc%5Etfw]\nRead the Facebook help article on Accessing & Downloading Your Information\n[https://www.facebook.com/help/1701730696756992/]  for instructions on how to\nnavigate to the right section of your Facebook account.\n\nOn a desktop browser, it should be under the triangle in the upper right hand\ncorner, then Settings, then Your Facebook Information, then Download Your\nInformation.\n\nI don't upload much to Facebook and only cross-post my Instagram photos (which\nare cross-posted to my personal blog), so I clicked Deselect All  (says Select\nAll  in the screenshot above), and only selected Photos and Videos. I also set\nMedia Quality to \"High\" (although some people still report that these are still\nnot as large as the originals, which may only be accessible through the API).\n\nYou can experiment with including other items. But, be aware that because there\naren't any permissions, you may be sharing information you don't want to if you\npublish the files. Same goes for the photos. I have posted most things on\nFacebook the assumption that they are \"public\".\n\nClick the Create File  button and go make a coffee. Facebook will notify when\nyour download is ready.\n\nJust over 13 years of Facebook.To download, you'll need to click on the Download  button and enter your\nFacebook password. You now have a zip file with browse-able HTML files and your\nphoto and video files.\n\nPutting your files online with Fission\nYou'll need to type a few commands into the command line Terminal on your\nmachine, but everything should just work if you copy-paste.\n\nInstall the IPFS Desktop [https://github.com/ipfs-shipyard/ipfs-desktop#install] \n and run it. You've got a graphical interface to explore your local IPFS server,\nwhich is running in the background.\n\nOn Mac, make sure you've got homebrew installed [https://brew.sh], then open the\nTerminal app and install the Fission tools using these commands:\n\nbrew tap fission-suite/fission\nbrew install fission-cli\n\nYou can find extended installation instructions in our Fission Guide\n[https://guide.fission.codes/installation], and I expect our friends running\nLinux will have no problem.\n\nNow, you're going to register for Fission.\n\nfission register\n\nYour username will be your subdomain, e.g. boris.fission.name. Pick a password\nand enter an email address. We are adding support for custom domain names, stay\ntuned!\n\nNow, you've got a zip file in your Downloads folder from Facebook, called\nsomething like \"facebook-YOURNAME.zip\". Unzip it and you'll have a\n\"facebook-YOURNAME\" folder.\n\nBack to the terminal! This is the last step!\n\nThe fission up  command is going to add all your files to IPFS, through your\nlocal IPFS Desktop. Then, Fission's server will get sent the hash that\nrepresents the folder, we'll use IPFS to keep a copy of all your files, and\nupdate DNS of your subdomain.\n\nThe following command will be correct if you're on a Mac and downloaded to the\nstandard downloads folder. Otherwise, just enter the path to where the unzipped\nFacebook folder is:\n\nfission up ~/Downloads/facebook-YOURNAME/\n\nI only had about 200MB of files, so this happened pretty quickly. Visit\nYOURNAME.fission.name in your browser and you should see something like this:\n\nYour Facebook photos are online and browse-able! You can see mine at \nboris.fission.name/Photos/facebook [https://boris.fission.name/Photos/facebook/] \n (I put mine in a subfolder, because I already host a bunch of public files on\nmy Fission site).\n\nTechnically the files are being served directly from your computer, when you're\nonline and have IPFS Desktop running. The Fission service is also serving those\nfiles, and stays online when you're offline. As a next step, you can explore\ninstalling the IPFS Companion browser extension\n[https://github.com/ipfs-shipyard/ipfs-companion]  which will access IPFS\ncontent natively.\n\nJoin us in our Discord chat forum [https://fission.codes/discord]  if you have\nquestions or just come say \"hi\"!","html":"<p>Facebook has a fairly extensive data export system built in. I decided to export my photos and videos and put them up on Fission.</p><p>For now, this is a manual process and involves some command line usage. I'll write this up as an <a href=\"https://talk.fission.codes/c/app-ideas\">App Idea in our forum</a> and see if we can spend some time making this \"one-click\".</p><!--kg-card-begin: embed--><figure class=\"kg-card kg-embed-card\"><blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">Please make that one click for me dude</p>&mdash; Jamie Burke (@jamie247) <a href=\"https://twitter.com/jamie247/status/1193083841826770944?ref_src=twsrc%5Etfw\">November 9, 2019</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n</figure><!--kg-card-end: embed--><p>Read the Facebook help article on <a href=\"https://www.facebook.com/help/1701730696756992/\">Accessing &amp; Downloading Your Information</a> for instructions on how to navigate to the right section of your Facebook account.</p><p>On a desktop browser, it should be under the triangle in the upper right hand corner, then <em>Settings</em>, then <em>Your Facebook Information</em>, then <em>Download Your Information</em>.</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://s3.fission.codes/2019/11/Screenshot-2019-11-09-at-8.29.37-AM-1.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><p>I don't upload much to Facebook and only cross-post my Instagram photos (which are cross-posted to my personal blog), so I clicked <em>Deselect All</em> (says <em>Select All</em> in the screenshot above), and only selected Photos and Videos. I also set Media Quality to \"High\" (although some people still report that these are still not as large as the originals, which may only be accessible through the API).</p><p>You can experiment with including other items. But, be aware that because there aren't any permissions, you may be sharing information you don't want to if you publish the files. Same goes for the photos. I have posted most things on Facebook the assumption that they are \"public\".</p><p>Click the <em>Create File</em> button and go make a coffee. Facebook will notify when your download is ready.</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://s3.fission.codes/2019/11/Screenshot-2019-11-09-at-8.38.38-AM-1.png\" class=\"kg-image\"><figcaption>Just over 13 years of Facebook.</figcaption></figure><!--kg-card-end: image--><p>To download, you'll need to click on the <em>Download</em> button and enter your Facebook password. You now have a zip file with browse-able HTML files and your photo and video files.</p><h2 id=\"putting-your-files-online-with-fission\">Putting your files online with Fission</h2><p>You'll need to type a few commands into the command line Terminal on your machine, but everything should just work if you copy-paste.</p><p><a href=\"https://github.com/ipfs-shipyard/ipfs-desktop#install\">Install the IPFS Desktop</a> and run it. You've got a graphical interface to explore your local IPFS server, which is running in the background.</p><p>On Mac, make sure you've got <a href=\"https://brew.sh\">homebrew installed</a>, then open the Terminal app and install the Fission tools using these commands:</p><!--kg-card-begin: code--><pre><code class=\"language-bash\">brew tap fission-suite/fission\nbrew install fission-cli</code></pre><!--kg-card-end: code--><p>You can find extended <a href=\"https://guide.fission.codes/installation\">installation instructions in our Fission Guide</a>, and I expect our friends running Linux will have no problem.</p><p>Now, you're going to register for Fission.</p><!--kg-card-begin: code--><pre><code class=\"language-bash\">fission register</code></pre><!--kg-card-end: code--><p>Your username will be your subdomain, e.g. <code>boris.fission.name</code>. Pick a password and enter an email address. We are adding support for custom domain names, stay tuned!</p><p>Now, you've got a zip file in your Downloads folder from Facebook, called something like \"facebook-YOURNAME.zip\". Unzip it and you'll have a \"facebook-YOURNAME\" folder.</p><p>Back to the terminal! This is the last step!</p><p>The <code>fission up</code> command is going to add all your files to IPFS, through your local IPFS Desktop. Then, Fission's server will get sent the hash that represents the folder, we'll use IPFS to keep a copy of all your files, and update DNS of your subdomain.</p><p>The following command will be correct if you're on a Mac and downloaded to the standard downloads folder. Otherwise, just enter the path to where the unzipped Facebook folder is:</p><!--kg-card-begin: code--><pre><code class=\"language-bash\">fission up ~/Downloads/facebook-YOURNAME/</code></pre><!--kg-card-end: code--><p>I only had about 200MB of files, so this happened pretty quickly. Visit YOURNAME.fission.name in your browser and you should see something like this:</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://s3.fission.codes/2019/11/Screenshot-2019-11-09-at-9.33.57-AM-1.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><p>Your Facebook photos are online and browse-able! You can see mine at <a href=\"https://boris.fission.name/Photos/facebook/\">boris.fission.name/Photos/facebook</a> (I put mine in a subfolder, because I already host a bunch of public files on my Fission site).</p><p>Technically the files are being served directly from your computer, when you're online and have IPFS Desktop running. The Fission service is also serving those files, and stays online when you're offline. As a next step, you can explore installing the <a href=\"https://github.com/ipfs-shipyard/ipfs-companion\">IPFS Companion browser extension</a> which will access IPFS content natively.</p><p>Join us in our <a href=\"https://fission.codes/discord\">Discord chat forum</a> if you have questions or just come say \"hi\"!</p>","url":"https://blog.fission.codes/exporting-your-facebook-photos-to-fission/","canonical_url":null,"uuid":"74f42f87-7308-45b9-8e73-7b42dc192d6e","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5dc7cad72c7d24001ef7ff16","reading_time":null}}]}},"pageContext":{"slug":"boris","pageNumber":0,"humanPageNumber":1,"skip":0,"limit":12,"numberOfPages":3,"previousPagePath":"","nextPagePath":"/author/boris/page/2"}}