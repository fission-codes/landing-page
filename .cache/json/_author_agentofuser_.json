{"data":{"ghostAuthor":{"slug":"agentofuser","name":"Helder S Ribeiro","bio":"Deleting the chasm between using and programming computers.","cover_image":null,"profile_image":"https://s3.fission.codes/2021/02/2020-1024px.jpg","location":"Campo Grande, MS, Brazil","website":"https://agentofuser.com","twitter":"@agentofuser","facebook":null},"allGhostPost":{"edges":[{"node":{"id":"Ghost__Post__60390451d064ac001e8042de","title":"Zero-Config Fission-Powered Ghost Blog","slug":"fission-powered-ghost-blog-starter","featured":false,"feature_image":"https://s3.fission.codes/2021/03/dawit-sCKjl0AyO-4-unsplash.jpg","localImage":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","placeholder":{"fallback":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='2000'%20height='1236'%20viewBox='0%200%202000%201236'%20preserveAspectRatio='none'%3e%3cpath%20d='M0%20618v618h2001V0H0v618m587-131v112l3-2c3-4%204-4%203-1v5l-1%202-1%202%203-1c1-1%203-2%204-1v-1c-1-1%200-4%202-7%202-5%203-10%201-13-2-2%200-16%204-20%200-1%205%205%205%207l2%201c2-1%202%200%202%202v8l3-3%205-5-1%205c0%202-1%206-3%208-2%204-3%207-1%206v3c-2%202-3%208-1%208l2-2c3-2%204-3%203%200l-1%205-1%203v3c1%201%201%202-1%204-3%203-4%205-2%204h1c1%201%202%200%2011-10l5-4c0%201-3%2010-5%2012v2c3%200%202%202-2%204-3%202-4%203-3%204%201%200%200%202-3%204-2%202-4%204-3%205l-1%202c-2%200-3%202-1%202l3-2c3-3%206-4%206-2l-5%204-4%205-1%201-3%202c-1%201-1%201%202%201%204-1%204%200%200%203l-3%203c1%201-1%202-5%203-3%201-2%203%201%203%204-1%204%201-1%202l-5%203-13%203a8219%208219%200%2000-2%20234c0%201%20623%202%20735%201h108v-5a9743%209743%200%2001-2-163h-7l-6%201%206-2c8-1%2010-2%209-4-1-1-8%200-11%202l-5%202c-2%200-3%200-2%201%202%201-8%203-12%202-6-1-4-3%204-4%209-2%2025-7%2025-9%201-2%200-2-5-1l-7%203c-3%200-4%200-3%201s-1%201-7%201l-7%201c1%202-5%203-15%205-7%201-7%201-4%202%205%202%202%203-3%202-4-1-4-1-2-2l1-2%202-1%202-1%205-2%205-1%207-3%209-5%206-2%203-2%202-1%204-2%205-2v-1l-1-2%202%201c1%201%201%200%201-4v-6l-4%201-7%203-6%201-3%202c0%201-3%202-3%200-1-1-7%200-7%201l2%201%202%201h-2c-2%200-2%200%200%201v1l-1%201c1%201%2010-1%2010-2l4-2%206-1%203-1c2%201-3%203-8%204l-3%201c1%201-5%203-10%203l-3%202c0%202-21%207-21%204l3-1%2017-9-8%202-2%201-6%201h-8l7-3%208-3%203-1%202-1-2-1v-1l3-1%202-1c0-1%208-4%2011-4%202%200%202%200%201-1-2-1-2-2-1-2%201-1-1-1-3-1-7%201-10%203-5%203l-3%201a210%20210%200%2000-13%202l1%201c1%201%201%201-1%201l-5-1c-3%200-2-1%208-4%2016-6%2016-6%2013-6l-6%202-6%201c-2%200-2%200%200-1%203-1%203-2%200-3-4-1-5-1-2-1l3-1%204-1%204-1-5-1c-6%201-6%201%206-4a183%20183%200%200021-10l5-4c2-1%203-3%204-2l1-4v-4l-4%202c-4%202-13%205-14%204l4-2c3-1%207-2%209-4l5-2v-6l-1-5-1%201-1%201-6%202-7%203c-3%200-3%202%200%202l-3%202-6%201h-2l2-1c1-1%201-1-1-1h-2l23-10%205-2v-11l-3%201c-6%201-12%203-11%204s-8%204-14%206l-5%202-1%201-10%205%2010-3%2011-4c2%201%202%201%200%202l-10%204-9%204v1c1%201-6%204-8%204l-7%203%201%201%204-2%201%201c-1%202-7%205-13%207-3%201-3%201-2%202%201%200-1%202-7%203-12%204-13%205-8%204a8294%208294%200%200150-15v1c-2%200-16%206-13%206l-5%203-7%202-8%203c-3%201-3%201%203%201l7-2%206-1c5-1%202%201-6%203l-6%202-4%201c-3%200-3%200-1-1v-1l-3%201-15%206-4%201%204-1c11-1%2012-1%204%201l-9%204-6%201-5%202-4%202-4%202-5%201c-2%200-3%200-2%201%202%201%200%202-6%202l-5%202-3%201-7%202h-8c-3-1-2-2%206-4%205-1%207-3%203-3-3%200-5-1-4-3l2-2%204-1c1-1-2-1-7%201l-2-1c0-1%205-3%209-3h5l-4-2c-4-1-4-1%200-1l2-1%2015-5%208-4%203-2%203-1%202-1%202-1%203-1%202-2c-1%200-16%204-19%206l-8%202-4%201c2%201%200%203-4%203l-2%201-6%202-6%203-3%202-2%201c-1%202-7%203-12%203l-7%202c-5%202-7%203-7%201l4-2c3-1%204-1%203-2s4-4%209-5c5%200%204-2-1-1l-4-1%203-1c2%200%206-5%205-6l3-1%203-1h-6c-4%200-6%200-4-1h2c2%201%2018-6%2016-7l4-2c8-2%205-4-4-2-6%201-10%201-4-1l4-1c1-2-3-2-6-1l-10%203-8%203-5%201h-3l1-1c-3%200%205-3%209-4%207-1%2013-3%2013-4l-4-1c-6%201-5%200%202-3l9-6%206-3c3%200%203%200%201-1-1-1-1-1%201-1l-1-1c-2-1-2-1-1-2l1-1c0-1%202-3%205-4%209-4%2015-7%2018-10l5-2%202-2%204-3%205-5%203-3%204-3%205-4%204-3%204-2v-3l2-3c0-2%201-3%202-3l1-1%203-4%205-6c7-8%2025-22%2027-21l-1%204v3l-2%204c-4%205-3%205%202%202s5-2%201%203c-3%202-4%204-3%204s0%202-2%203c-4%202-5%204-3%204l4-2%2014-8-4%205-4%205c1%201-11%209-14%2010l-2%202%209-3%208-4-17%2011c-5%203-7%204-5%204%201%201%201%201-1%202l-5%202-3%201-3%201-3%203-3%203a93%2093%200%200021-10l18-9c9-8%2021-15%2022-14l-4%205-3%204c2%200%200%202-7%206-6%204-5%205%201%202l5-2-2%202-5%204-3%202-6%203-7%202%201%201c2%200%201%201-4%204a53%2053%200%2000-11%206c-3%201-3%201-2%202l5-2%2011-5a235%20235%200%200025-11l-2%202-3%202-8%205-7%204c1%200-5%203-8%203-2%200-2%200-1%201s-6%205-9%205l-1%201-4%202c-5%202-5%203-1%202l3%201-3%201-12%206h3c4-1%202%200-2%202l-6%204-4%202-4%201%202%201c3-1%202%200-1%201-1%201-2%201-1%202l10-3%2010-4v-1l1-2%202-1%201-1a156%20156%200%200030-15%20106%20106%200%200028-20l3-2-1-88v-88l-61-1-419-2H587v57m285%2038c-4%205-9%2020-8%2024v7c0%205%201%206%202%206%202%201%202%201%201%202v6c0%203%200%203%203%203s3%200%202%202l-3%201v1h3c3%200%204%201%202%203-1%201-1%201%202%201%203-1%203-1%203%203l1%203c2%201%202%202-1%204l-2%204-2%204v3c1%202%201%202-1%204-3%203-4%2010-2%2011%202%200%202%203-1%206v5l-2%203-1%204-1%202-4%206c-4%205-6%209-4%209%203%200%202%203%200%203l-3%202%203%201%202%203%202%202h-4c-4%200-5%200-4%201l4%201c3%200%202%202-1%203-6%202-4%204%203%204l6%201h2l-3%202h2l4%201-2%201c-4%200-6%202-4%203%201%201%200%202-3%205-5%204-8%206-16%208l-6%203%202%201h10v-1c-1-1%200-1%202-2%205-2%208-3%206-1-1%202-1%204%201%204l2%201c0%202%203%202%206%200h3l1-1%203-2%2019-4-2%202c-2%201-2%201%200%202v1l-8%203-8%204c-5%201-3%202%202%202l4%201-4%201-5%201c-1%201%200%201%204%201h5c0%201-2%202-5%202l-2%201-7%203h-6c-5%202-7%203-4%205%202%201%205%200%204-1l7-3h15c1%200-3%203-8%204-2%200-3%201-3%202h11l8-2c2%200-3%203-6%203l-2%201%201%201c2%200%202%200%202%202l-5%201c-8%201-10%203-3%203%202%200%204%200%203%201l-1%202-3%202c-2%200-3%201-3%202l-4%203c-3%201-4%203-4%204l-3%202c-3%202-3%202%201%204l2%202h7l10-2%2010%201-3%201-2%201c1%201%203%202%208%202l5%201c-7%200-7%202%200%202h6l-4%202-12%202c-9%201-13%202-7%202%205%200%206%202%203%203-2%201-1%201%205%201%207%200%207%200%204%201-4%202-1%205%205%204%204%200%204%200%203%202l-6%201c-2%200-3%200-3%202l-2%201h-4c-1%201%200%201%203%201%203%201%205%201%207-1%203-2%207-1%205%201v2l-4%201h-2c2%201%203%203%200%203h-3c-1%201%202%201%2024-1%209%200%2016-2%2024-5h3c2%202%200%203-5%203-3%200-3%200-2%201%202%201%200%205-2%205l-3%201-5%202-11%203-12%203-5%201%204%201c1-1%2010%200%2016%202l3-1-3-1-3-1%2010-1c13%201%2012%201%2011%202l11-1%2015-5-8%201c-8%201-9%201-7-2h5c5%200%2011-1%209-2s-1-1%202-1l6-1%203-1h4l-3%201h-3l2%202%203%202h-9c-2%201%201%202%207%202s6%201%200%201c-8%201-6%203%203%203l9%201-11%201h-12c-2-1-6-1-11%201-4%201-4%204-1%203l8-2c2%200%204%200%203%201l-3%201-4%201-3%201a95%2095%200%200039-4l10-1%2013-3%205-1-5%201a4584%204584%200%20011-3l6-1%207-3c3-2%206-4%2011-5%204-2%201-3-4-2s-5%200-1-2l5-2c2-2%2010-4%2013-3l2-1c-1-1%200-1%203-1%207%200%2012-1%209-2-1-1-1-1%203-2h6l1-1c-1-2%200-2%201-2h8l5-2-4-1-3-1h4l4%201c0%202%204%201%205-1l3-2%209-3%206-2-5%201c-6%200-5%200%206-4l6-3c-3%200%204-4%2011-6l6-3%203-1%203-1c1-2-6-1-7%201-2%201-12%203-12%201%200-1%202-2%209-4a91%2091%200%200019-8l2-1%203-2c4-1%2014-5%2012-6l-3%201-4%201c-2%200-2%200%202-2l5-3%203-2%201-1%202-2%204-3%203-2%201-1c0-1-2-1-9%202l-4%202-6%203c-7%204-22%2011-36%2015-11%203-14%204-7%200l4-2%202-1%205-2%206-1c1%200%202%200%201-1l10-5%209-4%205-3h-4c-5%201-4%200%202-3l5-3%205-5c7-5%206-6-3-2l-7%202%201-1%201-1c-1-1%201-3%204-5%205-4%205-5%200-3s-5%201%200-3c3-1%204-3%203-3l1-3c3-5%202-5-5-1a120%20120%200%2000-34%2023l-3%201-2%202v2c2%203%200%204-9%208l-9%205-2%202-4%202c-1%201-6%203-10%203-8%202-16%205-12%205l5-1c3-2%204-2%204%200l-4%202-3%202-19%207-5%203-3%201h-2l2%202%203%201h-8l3%201c2%200%202%200-2%203l-5%202h13l-2%201c-2%200-7%203-5%203l-8%202c-9%203-11%204-7%205%202%201%202%201-2%201l-7%204-6%203c-3%200-4%201-2%202%203%201-19%206-27%206-5%200-6%201-7%203%200%202-1%202-3%201h-5c-3%201-4%201-3-1l-6-1h-8l11-1h10c-1-1%206-3%2018-4%209-1%2012-2%2010-3s-1-2%203-2l4-1%204-2h5l-4-1-3-1h3l4-2%204-1c2%200%203%200%202-1-2-1%201-3%206-4%206-2%207-5%202-5-2%200-3%200-2%201l-3%201-6%203c-2%201-3%202-6%201l-3-1%206-2%205-2%205-2%203-2h-5l-4%201%204-2%206-2v-3l7-3c5-2%205-2%203-3h-4l-4%201c-3%200%206-4%2010-4l7-2h-3c-3%200-3%200-2-1l5-1%204-1%207-3%205-3%202-1%209-3%204-2c6-1%2015-5%2015-6%200-2-3-1-7%201l-8%203-16%205-5%201h-2l3-1%203-2%203-1c7-2%2011-4%209-5s-1-2%205-3c7-2%2020-8%2019-9l-5%202c-7%202-7%201%201-3l8-5%204-5%204-4-14%206-3%201-5%203c-2%202-3%202-7%202l-8%201-4%201%205-2c8-4%2016-8%2013-8l-5%202h-3l3-1%207-4c3-2%203-2%202-3-2-1-2-1%200%200l3-1%204-5c5-5%204-5-7%200-7%203-9%203-4%200l3-3%205-5c5-3%206-5%201-3-4%202-4%201%200-2%203-3%204-4%202-4v-1c1%200%207-5%205-5v-2a428%20428%200%2001-44%2020c2%200%203-2%202-3l1-1%204-3%204-4c4-2%201-2-5%201-7%203-11%204-6%201l1-2h1l1-1%204-4c5-5%205-7%200-4s-5%201%200-3l4-4v-1c2%200%208-6%208-8h-3c-1-1-13%205-24%2013-6%204-7%203-1-3%203-3%204-4%202-4a842%20842%200%2000-4%200l5-4v-4c2%200%205-6%205-7l-12%206c-4%203-5%202-1-1l2-3h-2l2-2c4-4%206-8%204-8l4-3%207-4%203-1c2-1%202-1%200-2-1-1-1-1%202-3l3-2%202-3c2-1%203-3%201-3l-15%2012-2%202-4%202c-2%202-6%202-6%200v-4c0-3-1-3-7%202-4%202-7%204-8%203l-19%2011%202%201%205-2h4l-3%201c-7%203-9%204-6%205%201%201%201%201-1%202-2%200-3%201-3%202l-3%202-3%203c0%202%200%203-2%204l-3%202v2l-1%201-2%201-21%2010c-2%200-1-1%203-3l3-3c-1%200%201-3%203-3l2-1%204-4c4-3%204-4-1-2-6%203-6%202%200-2l3-5c-2%200-1-1%202-5%202-2%203-5%202-5s-21%2012-25%2016h-4l1-1%202-2%202-2%205-5-5%202c-4%201-5%201-3-1%202%200%202-1%201-1l4-3c3-2%203-3%202-3-2%200-1-1%202-5l4-5-14%207c-4%203-6%202-2-1s5-4%202-3l1-2%202-3%202-3c4-3%203-4-2-1-5%202-6%201-1-3%202-3%203-4%201-3l-2-1%201-1%201-3c-1-4-1-4-10%203a108%20108%200%2000-24%2024l-6%206-7%204c-5%201-10%205-8%205v2l-9%206-4%205-1%201-2%201c1%201-3%202-5%201l-1-1%202-2%205-4%202-3%201-3h1c0%201%201%201%201-1l4-3%205-3c1-1%201-1-2-1-4%201-5-1%200-3l5-4%203-2c2%200%2011-7%2010-7-2%200-1-1%202-5%208-7%206-9-3-2s-13%209-15%208v-1l2-1%201-1c0%201%202%200%203-2l4-3v-2l1-1h1c0-1%201-4%204-7%203-4%202-4-3-1s-5%202%200-3c3-5%203-5%201-4-2%200-2%200-1-1%202-3%203-10%201-9s-13%2010-16%2014l-9%205%202-3%201-2%201-3%203-3%202-3c2-2%200-3-3%200-3%201-4%200-2-1l2-3%205-4c5-4%205-5%200-2-5%202-5%201-1-2l4-4%203-4c3-1%204-2%202-2-3%201-3%200%201-3%202-1%203-3%202-3l4-4%204-5%203-4c4-6%201-5-5%202l-13%2012c-5%203-6%204-5%205%202%201%202%201-4%202-4%200-4%200-2-1l2-2c0-2%206-8%2010-11%205-4%204-5-1-2-6%204-6%203%200-2%203-2%205-5%205-6v-1l3-6-5%204c-4%204-7%205-4%202l1-3%201-2v-4c-1%201-2%200-2-3l-1-5c-1-1-6%204-10%2012-5%209-8%2013-10%2013l1-3c2-3%202-4-1-1-4%202-5%201-2-2l2-4%201-2%201-3c0-1-2%200-5%203-4%204-7%205-4%201%201-1%202-2%201-3l2-3c1-3%200-4-2-2-1%201-1%201-1-1%201-10-1-11-7-2-4%205-7%207-6%202%201-2%201-2-1-2-2%201-2%201-1-1v-6c0-3-1-2-4%201-2%202-5%203-3%201l-1-1-1-3c0-2%200-2-2-2l-4-2c-4-4-3-4-6%200m359%205c-5%205-6%208-5%2012%200%204%202%204%205%201l5-6c3-3%204-6%201-3-2%202-3%201-2-1v-4l-1-3-3%204m-531%2024c-3%207-4%2014-1%2023l3%2011c2%202%203%208%201%208l-5%2010-1%202-1%204-1%203v1l-3%207a301%20301%200%2000-7%2013c-3%204-3%204-2%208l2%204c2%200%201%202-1%202-2%201-3%203%200%204%201%200%202%200%203-2%201-1%201-1%201%202l-1%204-1%202c1%202-5%207-6%205v-2l2-2c3-1%203-4%200-5h-2l-1%201-2%202-1%201c-1%200-4%205-4%208l-2%202-7%204c-1%201-1%201%201%201l4-1%202-1%2013-6c3-2%204%200%201%203l-2%202h2l4-2%205-1c3%200%206-2%206-4s4-1%206%200c2%203-1%207-6%209l-4%203v3l5%203c3%203%205%203%2010%200l5-1%202-1%202-1c3%200%201%203-3%205-5%202-4%203%203%204%203%200%205%200%204-1-2%200%203-6%205-6l2-1v-1l2-1h-2l-5%201h-3l2-2%204-3%208-5%203-2%203-1h-3l-3-1%201-1c1%201%207-3%2012-8l1-1c2%200%206-5%206-6l3-3%202-2%202-1v-1h-3l-12%207-6%204-4%202c-3%200%201-5%209-11l5-5%203-4%202-3%201-1%201-1h-2l-1-1v-2l2-3c2-2%202-2%201-3-2-1%200-5%204-9l1-3-2%201-2%201c-1-1-5%202-12%208l-8%208c-3%203-4%203-4%201l1-3%201-2%202-3%202-3v-3c1-2%201-2-1-2-6%202-2-4%206-8l7-7%203-3c3-3%204-4%201-4-3%201-3-1%200-4l3-3%201-3c2-2%202-3%201-4l-1-2v-8l-3%203-4%206c0%203-3%209-4%2010l-3%204-6%207a242%20242%200%2000-14%2011v-7l3-4%202-4c3-3%209-12%207-12l-5%204c-5%204-5%204-5%201l1-2%203-5%202-5-1-3c0-7-2-9-4-4-3%206-6%209-7%209s-3-2-2-4l-1-1-1-4c0-6-2-7-4-4-1%202-3%203-3%201l-5-7-6-6-2%203m613%202c-5%204-10%2010-13%2016l-6%206-7%206-8%207c-3%202-5%204-2%204l5-2%205-1%206-4c12-7%2014-8%209-7-2%200-1-1%203-3l6-3%205-4c5-6%205-6-3-2-6%204-8%204-3%200l3-2%202-3c3-3%203-3%201-2-2%200-2%200-1-2%202-2%204-7%203-7l-5%203m-162%2017c-6%206-6%207-9%2013l-6%207-8%207-2%201v2l-3%202-3%202h3l9-3c4-2%205-4%203-4l2-3%204-3%201-1%202-1c3%200%205-2%204-3h-2l-3%201c-1-1%202-5%203-5%202%200%206-3%206-5l1-1%201-1c-1-1%200-2%201-3l2-7-6%205m-88%202c-7%206-10%2010-11%2014l-3%206a1028%201028%200%2000-28%2025l8-3c-1%200-1-1%201-1l2-1h1l2-1%207-4%204-2c3-2%206-5%203-4-5%202-5%202-3%200l4-2v-2l1-1c1%201%206%200%205-1l1-1%202-1%203-1c1-1%202-1%201-2v-1c1%201%2010-7%209-7l-4%201-12%207%204-3%204-4%203-4c3-3%203-3%201-2-2%200-3%200%200-2v-4c2-4%200-4-5%201m255%202l-23%2013c-12%206-15%208-12%208l6-2%205-3%203-1%204-2c7-2%2011-4%209-4l5-4c5-3%2014-10%2011-10l-8%205m-90%204c-7%205-12%2011-12%2014s1%204%203%202l2-1-3%204-3%204%207-3%202-1%2013-11-5%203c-6%203-7%202-3-3%204-3%204-4%202-4v-1l1-3c1-4%200-4-4%200m108%203c-6%203-10%208-9%209s0%201-2%201l-3%201-5%203-5%203-7%204c-13%206-12%209%202%204%206-2%206-2%201-1h-4l5-2%209-5c1-2%205-4%208-5%206-2%209-4%204-3-2%200-2%200%201-2%204-3%2011-9%209-9l-4%202m-128%2029l-1%201-5%203-7%205-3%203-1%201v1l-2%203h3c3%200%205-1%207-3l3-2%203-2v-2l2-3c3-3%204-6%202-6l-1%201m89%201l-4%203-7%204%201-2v-1l-7%204a512%20512%200%2001-25%2019l-3%202-5%203-4%204c-2%203-3%204%200%204l1-1%203-1%203-1c-1-2%200-2%201-2l2-1%206-2%206-3%203-1%202-1%202-1%204-2%2014-7c2-1%202-1%200-1l-7%202c-7%202-11%202-6%200l3-2%201-1%206-2%204-2-4%201c-4%200-4%200%202-3l7-4h1l12-6-5%202-5%201%201-1%201-1h-4m-647%205l-5%208c-2%204-12%2014-17%2019-7%205-8%205-3%207%201%201%201%201-2%202-3%202-4%203-1%202%205-1%2017-7%2016-8l2-1c2%200%202%200%201-1-2-1%201-2%205-1%202%200%202%200%201-1v-1h1c0%201%201%201%202-1l2-2%202-2%202-3-11%206h-5l1-1%207-7%201-1%205-5-2%201c-2%202-2%200-1-3l2-2%201-4c0-4%200-4-4-1m467%202l-4%202-8%209-9%209%204-1%204-2%202-1%203-2%205-4%204-3%201-2%204-1v-1c-4%200-4%200-3-2%202-3%201-3-3-1m-334%2025v3c-2%200-11%209-11%2011l-2%202-3%202c-2%203-9%207-12%208l-3%201%201%201%206-2%206-3%204-2%204-1%202-2c2%200%205-4%204-5%200-2%200-2%202-3%202%200%205-5%205-9%200-2-1-3-3-1m568%2014l-5%202h-3v1c2%201%203%200-15%207l-10%204h4l15-4%2015-6-1-1c-1-1-1-1%201-1l5-1c2-2%202-2%200-2l-6%201m-497%2017a237%20237%200%2001-8%208l-1%201c-1%200-1%203%201%203%206%201%2013-3%208-4-1-1-1-1%202-2l2-2%203-1h2v-1l1-2-3%201c-1%201-1%201-3-1s-2-2-4%200m501%2013l-12%205h-3l-6%201-2%201c5%200%202%202-5%204-11%202-13%203-11%204%201%201%201%201-1%201h-4c-1%202-11%204-15%203l-1%201h12c3-1%202%202-1%202l-10%204-4%201c-6%202-11%205-6%205%206%200%2024-4%2019-4v-1h6c3%200%203%200%202-1-2-2-2-2%201-2l8-2c7-4%209-5%2012-5l5-1%208-3%205-2-2-1-10%202%209-4c5-1%208-3%207-3-2%200%201-2%206-4l9-4c1-2-7%200-16%203m-73%207l-1%201a828%20828%200%2000-11%205l7%201h-3c-1%200-2%200-1%201v2c-2%202-1%201%207-1%205-2%207-3%206-4v-2c3%200%202-2%200-2h-1c0-2%200-2-3-1m78%2014c-10%205-13%207-10%207v1a136%20136%200%2000-11%205l-1%201h-6l-8%202-5%203c-2%202%204%202%209-1h4c2%201%209-1%2017-4l5-2%204-1h-5c-4%200-5%200-3-1l8-5%203-2c3%200%209-4%209-5s-1-1-10%202m-161%2018l-7%203-11%207-16%208a297%20297%200%2000-24%2010l-10%204c2%200%202%200%201%201-3%202%200%203%205%202l6-1h1l3-1%2010-2%2010-2%206-1h4v-1l7-3c7-3%2010-5%2010-6l-5%202-7%203-8%202-10%203-8%201h-2l9-3a1839%201839%200%200014-6c0-1%201-2%205-3%205-1%2018-7%2014-6l-7%201h-3l3-2c9-3%2012-5%2010-5s-1-1%202-3l5-4c0-1-1-1-7%202m-99%2024l-2%202v1l-3%201v-1c2-2%201-2-6-1-3%201-4%201-2%202%201%201%201%201-2%201-5%200-9%202-6%202l-7%202-9%203v2l1-1%204-1%204%201h6c1-1%200-1-2-1-4%200-4%200%204-3l9-2%201-1c0-2%202-3%202-1%201%201%205%200%209-2l4-1%203-2h-8m139%201l-9%204c-13%207-14%208-8%209%202%200%202%201-8%204v1h5l5-2c2%200%2015-5%2013-6l-6%201-5%201%201-1%2013-6%203-4c4-3%203-4-4-1m-103%2012l-9%202-3%201-3%203-6%202-3%202-6%202-6%203-6%202-5%202c1%201%201%201-1%201l-4%201-10%203-9%203h7c8%200%2021-3%2022-4l3-2%204-1%202%201h2l5-2c6-1%2015-4%2014-5h-5c-7%201-7%201-1-1l15-5%206-2%209-3%206-2c4-1-1-1-7%201l-9%201c5-3%203-5-2-3m-115%2040c1%201%200%202-5%202l-15%201c-8%201-9%201-7%203l8%202h5l-4-1-3-1%206-1c7%200%2022-3%2020-4l-3-1h-2'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e"},"images":{"fallback":{"src":"/static/b5f029adc1bcb24c53769b1e2df96730/246f8/dawit-sCKjl0AyO-4-unsplash.jpg","srcSet":"/static/b5f029adc1bcb24c53769b1e2df96730/b81be/dawit-sCKjl0AyO-4-unsplash.jpg 500w,\n/static/b5f029adc1bcb24c53769b1e2df96730/4ba71/dawit-sCKjl0AyO-4-unsplash.jpg 1000w,\n/static/b5f029adc1bcb24c53769b1e2df96730/246f8/dawit-sCKjl0AyO-4-unsplash.jpg 2000w","sizes":"(min-width: 2000px) 2000px, 100vw"},"sources":[{"srcSet":"/static/b5f029adc1bcb24c53769b1e2df96730/0af7a/dawit-sCKjl0AyO-4-unsplash.webp 500w,\n/static/b5f029adc1bcb24c53769b1e2df96730/03e67/dawit-sCKjl0AyO-4-unsplash.webp 1000w,\n/static/b5f029adc1bcb24c53769b1e2df96730/4e83c/dawit-sCKjl0AyO-4-unsplash.webp 2000w","type":"image/webp","sizes":"(min-width: 2000px) 2000px, 100vw"}]},"width":2000,"height":1236}}},"excerpt":"In five minutes, anyone can have a Ghost blog up and running, with media uploads hosted on IPFS thanks to Fission.","custom_excerpt":"In five minutes, anyone can have a Ghost blog up and running, with media uploads hosted on IPFS thanks to Fission.","created_at_pretty":"26 February, 2021","published_at_pretty":"08 March, 2021","updated_at_pretty":"08 March, 2021","created_at":"2021-02-26T06:23:13.000-08:00","published_at":"2021-03-08T09:09:17.000-08:00","updated_at":"2021-03-08T09:09:16.000-08:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Helder S Ribeiro","slug":"agentofuser","bio":"Deleting the chasm between using and programming computers.","profile_image":"https://s3.fission.codes/2021/02/2020-1024px.jpg","twitter":"@agentofuser","facebook":null,"website":"https://agentofuser.com"}],"primary_author":{"name":"Helder S Ribeiro","slug":"agentofuser","bio":"Deleting the chasm between using and programming computers.","profile_image":"https://s3.fission.codes/2021/02/2020-1024px.jpg","twitter":"@agentofuser","facebook":null,"website":"https://agentofuser.com"},"primary_tag":{"name":"Headless CMS","slug":"headless-cms","description":null,"feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"Headless CMS","slug":"headless-cms","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Headless Ghost","slug":"headless-ghost","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Heroku","slug":"heroku","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Ghost","slug":"ghost-tag","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"IPFS","slug":"ipfs","description":"InterPlanetary File System","feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"In five minutes, anyone can have a Ghost blog up and running, with media uploads\nhosted on IPFS thanks to Fission.\n\n\n\nThinking of starting a Ghost blog but leaning towards \"nah, too much work\"?\n\nHere's how you do it with Fission's Ghost Blog Starter\n[https://github.com/fission-suite/heroku-ipfs-ghost]: click a button, choose a\nURL, watch a couple of spinners do their thing, and voilà: a production-ready\nGhost blog instance is live on Heroku in less than 5 minutes.\n\nBest of all? Image and video uploads—which aren't supported by default on Heroku\ndue to its read-only filesystem—are built-in and work seamlessly. The Fission\nHeroku Add-on [https://elements.heroku.com/addons/interplanetary-fission]  takes\ncare of everything without intervention, creating a new Fission account for your\nblog, handling media uploads, and serving those assets for you on HTTPS and on\nthe peer-to-peer IPFS network.\n\nGoing Headless\nGhost is a great platform for authors, with almost a decade of accumulated\nimprovements in user experience.\n\nOne shortcoming though is that it doesn't scale beyond a single server:\n\n> Ghost doesn’t support load-balanced clustering or multi-server setups of any\ndescription, there should only be one  Ghost instance per site.\n— Ghost documentation\n[https://ghost.org/docs/faq/clustering-sharding-multi-server/]\nCaching pages and serving them via a content delivery network  (CDN) is one way\nto mitigate this. But if content has to be turned into static files and served\nfrom the edge anyway, why not go a step further and decouple Ghost, the\nauthoring interface, from the code that generates those files based on the\ncontent?\n\nThat's the Headless CMS  approach, where a static site generator\n[https://jamstack.org/generators/]  pulls the content from the content\nmanagement system and builds the pages that can be served super-fast at scale at\nthe edge. This opens up the possibility to tap into a rich ecosystem of frontend\ndevelopment tools and components (like React and others) for a much richer\ncontent experience, along with security and performance benefits.\n\nOn a previous post, we described how we're moving our own blog to a Headless\nGhost + Next.js [https://blog.fission.codes/headless-ghost-blog-fission/] \nsetup. This allows us not only to make the best out of what the frontend can do,\nbut also to showcase how Fission enables personalization at the edge, something\nthat used to be possible only with dynamically-rendered server-hosted websites.\n\nBy using our Ghost blog starter\n[https://github.com/fission-suite/heroku-ipfs-ghost], you can try this setup for\nyourself and follow along as we continue to share tools, process, and lessons on\nour own path to a webnative publishing experience.","html":"<p>In five minutes, anyone can have a Ghost blog up and running, with media uploads hosted on IPFS thanks to Fission.</p><!--kg-card-begin: markdown--><p><img src=\"https://demos.fission.app/fission-heroku-ipfs-ghost-2x.gif\" alt=\"demo of fission's ghost starter deploying to heroku\"></p>\n<!--kg-card-end: markdown--><p>Thinking of starting a Ghost blog but leaning towards \"nah, too much work\"?</p><p>Here's how you do it with <a href=\"https://github.com/fission-suite/heroku-ipfs-ghost\">Fission's Ghost Blog Starter</a>: click a button, choose a URL, watch a couple of spinners do their thing, and <em>voilà</em>: a production-ready Ghost blog instance is live on Heroku in less than 5 minutes.</p><p>Best of all? Image and video uploads—which aren't supported by default on Heroku due to its read-only filesystem—are built-in and work seamlessly. The <a href=\"https://elements.heroku.com/addons/interplanetary-fission\">Fission Heroku Add-on</a> takes care of everything without intervention, creating a new Fission account for your blog, handling media uploads, and serving those assets for you on HTTPS and on the peer-to-peer IPFS network.</p><h3 id=\"going-headless\">Going Headless</h3><p>Ghost is a great platform for authors, with almost a decade of accumulated improvements in user experience.</p><p>One shortcoming though is that it doesn't scale beyond a single server:</p><blockquote>Ghost doesn’t support load-balanced clustering or multi-server setups of any description, there should only be <em><strong>one</strong></em> Ghost instance per site.<br>— <a href=\"https://ghost.org/docs/faq/clustering-sharding-multi-server/\">Ghost documentation</a></blockquote><p>Caching pages and serving them via a <em>content delivery network</em> (CDN) is one way to mitigate this. But if content has to be turned into static files and served from the edge anyway, why not go a step further and decouple Ghost, the authoring interface, from the code that generates those files based on the content?</p><p>That's the <strong>Headless CMS</strong> approach, where a <a href=\"https://jamstack.org/generators/\">static site generator</a> pulls the content from the content management system and builds the pages that can be served super-fast at scale at the edge. This opens up the possibility to tap into a rich ecosystem of frontend development tools and components (like React and others) for a much richer content experience, along with security and performance benefits.</p><p>On a previous post, we described how we're moving our own blog to a <a href=\"https://blog.fission.codes/headless-ghost-blog-fission/\">Headless Ghost + Next.js</a> setup. This allows us not only to make the best out of what the frontend can do, but also to showcase how Fission enables personalization at the edge, something that used to be possible only with dynamically-rendered server-hosted websites.</p><p>By using our <a href=\"https://github.com/fission-suite/heroku-ipfs-ghost\">Ghost blog starter</a>, you can try this setup for yourself and follow along as we continue to share tools, process, and lessons on our own path to a webnative publishing experience.</p>","url":"https://blog.fission.codes/fission-powered-ghost-blog-starter/","canonical_url":null,"uuid":"d60a1fa2-0ae9-48f5-aa0e-c3755d66116d","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"60390451d064ac001e8042de","reading_time":null}},{"node":{"id":"Ghost__Post__60210daa2dc76c001e5a3301","title":"Headless Ghost and Fission","slug":"headless-ghost-blog-fission","featured":false,"feature_image":"https://images.unsplash.com/photo-1545062990-4a95e8e4b96d?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MXwxMTc3M3wwfDF8c2VhcmNofDF8fGdob3N0fGVufDB8fHw&ixlib=rb-1.2.1&q=80&w=1080","localImage":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","placeholder":{"fallback":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='720'%20viewBox='0%200%201080%20720'%20preserveAspectRatio='none'%3e%3cpath%20d='M0%20360v360h1081V0H0v360m550-179v3c0%201-2%202-6%201l-1%202-2%204-3%203-3%204c-1%202-1%202%201%202l2-1h1c0%202-6%207-8%207s-1-1%201-4l1-2c-1%200-2-1-1-2l-1-3c-3-1-4%201-2%203v3c-5%200-8%203-8%207l-1%204c-1%200-2-1-2-3%200-1%200-2%201-1l1-1-1-2c-1%201-5-2-5-3l1-2%201-1c0-2%202-2%203-1%201%203%205%203%206%201%200-3-2-5-4-3-1%202-1%202-1%200s-1-2-3-2l-4-2-5-1-12-2c-1-2-13%201-12%203l-3%201h-11l-5-1c-3%200-4%201-3%202%200%201%200%202-3%202-2%200-3%201-3%203l-4%203c-3%200-4%201-5%203l-3%202-2%201%201%201c3%200%203%202%200%202l-1%203c0%202-1%202-2%202l-2%202-3%203-3%202c-1%202%200%203%202%202l2-1-1%202c-3%201-8%208-7%2010l-1%203v1l2%203c0%202%201%203%202%203l2%201h4c2-1%203-1%203%201l-3%201c-3%200-3%200-3%202l-1%204-2%203-1%201-2%205c-2%206-16%2018-24%2022l-5%204-5%201c-1%201-3%201-3%203l-4%203c-3%201-3%2013%200%2013l1%202v6c-1%2012%200%2025%202%2026%201%202%202%202%202%201l2-3c2-1%202-2%201-5v-4l-1-6c-2-8-1-34%201-30%201%203%203%202%203%200-1-2%200-3%204-4l6-3%2012-9%2013-10%206-5%2013-8c3-3%207-4%2013-4l7-2c4-3%2017-3%2018-1s-1%203-2%202l-6-1%202%201%202%201c0%203%205%203%206%202l2-2%2011%206s1%202%203%202l5%203%205%201%202%202c2%202%203%203%206%202%203%200%204%200%203%201s-1%201%202%201l4%201%202%201%206%202%205%201h2l-3%201c-3%201-6%203-14%2010-3%203-6%204-9%205l-6%201-4-2c-4-1-5%200-5%207%200%205%204%2021%206%2022l1%202c0%202%203%201%205-2l2-2c0%203%202%202%203-1l2-3%202-1%202-1c1%200%202-1%202-4l2-8c1-3%201-3%202-1l2%202c2%201%203%207%201%207l-2%202-2%201v1l-1%201c-1%200-4%204-7%2011-5%209-7%2012-8%209h-2c-1%201-1%202%201%203s1%202-2%201c-2%200-2%200%200%201s2%201-4%207c-3%202-5%202-4%200%200-2-4-6-4-5l-7%205-7%205-1%201-4%202-7%204a2870%202870%200%2000-38%2011l-18-1-21-1c-5-2-6-2-6%203l-2%204-1%202h1c1-1%208-1%2023%201%2011%201%2012%201%2019-1%209-3%2017-3%2016%202s3%204%204-2c1-4%206-6%2015-6l7-1h1l2%203v3l-1%202c1%202-3%205-6%205s-4%201-4%203l-2%203-1%204c0%203%200%203-1%202h-4l4%204c5%204%206%205%205%208l-4-2c-3-4-11-6-11-3l-1%201h-1l-2%201c-2%200-2%202%200%203l4%202-2%202-4%202c-2%201-2%201%200%203%203%202%205%206%206%2013%202%207%201%209-2%205-4-6-5-2-2%206%202%206%205%206%204%201l1-3c1%200%202%205%201%207l-2%2010c-1%208%200%208%202%2011%203%204%204%204%204%201s3-9%205-10c1%200%203-2%204-5%203-6%204-5%201%201-1%204-2%205-1%206l3%203c2%204%205%204%207%201%202-4%204-5%207-4%204%200%204%202%201%202l-3%202-1%203-3%205-2%204-1%201-1%202c-2%201-2%208-1%208l2-1c0-2%205-1%206%201s3%201%203-1l2-3%201-1c-3-2-6-12-3-10l1-2%201-2%201%201c0%201%208-3%209-5h1c1%202-3%2011-5%2013l-2%203-1%201-1%201-1%203-1%202h2c2-2%202-2%203-1%201%202%2011%203%2011%201l1-1%203-1%201-10v-10l1-1%201-4-1-3c-2-1-7%205-7%206l-1%201c-3%201-3-1-1-5%203-5%205-7%209-5%203%202%204%206%203%207-2%201%200%202%202%201l2%201%202%201%204-6c4-8%208-10%2013-5l4%203c2%200%201-2-2-3l-2-3-1-3c-3-2-3-3%201-3%202%201%203%200%201-1l1-1c3-1%203%200%203%202%200%201%200%202%201%201v6l1%207c2%201%202%201%203-1%202-4%205-8%205-6%200%201%200%202%201%201v-4c2-1%206%201%206%202%201%202%200%205-1%205-2-1-7%201-7%203-2%205-3%205-5%203h-4l1%201v2c-1%201-1%202%201%203%202%200%202%201%201%202-1%204-3%207-4%206l-1%202%201%201v2c-1%202%201%204%203%204l3%201%205%201%204%201%203-7c2-6%202-7%200-8l-3-2-3-1h-1c-1-1%200-1%201-1%202%200%205-3%203-4-2-3-2-8-1-8l2%202%202%201v-3l1-1c1%201%201%200%201-1l1%201h2l-1-3-1-2-1-1c-1%200-4-5-3-8l1-1%201%201%201-3v-5l1-4c-1-3%201-6%202-4l1%201v-3l6-6%203-2h-4l-6%201-4%203c-2%201-4%203-4%205-1%201-1%201-1-2%201-3%201-4-1-4-4%200-8%202-8%205l-1%202-1-1h-2c-1%200-1%201%201%202l1%201h-2l-1%202v7l-1%201-1%204v-14l-1-1c2-2%202-7%201-7l-1%201c1%201%200%201%200%200l-2%201-1%201c-1-1-2%200-3%201l-1%203v-3c0-3-4-5-6-4l-2%201c-1-1%202-3%205-3l3-1c1-2%2013-6%2018-7%204-1%203-3-1-3l-12%204c-10%204-14%204-20%201-8-4-11-13-8-23l2-11%203-11c2-4%202-6%201-7v-2l1-3c-1-1%200-3%202-4%204-2%2013-19%2015-26%200-4%207-10%2011-10%204-1%205-3%201-4-2%200-2%200%200-1s3-3%201-3%200-9%204-14c2-3%202-4%202-8-1-5-1-5%201-7%203-1%206-7%205-10l1-1%205-3%205-3%203-4%203-3%203-1c2-3%202-3%200-5-1-2-1-2%202-3l3-3c0-2%200-2%201-1l2%201c1%200%202%201%201%203l1%203c2%200%202-2%202-6%200-1%200-2%201-1%203%201%203-2%201-4l-1-2c2%200%203-2%201-4l-1-5-1-4-1-2c0-2-1-3-4-4-1-1-2-1-1-2h2c2%202%204%200%203-3%200-7-1-7-3-8-2%200-3-1-3-2h-1c0%204-2%202-2-2s0-4-2-3l-2%201%201-2c2-1%202-1-6-3h-4c0%202-3-2-3-5l-1-3h-14m-43%2054c-1%202-7%203-13%201-3-1-8%200-9%202h6l7%201%206%202c5%201%2010%203%2012%205%201%202%204%201%204-2%201-5-2-8-7-8l-5-2c-1-1-1-1-1%201m15%208c-2%203-1%205%205%208l7%203%202%201%201-1v-9c2-2-1-1-3%201-3%202-4%203-4%201l-2-1-3%201-1%201v-3c0-3%200-4-2-2m172%2062l-3%203v2l-1%202-1%202-1%202%201%201c2-2%203%204%203%2019l1%2016c3%202%203%201%203-5-1-4-1-8%201-13l2-11%201-7c2-3%200-5-3-6-2%200-3-2-1-2l1-3c0-2-1-2-3%200m-10%2016l-1%204v7l1%2010c0%204%201%205%203%204v-11c-2-3-2-4%200-5%203-3%201-11-2-11l-1%202m-127%200l1%204%202%204%203%205%202%204c0%202%205%2010%206%2010%202%200%201-6-1-8l-6-10c-5-10-6-11-7-9m23%2041l1%205%201%203%202%205c1%201%202%204%200%203l-1%202c3%206%204%2012%203%2016l-1%206c-1%202-2%206-4%207-4%204-4%206-1%203%208-5%2011-26%206-38a57%2057%200%2001-2-7l-1-4c-1-5-3-5-3-1m32%201l-1%201%201%202c0%204%202%206%205%204l2-1-1%202v4c1%201%202%200%203-1l4-1%204-1c2-2%202-4%200-4-1%200-2-1-1-2%200-3-9-5-16-3m-209%2020h-3c-3%200-6%202-6%204s-2%203-3%203c-2%200-2%201-2%203s0%203-2%204c-5%202-3%206%204%206l4%203%203%202%204%202c4%203%2015%202%2017-1l2-4%202-2%201-2%201-2c3-3-4-10-8-9l-3-1-3-2-2-2-2-1-2-1-1-1-1%201m194%2040v2l-1%201-1-1c0-2-2%200-3%204l-1%203%201%206v4l1%206v3l-2-3-2-1-2%201v2l1%201%201%202c2%205%205%205%2011-1l5-4-2-5c-2-4-3-7-2-9%201-6-3-14-4-11m-22%201l-3%205-2%203-1%201-1%202v5l1%204%201%206%201%202%201%203c0%202%201%203%202%203l1-4%202-7c2-2%203-5%202-5l1-2%201-1-1-2-1-7v-5h-1c0-2-1-2-3-1m6%2026l-3%206-3%208c-2%203-2%2024%200%2023l1%201c0%203%205%200%207-3l2-5%201-5%201-6-1-6c-4-6-4-12-1-11%202%200%202%200%201-1-2-2-2-2-5-1m-52%209c-2%203-4%205-5%204l-2%201-2%202c-3%200-1%202%202%201%203%200%203%201-2%206l-4%208v4h10c11%200%2012-1%2011-9s-2-19-1-20l-2-2-5%205m-61%2016c-4%205-5%207-5%209l2%206-1%203-1%201%201%202c1%200%204-4%204-6s1-2%203-2%203-1%203-3l1-5v-2c-2-1-2-7-1-9v-1l-6%207m-9-2l-3%206-3%205c-2%203-3%207-1%207%204%200%208-4%208-7%201-4%203-8%204-7%201%200%202-2%201-5s-3-3-6%201m69%2020h-4c-4%200-5%201-4%206l-1%203v1l2%202-1%201v1h1l1%202c0%203%203%2010%204%2010l1-3c0-3%200-3%202-3%203%200%204-1%203-5l-1-3h-1l1-2c3-1%202-10-1-11l-2%201m18%200v6c-2%201-3%202-1%202%202-1%202%200%202%201l1%206%201%202c-1%202%201%206%202%205l2-9v-10c1-3%200-4-4-4l-3%201m-68%201l1%202v1l1%205c2%205%203%209%201%206v3c0%206%201%207%202%206l2%201c0%203%202%200%202-4%201-3%200-4-1-4-2%200-2%200-1-1v-1l2-2v-5c2%200%200-3-2-3s-5-2-5-4l-1-1-1%201m-55%205l2%2010%201%2013%203%2010%201%204%201%202%202%203v-14l-3-25c0-5-1-7-4-7s-3%200-3%204m84%202c0%202%200%202-1%201-2-1-4%201-4%204v2c-1%201-1%201%201%201v1l-1%202-2%201-3%201h-1l-1%201%201%202%203%202c2%202%206%201%209-2l2-1%202-2c1-1%201-1%201%201v2l1-2%201-1%201-1c2-1%202-1%202%203-1%204-1%205%201%205s2%200%201-2v-5c0-2-1-3-2-3l-1-1%201-1v-1c-1-2-2-1-2%202%200%202-2%203-2%201l-2-1v1l-1%201c-2%200%200-5%202-7%202-1%200-6-1-6v2l-1%202-1-1-1-2c-2-1-2%200-2%201m-29%2018c0%203-4%206-6%205l-2%201h2l1%201-1%201-2%201c1%203%200%204-1%203l-1-2-1-4-1-1c0-3%200-4-1-2l-2%202c-1-1-1%200-1%201l-2%205c-2%203-2%204-1%209s3%204%203-2l1-7c1-1%201-1%201%201s2%204%203%202h2v2l1%2021-1%202c-1%202%201%2010%202%2011s0%201-2%201c-3-1-4%201-2%205%201%202%201%2010-1%209v3c0%202%200%202-1%201h-1l-1%202c0%202%200%202%201%201l3%204v4l1%202%202-2c1-1%201-1%201%201l1%202%203%202%202%201%205%204c3%203%205%204%208%204l10-1h6l7-2%206-3%201-1c0%202%200%202%202%201l4-2h3c-1%202%202%203%204%202s2-1%200-1c-4-1-3-2%201-3%204%200%207-2%205-3-1-1%200-1%202-1%205%200%207-1%2010-3%204-3%206-8%204-11v-3l2-4%202-3%201-1%201-7c1%201%202-2%203-8h1v10l3-5%202-6%201-3c2-2%202-2%202%200l1%201%201%202-1%202%201%202c1%203%202%203%201%207s-2%204-2%202c-1-2-1-2-1%200l-1%204v1l-1%204-1%204v1l1%202%201%201%202%202c2%202%203%206%202%206l-1-1c-1-3-3-2-3%201%200%204%201%205%204%205h2c1%202%203%202%209%200h6l2%201-1-2c-1-1-1-1%201-1l2-1%202-1%201%202c0%203%204%203%207%200l4-2v-1c0-2-1-2-2-1-2%201-2%201-2-1%201-2%200-3-1-1h-2c-1-1-1-1-1%201%200%203-2%203-2-1l-3-3c-2%200-4-2-2-3h1l1%202c2%200%201-2-1-4s-2-3-2-5v-4l2-3%201-1c1%200%202-1%201-2l1-1c1%201%204-1%204-3l1-1%202-2%201-1%202%201c2%200%202-4%200-4l-1-3c1-1%200-2-1-2-2-2-5-1-5%200l-1-2c-1-2-2-4-1-6%201-5%201-6-2-7-4-2-3-2-5%206l-3%209-1%203c0%201-2%202-7%201l-1-3c-1-3-3-3-3-1l-1%205-1-3v-4l1-2c0-1%200-2%201-1l1-2-2-3c-2%200-2%200-1%202l-1%201h-2c-1%201-1%200-1-1l1-2c2%200%203-2%202-5v-3l-3%202-2%201-1-2c-1%200-2%203-1%208%200%204%200%205-1%204-1-2-3%200-3%203l-2%201h-5l-2%201c0%202-3%205-4%204l1-3v-2c-2-2-3-7-2-10%201-2-1-4-5-4-2%200-2%200-1%201s1%201-1%201-3%201-3%202v1l-1%202c-2%201-2%202-1%203v4c0%202%200%202-1%200-1-1-1-1-1%201h-2l-1-1c0%201-1%201-2-1-1-1-2-3-1-4l-3-1c-1%200-2%200-1-1%202-1%201-3-2-3s-4%200-5-3c-2-4-1-4%202%200l4%202-1-1c-1-2-1-2%201-2h3l2-2c1-3%205-7%207-7%203%200%203%202%202%205-1%202-1%202%201%202l4-1a326%20326%200%200010-2c4-1%2012-7%209-7l-8%204-2-1h-2l-2%201c-2%200-2%200-1-1l2-1-4-3-4-1c-3-1-3-1-5%201-3%203-11%205-12%203l-2-1c-3%200-4%200-2-1v-3c0-2-5-1-8%202l-2%202h2c1-1%202-1%201%201l1%204v1l-1%201-2%208v3l1%201-1%201h-1l-3%201c-4%200-6-1-5-2l-2-2-2-1h2l2-2-7-3h-1l1-1v-3c-1-2-1-2-2%200-1%201-1%201-1-1l-1-4%201-2%201%201c0%202%203%205%207%207h3v-1c1%200%208-6%207-7l-2%201-6%201c-4%201-4%201-3-2%200-2-1-3-2-3l-1-1v-2l-1-1v-2c-2-1-2-1-3%201%200%202-1%203-2%203l-1%201-2%201c-1%200-2-1-1-2l-1-1h-3c-1-1-1-1-1%201l2%203c2%201%202%202%201%202v3c-2%202-4%200-4-3%200-1%200-2-1-1l-1%201v-1c1-2%201-5-1-7l-1-1m23%2056l-2%203c-1%202-2%202-3%200h-5c-2-1-6%200-4%201l4%201%204%201%203%202c2%200%202%200%201-1v-2c2-1%202%200%202%201l1%202v-1c0-1%200-2%202-1l3-1%206-2c3-1%204-2%202-2l-3-1-7-1c-3%200-5%200-4%201'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e"},"images":{"fallback":{"src":"/static/1ac0070c802948ba48a1a95340eebfe7/29ba9/photo-1545062990-4a95e8e4b96d.jpg","srcSet":"/static/1ac0070c802948ba48a1a95340eebfe7/272de/photo-1545062990-4a95e8e4b96d.jpg 270w,\n/static/1ac0070c802948ba48a1a95340eebfe7/a5ccf/photo-1545062990-4a95e8e4b96d.jpg 540w,\n/static/1ac0070c802948ba48a1a95340eebfe7/29ba9/photo-1545062990-4a95e8e4b96d.jpg 1080w","sizes":"(min-width: 1080px) 1080px, 100vw"},"sources":[{"srcSet":"/static/1ac0070c802948ba48a1a95340eebfe7/f9186/photo-1545062990-4a95e8e4b96d.webp 270w,\n/static/1ac0070c802948ba48a1a95340eebfe7/25c40/photo-1545062990-4a95e8e4b96d.webp 540w,\n/static/1ac0070c802948ba48a1a95340eebfe7/984df/photo-1545062990-4a95e8e4b96d.webp 1080w","type":"image/webp","sizes":"(min-width: 1080px) 1080px, 100vw"}]},"width":1080,"height":720}}},"excerpt":"Learn about the Headless experiments at Fission, and walk through the tutorial to build a Next.js blog powered by Headless Ghost and Fission.","custom_excerpt":"Learn about the Headless experiments at Fission, and walk through the tutorial to build a Next.js blog powered by Headless Ghost and Fission.","created_at_pretty":"08 February, 2021","published_at_pretty":"08 February, 2021","updated_at_pretty":"08 February, 2021","created_at":"2021-02-08T02:08:41.000-08:00","published_at":"2021-02-08T08:59:29.000-08:00","updated_at":"2021-02-08T08:59:29.000-08:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Helder S Ribeiro","slug":"agentofuser","bio":"Deleting the chasm between using and programming computers.","profile_image":"https://s3.fission.codes/2021/02/2020-1024px.jpg","twitter":"@agentofuser","facebook":null,"website":"https://agentofuser.com"}],"primary_author":{"name":"Helder S Ribeiro","slug":"agentofuser","bio":"Deleting the chasm between using and programming computers.","profile_image":"https://s3.fission.codes/2021/02/2020-1024px.jpg","twitter":"@agentofuser","facebook":null,"website":"https://agentofuser.com"},"primary_tag":{"name":"How To","slug":"how-to","description":null,"feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"How To","slug":"how-to","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Ghost","slug":"ghost-tag","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Headless Ghost","slug":"headless-ghost","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"ReactJS","slug":"reactjs","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Next.js","slug":"next-js","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"starter","slug":"starter","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Headless CMS","slug":"headless-cms","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"We're exploring a number of \"Headless\" combinations at Fission. The first one is\nwith the Ghost Content Management System (CMS). We use Ghost to run this blog\nand want to start using it to integrate with and power our home page, so it's a\ngreat place for us to start.\n\nThe basic pattern of \"Headless\" is that your authors and editors login to a\nserver based system with all the authoring and editing tools they are used to,\nbut then the \"head\" – the usual template system and user facing website – isn't\nused. Instead, a modern front end framework is custom designed and built to take\nthe published content of the CMS and host it. This fits great with the Fission\napp publishing platform.\n\nAfter we've got the basics of a headless publishing workflow setup with Fission,\nwe'll move on to using our Webnative framework to add personalization at the\nedge, but that will come in later posts.\n\nAside from Ghost, we're also looking at Headless WordPress\n[https://talk.fission.codes/t/headless-wordpress/1448]  and Headless Drupal\n[https://talk.fission.codes/t/headless-drupal/1513]. Let us know in the forum if\nyou've got other Headless projects that you'd like to combine with Fission!\n\nBuild a Next.js Blog powered by Headless Ghost and Fission\nFollow the tutorial below to get started with your own Headless Ghost, or visit\nit on Github for the README version\n[https://github.com/fission-suite/nextjs-blog-starter-typescript-ghost].\n\nYou want to have a modern static website/app built with React, deployed to a CDN\n(even a distributed [https://ipfs.io/]  one), and loading super fast for\nvisitors and search engines.\n\nYou want to avoid the headaches and costs of managing and securing servers for\ntraditional content management systems (CMSs) like Ghost and WordPress.\n\nThat's what static site generators (like Next.js, Gatsby, and others\n[https://staticgen.com/]) are for, right?\n\nBut,  you don't  want to have to retrain  every writer and content creator on\nyour team to use Markdown  and Git. Ghost and WordPress are familiar, pretty,\nand usable. They have been iterated over years to be approachable by almost\nanyone.\n\nWhat do you do? That's right you cut the CMS' head off 🔪\n\nMore politely, you decouple  the interface used for authoring  content from the\nsystems used for rendering  and distributing  it.\n\nWith CMS and website decoupled, you can protect the CMS inside an intranet\nwithout exposing it to outside danger, or even use it as a desktop word\nprocessor running only on your machine, as I'll show you in this tutorial.\n\nTo make things easier we've made a template Next.js website that connects to\nGhost and pulls content from it. Follow along and try it out. Feedback welcome\n:)\n\n\n--------------------------------------------------------------------------------\n\n * ✨  Getting Started * 👻  Setting Up Ghost * Public or Local Ghost?\n       * Setting Up Local Ghost\n       * Exposing the Ghost Content API\n      \n      \n    * 💻  Running Next.js Locally\n    * 🌐  Deploying to Fission * 🔰  Fission CLI Install and Sign Up\n       * 🌱  Register New Fission App\n       * 🚀   Aand... Launch!\n       * 🤖  (Semi-)Automatic Deployment with the\n         GitHub\n         Action\n      \n      \n   \n   \n * 🙏  Show your support\n\n\n--------------------------------------------------------------------------------\n\nThis starter template is based on the official blog-starter-typescript\n[https://github.com/vercel/next.js/tree/canary/examples/blog-starter-typescript] \n from Next.js [https://nextjs.org].\n\nWe changed it only enough to make it possible to fetch and publish blog posts\nfrom the Ghost CMS, while keeping the ability to write Markdown files in the git\nrepo. It's a purely additive change.\n\nThere's also a GitHub Action to build and publish the static website to Fission.\nIt works automatically on pushes to the git repo, and can be triggered manually\nafter updating the content on Ghost. (The default Ghost webhook isn't\ncustomizable to trigger a GitHub Action, but that can be added as a plugin.)\n\nThe Markdown blog posts are stored in /_posts  as files with frontmatter\nsupport. Adding a new Markdown file in there will create a new blog post.\n\nThe Ghost blog posts are fetched using Ghost's Content API library.\n\n✨  Getting Started\nLet's start by making this starter yours:\n\n * Click Use this template  at the starter page on GitHub\n   [https://github.com/fission-suite/nextjs-blog-starter-typescript-ghost]\n   \n   That will make a copy of the starter into a new repo under your account with\n   a fresh git history. You can pick a different name for it too; in that case\n   replace nextjs-blog-starter-typescript-ghost  with your chosen name below.\n   \n   \n * Clone the repo (replace with your own URL):\n   \n   git clone git@github.com:fission-suite/nextjs-blog-starter-typescript-ghost.git\n   \n   \n   \n * cd into the repo:\n   \n   cd nextjs-blog-starter-typescript-ghost\n   \n   \n   \n * Install dependencies\n   \n   yarn\n   \n   \n   \n\nAll command-line instructions and directory paths from now on assume the current\ndirectory is the root of the cloned repo.\n\n👻  Setting Up Ghost\nPublic or Local Ghost?\nRunning a local Ghost instance is good for testing. But also, if you have no\nneed for a Ghost instance running all the time out on the internet (for example,\nif you are the only author) you can do this for your production website, using\nGhost locally for its nice interface if you prefer that to editing Markdown\nfiles. No servers to secure, no bills to pay.\n\nSetting Up Local Ghost\nIf you have a Ghost instance running already somewhere, move on to the next\nstep. If you don't, you can set one up on your own machine with Docker.\n\nTo create a local Ghost instance with Docker, run the following at the root of\nyour repo:\n\nyarn ghost-local-create\n\n\nGhost data will be stored at ./ghost, which is in .gitignore  by default. In a \nprivate  repo you can choose to commit that too and have your Ghost content\nversioned and available whenever you need it.\n\nThere are other scripts like ghost-local-start, ghost-local-stop, and \nghost-local-remove  which you might find handy to manage the Docker container.\n\nAfter Docker downloads and sets up Ghost, it will be accessible on your browser\nat http://localhost:3001.\n\nNext you need to create an admin account on your newly-created Ghost. To do\nthat, visit the admin interface at http://localhost:3001/ghost  and follow the\nwizard.\n\nExposing the Ghost Content API\nI'll use http://localhost:3001  for the examples, but you can replace that with\nyour Ghost URL if you have an instance already running somewhere else.\n\n * Go to the admin interface at http://localhost:3001/ghost\n * On the left-hand sidebar, click on \"Integrations\"\n * On the Integrations screen, click on +Add custom integration\n   [http://localhost:3001/ghost/#/settings/integrations/new/]\n * Give it a name, like nextjs, and click \"Create\" then \"Save\"\n\nNow the important part:\n\n * On the same screen, you'll find two fields we need: Content API Key  and API\n   URL\n * Copy those into a new .env.local  file, like this:\n\n# .env.local\n# replace values with your own\nGHOST_API_URL=http://localhost:3001\nGHOST_API_KEY=2a9356e4a5214c883ba886e58e\n\n\n⚠️ This file is ignored by git by default. Don't  commit env.local  to git\nunless you know what you're doing.\n\nAlright! Ghost part's done.\n\n💻  Running Next.js Locally\nNext.js is the missing static website head  to our headless Ghost. Let's stitch\nthem together! This should be enough:\n\nyarn dev\n\n\nYour blog should be up and running at http://localhost:3000! (If anything\nunexpected happens, please post an issue\n[https://github.com/fission-suite/nextjs-blog-starter-typescript-ghost/issues/new]\n.)\n\nNow you can change the Next.js website code and the content on Ghost, and\niterate quickly on them in the browser.\n\nNote: live-reload works for Next.js code and Markdown files; to see changes to\nGhost content you need to refresh the page.\n\n🌐  Deploying to Fission\nWhen you're ready to publish, the first step is exporting your website to a set\nof static files:\n\nyarn build\n\n\nThat should create a directory at ./out  with all your ready-to-publish files.\n\nNext we use the Fission CLI to send that out onto the internets.\n\n🔰  Fission CLI Install and Sign Up\nTo install the Fission command-line interface using brew, run:\n\nbrew tap fission-suite/fission\nbrew install fission-cli\n\n\nFor more ways of installing the Fission CLI, please check the documentation\n[https://guide.fission.codes/developers/installation].\n\nIf you don't have a Fission account, you can create one without leaving the\ncommand-line by running:\n\nfission setup\n\n\n🌱  Register New Fission App\nYou can pick a subdomain or let Fission choose a random one for you.\n\nTo host the Next.js website at a random subdomain on .fission.app, run:\n\nfission app register\n\n\nTo choose your own subdomain, use the --name  option like this:\n\nfission app register --name my-beautiful-subdomain\n\n\nThat will create a fission.yaml  file. This one is safe to commit to git, and\nyou should  do that if you want to use the GitHub Action to build and deploy the\nwebsite for you. Make sure there is a line saying build: ./out  in it. That's\nthe directory where Next.js puts the exported website files.\n\n🚀   Aand... Launch!\nOne last step:\n\nfission app publish\n\n\nAnd you're done! Your website should be up at a random URL returned to you by\nthe Fission CLI or at my-beautiful-subdomain.fission.app  if you used the --name \n option. Yay!\n\n🤖  (Semi-)Automatic Deployment with the GitHub Action\nIf you don't want to run the build locally and deploy to Fission every time you\nmake a change to the Next.js code or Markdown files (who does?), this starter\ncomes with a GitHub Action that automates that for you.\n\nTo get it working you need to set up 3 secrets for your repo. To do that, go to\nthe \"Settings\" > \"Secrets\"  screen on your GitHub repo, then create a \"New\nrepository secret\"  for each of these:\n\n * GHOST_API_URL\n * GHOST_API_KEY\n * FISSION_KEY\n\nThe values for the GHOST_API_  fields are the same ones you used for the \n.env.local  file above.\n\nThe FISSION_KEY  was created and stored locally for you by the Fission CLI when\nyou set it up. Here's how you get it:\n\ncat ~/.config/fission/key/machine_id.ed25519 | base64\n\n\nWith all 3 secrets set up, you can trigger the deploy  action manually by\nclicking on \"Run workflow\" > \"Run workflow\", or see it in action after your next\n git push.\n\n\n--------------------------------------------------------------------------------\n\nNote:\n\n⚠️  To fetch the content from Ghost, the GitHub Action must be able to access\nthe URL  entered in the GHOST_API_URL  secret.\n\nIf you are running a local Ghost instance on your machine, http://localhost:3001 \n won't be visible to the outside.\n\nA simple way of exposing your local Ghost instance to a publicly-accessible URL\nis by using one of the open source alternatives to ngrok\n[https://github.com/anderspitman/awesome-tunneling]  or ngrok\n[https://ngrok.com/]  itself.\n\nWith ngrok you do something like this:\n\nngrok http 3001\n\n\n⚠️  This is great for testing, but not secure. Look into using https  if you're\ngoing to rely on this and don't want your Ghost API key and data to leak.\n\n\n--------------------------------------------------------------------------------\n\n> Why \"(semi-)\" automatic then? 🤔\n\n\nGlad you asked. The GitHub Action can detect when you push to the GitHub repo\nbecause there's a built-in \"on push\" event  that can be used to trigger  it.\n\nBut when you create a new post on Ghost or update an existing one, GitHub needs\na way of finding out about it so it can run the deploy action. There's no git\npush  event happening, so the trigger is usually a webhook\n[https://docs.github.com/en/rest/reference/actions#create-a-workflow-dispatch-event] \n (i.e. a POST request you send to a GitHub API URL.)\n\n🙂  Luckily, Ghost comes with the built-in ability to send webhooks when content\nchanges happen.\n\n🙃Unluckily, though, Ghost doesn't let you customize the payload that goes in\nthe webhook requests it sends, and GitHub requires  a certain field to be\npresent telling it which ref  (usually a branch) you are referring to.\n\nBottom line: after changing things on Ghost, you need to trigger a build\nmanually.\n\nYou can do that via the GitHub interface (\"Actions\" > \"Continuous Deployment\" >\n\"Run workflow\" > \"Run workflow\"), or by running the handy script  we added to\nthis starter:\n\nGITHUB_USER=your-username GITHUB_REPO=your-repo GITHUB_AUTH_TOKEN=your-auth-token trigger-github-deploy-action.sh\n\n\nHere's how you can get an auth token\n[https://docs.github.com/en/github/authenticating-to-github/creating-a-personal-access-token]\n.\n\nThis situation is definitely not ideal, and can be solved with Ghost plugins,\nbut we wanted to stick to the basic install.\n\n🙏  Show your support\nPlease give a  ⭐️\n[https://github.com/fission-suite/nextjs-blog-starter-typescript-ghost]  if you\nliked this project! We appreciate it :)","html":"<p>We're exploring a number of \"Headless\" combinations at Fission. The first one is with the Ghost Content Management System (CMS). We use Ghost to run this blog and want to start using it to integrate with and power our home page, so it's a great place for us to start.</p><p>The basic pattern of \"Headless\" is that your authors and editors login to a server based system with all the authoring and editing tools they are used to, but then the \"head\" – the usual template system and user facing website – isn't used. Instead, a modern front end framework is custom designed and built to take the published content of the CMS and host it. This fits great with the Fission app publishing platform.</p><p>After we've got the basics of a headless publishing workflow setup with Fission, we'll move on to using our Webnative framework to add personalization at the edge, but that will come in later posts.</p><p>Aside from Ghost, we're also looking at <a href=\"https://talk.fission.codes/t/headless-wordpress/1448\">Headless WordPress</a> and <a href=\"https://talk.fission.codes/t/headless-drupal/1513\">Headless Drupal</a>. Let us know in the forum if you've got other Headless projects that you'd like to combine with Fission!</p><h2 id=\"build-a-next-js-blog-powered-by-headless-ghost-and-fission\">Build a Next.js Blog powered by Headless Ghost and Fission</h2><p>Follow the tutorial below to get started with your own Headless Ghost, or <a href=\"https://github.com/fission-suite/nextjs-blog-starter-typescript-ghost\">visit it on Github for the README version</a>.</p><!--kg-card-begin: markdown--><p>You want to have a modern static website/app built with React, deployed to a CDN (even a <a href=\"https://ipfs.io/\">distributed</a> one), and loading super fast for visitors and search engines.</p>\n<p>You want to avoid the headaches and costs of managing and securing servers for traditional content management systems (CMSs) like Ghost and WordPress.</p>\n<p>That's what static site generators (like Next.js, Gatsby, and <a href=\"https://staticgen.com/\">others</a>) are for, right?</p>\n<p><em>But,</em> you <em>don't</em> want to have to <strong>retrain</strong> every writer and content creator on your team to use <em>Markdown</em> and <em>Git</em>. Ghost and WordPress are familiar, pretty, and usable. They have been iterated over years to be approachable by almost anyone.</p>\n<p>What do you do? That's right you cut the CMS' head off 🔪</p>\n<p>More politely, you <em>decouple</em> the interface used for <em>authoring</em> content from the systems used for <em>rendering</em> and <em>distributing</em> it.</p>\n<p>With CMS and website decoupled, you can protect the CMS inside an intranet without exposing it to outside danger, or even use it as a desktop word processor running only on your machine, as I'll show you in this tutorial.</p>\n<p>To make things easier we've made a template Next.js website that connects to Ghost and pulls content from it. Follow along and try it out. Feedback welcome :)</p>\n<hr>\n<ul>\n<li><a href=\"#gettingstarted\">✨  Getting Started</a>\n<ul>\n<li><a href=\"#settingupghost\">👻  Setting Up Ghost</a>\n<ul>\n<li><a href=\"#publicorlocalghost\">Public or Local Ghost?</a></li>\n<li><a href=\"#settinguplocalghost\">Setting Up Local Ghost</a></li>\n<li><a href=\"#exposingtheghostcontentapi\">Exposing the Ghost Content API</a></li>\n</ul>\n</li>\n<li><a href=\"#runningnextjslocally\">💻  Running Next.js Locally</a></li>\n<li><a href=\"#deployingtofission\">🌐  Deploying to Fission</a>\n<ul>\n<li><a href=\"#fissioncliinstallandsignup\">🔰  Fission CLI Install and Sign Up</a></li>\n<li><a href=\"#registernewfissionapp\">🌱  Register New Fission App</a></li>\n<li><a href=\"#aandlaunch\">🚀   Aand... Launch!</a></li>\n<li><a href=\"#semiautomaticdeploymentwiththegithubaction\">🤖  (Semi-)Automatic Deployment with the GitHub Action</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#showyoursupport\">🙏  Show your support</a></li>\n</ul>\n<hr>\n<p>This starter template is based on the official <a href=\"https://github.com/vercel/next.js/tree/canary/examples/blog-starter-typescript\">blog-starter-typescript</a> from <a href=\"https://nextjs.org\">Next.js</a>.</p>\n<p>We changed it only enough to make it possible to fetch and publish blog posts from the Ghost CMS, while keeping the ability to write Markdown files in the git repo. It's a purely additive change.</p>\n<p>There's also a GitHub Action to build and publish the static website to Fission. It works automatically on pushes to the git repo, and can be triggered manually after updating the content on Ghost. (The default Ghost webhook isn't customizable to trigger a GitHub Action, but that can be added as a plugin.)</p>\n<p>The Markdown blog posts are stored in <code>/_posts</code> as files with frontmatter support. Adding a new Markdown file in there will create a new blog post.</p>\n<p>The Ghost blog posts are fetched using Ghost's Content API library.</p>\n<h2 id=\"gettingstarted\">✨  Getting Started</h2>\n<p>Let's start by making this starter yours:</p>\n<ul>\n<li>\n<p>Click <strong>Use this template</strong> at the <a href=\"https://github.com/fission-suite/nextjs-blog-starter-typescript-ghost\">starter page on GitHub</a></p>\n<p>That will make a copy of the starter into a new repo under your account with a fresh git history. You can pick a different name for it too; in that case replace <code>nextjs-blog-starter-typescript-ghost</code> with your chosen name below.</p>\n</li>\n<li>\n<p>Clone the repo (replace with your own URL):</p>\n<pre><code>git clone git@github.com:fission-suite/nextjs-blog-starter-typescript-ghost.git\n</code></pre>\n</li>\n<li>\n<p>cd into the repo:</p>\n<pre><code>cd nextjs-blog-starter-typescript-ghost\n</code></pre>\n</li>\n<li>\n<p>Install dependencies</p>\n<pre><code>yarn\n</code></pre>\n</li>\n</ul>\n<p>All command-line instructions and directory paths from now on assume the current directory is the root of the cloned repo.</p>\n<h3 id=\"settingupghost\">👻  Setting Up Ghost</h3>\n<h4 id=\"publicorlocalghost\">Public or Local Ghost?</h4>\n<p>Running a local Ghost instance is good for testing. But also, if you have no need for a Ghost instance running all the time out on the internet (for example, if you are the only author) you can do this for your production website, using Ghost locally for its nice interface if you prefer that to editing Markdown files. No servers to secure, no bills to pay.</p>\n<h4 id=\"settinguplocalghost\">Setting Up Local Ghost</h4>\n<p>If you have a Ghost instance running already somewhere, move on to the next step. If you don't, you can set one up on your own machine with Docker.</p>\n<p>To create a local Ghost instance with Docker, run the following at the root of your repo:</p>\n<pre><code class=\"language-bash\">yarn ghost-local-create\n</code></pre>\n<p>Ghost data will be stored at <code>./ghost</code>, which is in <code>.gitignore</code> by default. In a <strong>private</strong> repo you can choose to commit that too and have your Ghost content versioned and available whenever you need it.</p>\n<p>There are other scripts like <code>ghost-local-start</code>, <code>ghost-local-stop</code>, and <code>ghost-local-remove</code> which you might find handy to manage the Docker container.</p>\n<p>After Docker downloads and sets up Ghost, it will be accessible on your browser at <a href=\"http://localhost:3001\">http://localhost:3001</a>.</p>\n<p>Next you need to create an admin account on your newly-created Ghost. To do that, visit the admin interface at <a href=\"http://localhost:3001/ghost\">http://localhost:3001/ghost</a> and follow the wizard.</p>\n<h4 id=\"exposingtheghostcontentapi\">Exposing the Ghost Content API</h4>\n<p>I'll use <code>http://localhost:3001</code> for the examples, but you can replace that with your Ghost URL if you have an instance already running somewhere else.</p>\n<ul>\n<li>Go to the admin interface at <a href=\"http://localhost:3001/ghost\">http://localhost:3001/ghost</a></li>\n<li>On the left-hand sidebar, click on &quot;Integrations&quot;</li>\n<li>On the Integrations screen, click on <a href=\"http://localhost:3001/ghost/#/settings/integrations/new/\">+Add custom integration</a></li>\n<li>Give it a name, like <code>nextjs</code>, and click &quot;Create&quot; then &quot;Save&quot;</li>\n</ul>\n<p>Now the important part:</p>\n<ul>\n<li>On the same screen, you'll find two fields we need: <strong>Content API Key</strong> and <strong>API URL</strong></li>\n<li>Copy those into a new <code>.env.local</code> file, like this:</li>\n</ul>\n<pre><code class=\"language-bash\"># .env.local\n# replace values with your own\nGHOST_API_URL=http://localhost:3001\nGHOST_API_KEY=2a9356e4a5214c883ba886e58e\n</code></pre>\n<p>⚠️ <em>This file is ignored by git by default. <strong>Don't</strong> commit <code>env.local</code> to git unless you know what you're doing.</em></p>\n<p>Alright! Ghost part's done.</p>\n<h3 id=\"runningnextjslocally\">💻  Running Next.js Locally</h3>\n<p>Next.js is the missing static website <em>head</em> to our <em>head</em>less Ghost. Let's stitch them together! This should be enough:</p>\n<pre><code class=\"language-bash\">yarn dev\n</code></pre>\n<p>Your blog should be up and running at <a href=\"http://localhost:3000\">http://localhost:3000</a>! <em>(If anything unexpected happens, please post an <a href=\"https://github.com/fission-suite/nextjs-blog-starter-typescript-ghost/issues/new\">issue</a>.)</em></p>\n<p>Now you can change the Next.js website code and the content on Ghost, and iterate quickly on them in the browser.</p>\n<p><em>Note: live-reload works for Next.js code and Markdown files; to see changes to Ghost content you need to refresh the page.</em></p>\n<h3 id=\"deployingtofission\">🌐  Deploying to Fission</h3>\n<p>When you're ready to publish, the first step is exporting your website to a set of static files:</p>\n<pre><code class=\"language-bash\">yarn build\n</code></pre>\n<p>That should create a directory at <code>./out</code> with all your ready-to-publish files.</p>\n<p>Next we use the Fission CLI to send that out onto the internets.</p>\n<h4 id=\"fissioncliinstallandsignup\">🔰  Fission CLI Install and Sign Up</h4>\n<p>To install the Fission command-line interface using brew, run:</p>\n<pre><code class=\"language-bash\">brew tap fission-suite/fission\nbrew install fission-cli\n</code></pre>\n<p>For more ways of installing the Fission CLI, please check the <a href=\"https://guide.fission.codes/developers/installation\">documentation</a>.</p>\n<p>If you don't have a Fission account, you can create one without leaving the command-line by running:</p>\n<pre><code class=\"language-bash\">fission setup\n</code></pre>\n<h4 id=\"registernewfissionapp\">🌱  Register New Fission App</h4>\n<p>You can pick a subdomain or let Fission choose a random one for you.</p>\n<p>To host the Next.js website at a random subdomain on <code>.fission.app</code>, run:</p>\n<pre><code class=\"language-bash\">fission app register\n</code></pre>\n<p>To choose your own subdomain, use the <code>--name</code> option like this:</p>\n<pre><code class=\"language-bash\">fission app register --name my-beautiful-subdomain\n</code></pre>\n<p>That will create a <code>fission.yaml</code> file. <strong>This one is safe to commit to git</strong>, and you <em>should</em> do that if you want to use the GitHub Action to build and deploy the website for you. Make sure there is a line saying <code>build: ./out</code> in it. That's the directory where Next.js puts the exported website files.</p>\n<h4 id=\"aandlaunch\">🚀   Aand... Launch!</h4>\n<p>One last step:</p>\n<pre><code class=\"language-bash\">fission app publish\n</code></pre>\n<p>And you're done! Your website should be up at a random URL returned to you by the Fission CLI or at <code>my-beautiful-subdomain.fission.app</code> if you used the <code>--name</code> option. Yay!</p>\n<h4 id=\"semiautomaticdeploymentwiththegithubaction\">🤖  (Semi-)Automatic Deployment with the GitHub Action</h4>\n<p>If you don't want to run the build locally and deploy to Fission every time you make a change to the Next.js code or Markdown files (who does?), this starter comes with <strong>a GitHub Action that automates that for you</strong>.</p>\n<p>To get it working you need to set up 3 secrets for your repo. To do that, go to the <strong>&quot;Settings&quot; &gt; &quot;Secrets&quot;</strong> screen on your GitHub repo, then create a <strong>&quot;New repository secret&quot;</strong> for each of these:</p>\n<ul>\n<li><code>GHOST_API_URL</code></li>\n<li><code>GHOST_API_KEY</code></li>\n<li><code>FISSION_KEY</code></li>\n</ul>\n<p>The values for the <code>GHOST_API_</code> fields are the same ones you used for the <code>.env.local</code> file above.</p>\n<p>The <code>FISSION_KEY</code> was created and stored locally for you by the Fission CLI when you set it up. Here's how you get it:</p>\n<pre><code>cat ~/.config/fission/key/machine_id.ed25519 | base64\n</code></pre>\n<p>With all 3 secrets set up, you can trigger the <code>deploy</code> action manually by clicking on <strong>&quot;Run workflow&quot; &gt; &quot;Run workflow&quot;</strong>, or see it in action after your next <code>git push</code>.</p>\n<hr>\n<p>Note:</p>\n<p>⚠️  To fetch the content from Ghost, <strong>the GitHub Action must be able to access the URL</strong> entered in the <code>GHOST_API_URL</code> secret.</p>\n<p>If you are running a local Ghost instance on your machine, <code>http://localhost:3001</code> won't be visible to the outside.</p>\n<p>A simple way of exposing your local Ghost instance to a publicly-accessible URL is by using one of the <a href=\"https://github.com/anderspitman/awesome-tunneling\">open source alternatives to ngrok</a> or <a href=\"https://ngrok.com/\">ngrok</a> itself.</p>\n<p>With ngrok you do something like this:</p>\n<pre><code>ngrok http 3001\n</code></pre>\n<p>⚠️  This is great for testing, but <strong>not secure</strong>. Look into using <code>https</code> if you're going to rely on this and don't want your Ghost API key and data to leak.</p>\n<hr>\n<blockquote>\n<p>Why <strong>&quot;(semi-)</strong>&quot; automatic then? 🤔</p>\n</blockquote>\n<p>Glad you asked. The GitHub Action can detect when you push to the GitHub repo because <strong>there's a built-in &quot;on push&quot; event</strong> that can be used to <strong>trigger</strong> it.</p>\n<p>But when you create a new post on Ghost or update an existing one, GitHub needs a way of finding out about it so it can run the deploy action. There's no <code>git push</code> event happening, so the trigger is usually a <a href=\"https://docs.github.com/en/rest/reference/actions#create-a-workflow-dispatch-event\"><strong>webhook</strong></a> (i.e. a POST request you send to a GitHub API URL.)</p>\n<p>🙂  Luckily, Ghost comes with the built-in ability to send webhooks when content changes happen.</p>\n<p>🙃  <strong><em>Un</em>luckily</strong>, though, Ghost doesn't let you customize the payload that goes in the webhook requests it sends, and GitHub <strong>requires</strong> a certain field to be present telling it which <code>ref</code> (usually a branch) you are referring to.</p>\n<p>Bottom line: <strong>after changing things <em>on Ghost</em>, you need to trigger a build manually</strong>.</p>\n<p>You can do that via the GitHub interface (&quot;Actions&quot; &gt; &quot;Continuous Deployment&quot; &gt; &quot;Run workflow&quot; &gt; &quot;Run workflow&quot;), or by <strong>running the handy script</strong> we added to this starter:</p>\n<pre><code>GITHUB_USER=your-username GITHUB_REPO=your-repo GITHUB_AUTH_TOKEN=your-auth-token trigger-github-deploy-action.sh\n</code></pre>\n<p>Here's how you can get an <a href=\"https://docs.github.com/en/github/authenticating-to-github/creating-a-personal-access-token\">auth token</a>.</p>\n<p>This situation is definitely not ideal, and can be solved with Ghost plugins, but we wanted to stick to the basic install.</p>\n<h2 id=\"showyoursupport\">🙏  Show your support</h2>\n<p>Please <a href=\"https://github.com/fission-suite/nextjs-blog-starter-typescript-ghost\">give a  ⭐️</a>  if you liked this project! We appreciate it :)</p>\n<!--kg-card-end: markdown--><h3></h3>","url":"https://blog.fission.codes/headless-ghost-blog-fission/","canonical_url":null,"uuid":"7e883b34-c739-4a41-a751-d695e25aa927","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"60210daa2dc76c001e5a3301","reading_time":null}}]}},"pageContext":{"slug":"agentofuser","pageNumber":0,"humanPageNumber":1,"skip":0,"limit":12,"numberOfPages":1,"previousPagePath":"","nextPagePath":""}}