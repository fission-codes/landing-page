{"data":{"ghostTag":{"slug":"interview","name":"Interview","feature_image":null,"description":null,"meta_title":null,"meta_description":null},"allGhostPost":{"edges":[{"node":{"id":"Ghost__Post__6026e82a522a8e001e882099","title":"Startup Vancouver Interviews Boris Mann about Fission","slug":"startup-vancouver-interviews-boris-mann","featured":false,"feature_image":"https://s3.fission.codes/2021/02/startupvancouver-ep044.jpeg","excerpt":"CEO & Co-founder of Fission, Boris Mann, is interviewed by Reza Varzidehkar as part of the Startup Vancouver Episode 44. Boris covers some of the vision and mission behind what Fission is building.","custom_excerpt":"CEO & Co-founder of Fission, Boris Mann, is interviewed by Reza Varzidehkar as part of the Startup Vancouver Episode 44. Boris covers some of the vision and mission behind what Fission is building.","created_at_pretty":"12 February, 2021","published_at_pretty":"12 February, 2021","updated_at_pretty":"14 February, 2021","created_at":"2021-02-12T12:42:18.000-08:00","published_at":"2021-02-12T14:26:04.000-08:00","updated_at":"2021-02-14T01:13:53.000-08:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"},{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"}],"primary_author":{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"},"primary_tag":{"name":"Presentations","slug":"presentation","description":null,"feature_image":"https://images.unsplash.com/photo-1535016120720-40c646be5580?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","meta_description":null,"meta_title":null},"tags":[{"name":"Presentations","slug":"presentation","description":null,"feature_image":"https://images.unsplash.com/photo-1535016120720-40c646be5580?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","meta_description":null,"meta_title":null},{"name":"Interview","slug":"interview","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"videos","slug":"videos","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Startup Vancouver","slug":"startup-vancouver","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"I was invited to join Episode 44 of Startup Vancouver's #WhatKeepsYouUpAtNight\n[https://www.eventbrite.ca/e/the-what-keeps-you-up-at-night-show-episode-044-tickets-140442079039] \n show. I was interviewed by Reza Varzidehkar. The Q&A format was a really great\nchance to talk about some of the vision and \"why\" behind what we're doing, as\nwell as explain some of the technical building blocks of how Fission works.\n\nHere's the 17 minute clip of my interview:\n\nDirect link to video vimeo.com/511387825 [https://vimeo.com/511387825]The\nco-hosts of the show are Maryam Mobini\n[https://www.linkedin.com/in/maryammobini/], Colin Weston\n[https://www.linkedin.com/in/colin-weston-48bab63/]  and Reza Vee\n[https://www.linkedin.com/in/rezavee/]. Thanks Reza for interviewing me, and\nColin for inviting me!\n\nOther guests included  Melanie Ewan [https://www.linkedin.com/in/melanieewan/] \nof Volition Advisors [http://volitionadvisors.com/], and James Basnett\n[https://www.linkedin.com/in/james-basnett/]  of Shape\n[https://shapeimmersive.com/3d-ar/].\n\nThe full episode is available on YouTube\n[https://www.youtube.com/watch?v=PUMsDXyrueg]. The events are free to attend,\nbut donations are accepted on behalf of jack.org [https://jack.org/], \"Canada's\nonly charity that trains and empowers young leaders to revolutionize mental\nhealth in every province and territory\".","html":"<p>I was invited to join <a href=\"https://www.eventbrite.ca/e/the-what-keeps-you-up-at-night-show-episode-044-tickets-140442079039\">Episode 44 of Startup Vancouver's #WhatKeepsYouUpAtNight</a> show. I was interviewed by Reza Varzidehkar. The Q&amp;A format was a really great chance to talk about some of the vision and \"why\" behind what we're doing, as well as explain some of the technical building blocks of how Fission works.</p><p>Here's the 17 minute clip of my interview:</p><!--kg-card-begin: embed--><figure class=\"kg-card kg-embed-card kg-card-hascaption\"><iframe src=\"https://player.vimeo.com/video/511387825?app_id=122963\" width=\"640\" height=\"336\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen title=\"Startup Vancouver Episode 044: Reza Varzidehkar interviews Boris Mann\"></iframe><figcaption><a href=\"https://vimeo.com/511387825\">Direct link to video vimeo.com/511387825</a></figcaption></figure><!--kg-card-end: embed--><p>The co-hosts of the show are <a href=\"https://www.linkedin.com/in/maryammobini/\" rel=\"nofollow noopener noreferrer\">Maryam Mobini</a>, <a href=\"https://www.linkedin.com/in/colin-weston-48bab63/\" rel=\"nofollow noopener noreferrer\">Colin Weston</a> and <a href=\"https://www.linkedin.com/in/rezavee/\" rel=\"nofollow noopener noreferrer\">Reza Vee</a>. Thanks Reza for interviewing me, and Colin for inviting me!</p><p>Other guests included<a href=\"https://www.linkedin.com/in/melanieewan/\"> Melanie Ewan</a> of <a href=\"http://volitionadvisors.com/\">Volition Advisors</a>, and <a href=\"https://www.linkedin.com/in/james-basnett/\">James Basnett</a> of <a href=\"https://shapeimmersive.com/3d-ar/\">Shape</a>.</p><p>The full episode is <a href=\"https://www.youtube.com/watch?v=PUMsDXyrueg\">available on YouTube</a>. The events are free to attend, but donations are accepted on behalf of <a href=\"https://jack.org/\">jack.org</a>, \"Canada's only charity that trains and empowers young leaders to revolutionize mental health in every province and territory\".</p>","url":"https://blog.fission.codes/startup-vancouver-interviews-boris-mann/","canonical_url":null,"uuid":"21421a8a-824e-4647-b32d-81265a123814","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"6026e82a522a8e001e882099","reading_time":null}},{"node":{"id":"Ghost__Post__5d0d2930fc1401001e491678","title":"Open Collective Interview with Brooke","slug":"open-collective-brooke-interview-witchcraft","featured":false,"feature_image":"https://s3.fission.codes/2019/06/brooke-talking.jpeg","excerpt":"Alanna Irving from the Open Collective team interviewed Brooke on Witchcraft:\nthe magic of math, functional programming, and community\n[https://medium.com/open-collective/witchcraft-the-magic-of-math-functional-programming-and-community-b45bc7213ff8]\n.\n\nDid you know she started in music composition?\n\n> Programming absolutely scratches the same part of my brain as music composition.\nInstead of writing instructions for an instrumentalist, you’re writing it for a\ncomputer, but the parallels are ver","custom_excerpt":null,"created_at_pretty":"21 June, 2019","published_at_pretty":"21 June, 2019","updated_at_pretty":"21 June, 2019","created_at":"2019-06-21T12:00:00.000-07:00","published_at":"2019-06-21T12:10:47.000-07:00","updated_at":"2019-06-21T12:10:47.000-07:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"},{"name":"Brooklyn Zelenka","slug":"expede","bio":"CTO at Fission ♥λ Programs with functions","profile_image":"https://s3.fission.codes/2019/05/IMG_2934-square.jpeg","twitter":"@expede","facebook":null,"website":null}],"primary_author":{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"},"primary_tag":{"name":"Press","slug":"press","description":null,"feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"Press","slug":"press","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Open Collective","slug":"open-collective","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Interview","slug":"interview","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Witchcraft","slug":"witchcraft","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"open source","slug":"open-source","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"Alanna Irving from the Open Collective team interviewed Brooke on Witchcraft:\nthe magic of math, functional programming, and community\n[https://medium.com/open-collective/witchcraft-the-magic-of-math-functional-programming-and-community-b45bc7213ff8]\n.\n\nDid you know she started in music composition?\n\n> Programming absolutely scratches the same part of my brain as music composition.\nInstead of writing instructions for an instrumentalist, you’re writing it for a\ncomputer, but the parallels are very clear. All but one person in my composition\ncohort (who became a professor of music) are now programmers, because it was a\ncrash course in that way of thinking.\nIt's a great overview of Brooke's background, her love of functional programming\nand math, and the Witchcraft library for Elixir\n[https://github.com/witchcrafters/witchcraft].","html":"<p>Alanna Irving from the Open Collective team <a href=\"https://medium.com/open-collective/witchcraft-the-magic-of-math-functional-programming-and-community-b45bc7213ff8\">interviewed Brooke on Witchcraft: the magic of math, functional programming, and community</a>.</p><p>Did you know she started in music composition?</p><blockquote>Programming absolutely scratches the same part of my brain as music composition. Instead of writing instructions for an instrumentalist, you’re writing it for a computer, but the parallels are very clear. All but one person in my composition cohort (who became a professor of music) are now programmers, because it was a crash course in that way of thinking.</blockquote><p>It's a great overview of Brooke's background, her love of functional programming and math, and the <a href=\"https://github.com/witchcrafters/witchcraft\">Witchcraft library for Elixir</a>. </p>","url":"https://blog.fission.codes/open-collective-brooke-interview-witchcraft/","canonical_url":null,"uuid":"aafe21b8-c7cf-45d3-a45d-f6c7e2f39466","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5d0d2930fc1401001e491678","reading_time":null}},{"node":{"id":"Ghost__Post__5ceda0a70bff56001eb87dd5","title":"FISSION Interviews: Y3","slug":"interview-y3","featured":false,"feature_image":"https://s3.fission.codes/2019/06/Untitled-2-01-1.png","excerpt":"Dive into an IPFS hack from ETHNewYork by Kian Molani called Y3: a decentralized and censorship-resistant video streaming application","custom_excerpt":"Dive into an IPFS hack from ETHNewYork by Kian Molani called Y3: a decentralized and censorship-resistant video streaming application","created_at_pretty":"28 May, 2019","published_at_pretty":"20 June, 2019","updated_at_pretty":"20 June, 2019","created_at":"2019-05-28T13:57:11.000-07:00","published_at":"2019-06-20T06:22:37.000-07:00","updated_at":"2019-06-20T07:08:06.000-07:00","meta_title":null,"meta_description":"Dive into an IPFS hack from ETHNewYork by Kian Molani called Y3: a decentralized and censorship-resistant video streaming application","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Trenton Van Epps","slug":"trenton","bio":"Former architect working to grow the Ethereum ecosystem and Web3 tech.","profile_image":"https://s3.fission.codes/2019/05/14054274_10155286912259062_1515671855628123823_o.jpg","twitter":"@trent_vanepps","facebook":null,"website":null}],"primary_author":{"name":"Trenton Van Epps","slug":"trenton","bio":"Former architect working to grow the Ethereum ecosystem and Web3 tech.","profile_image":"https://s3.fission.codes/2019/05/14054274_10155286912259062_1515671855628123823_o.jpg","twitter":"@trent_vanepps","facebook":null,"website":null},"primary_tag":{"name":"EthNewYork","slug":"ethnewyork","description":null,"feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"EthNewYork","slug":"ethnewyork","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"IPFS","slug":"ipfs","description":"InterPlanetary File System","feature_image":null,"meta_description":null,"meta_title":null},{"name":"Interview","slug":"interview","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"hackathon","slug":"hackathon","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Ethereum","slug":"ethereum","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"This is the third post in a series that highlights projects developing solutions\nthat challenge the current norms of user dependency on the cloud. Given the ever\npresent challenges related to privacy, database breaches and platform lock-in,\nit's crucial to begin returning data autonomy back to users. \n\nThis post highlights an ETHNewYork [https://ethnewyork.com/]  submission from \nKian Molani [https://twitter.com/KianMolani]  called Y3\n[https://devpost.com/software/y3-l8w9mx]: \"a decentralized and\ncensorship-resistant video streaming application that uses Ethereum and IPFS as\nits core technologies.\" ETHNewYork was the first hackathon run in NYC by\nETHglobal, an organisation dedicated to onboarding new Ethereum developers.\nFirst we'll look at how the project works, followed by a few questions FISSION\nasked the team about their background and hackathon experience.\n\nHackathon Devpost: https://devpost.com/software/y3-l8w9mx\n\nRepo: https://github.com/KianMolani/decentralized_video_streaming_app\n\n\n--------------------------------------------------------------------------------\n\nHow Y3 works\nThe name originated as an aspirational take on where video platforms might head\nin our distributed future. If Youtube (Y2) is a legacy system that can censor\nusers and withhold payments for content, Y3 is an exploration towards a future\nwhere new possibilities open up. Self-hosted, replicated content can't be taken\ndown, and payments over Ethereum are censorship resistant to a high degree.\n\nThe first step for users is to be running or have access to an IPFS node. After\nloading their content into the IPFS interface [https://dist.ipfs.io/#go-ipfs],\nusers submit a content hash to the Y3 onchain Ethereum contract. The video\nmetadata gets stored in a contract array to be accessed later by users.\n\nPayment, if required, would be handled via a Python script, conditional upon\nsuccessful delivery of content from the IPFS network. The contract would then\ncall a function that sets up the transaction. This is one thing that still needs\nto be developed for the project to operate properly. According to Kian,  this\nkind of payment scheme wouldn't be practical in reality: \n\n> Instead, an implementation of either state channels or probabilistic\nmicropayments –with the total time of video content already streamed taken to be\nthe primary metric for payment – would be more apt.\nHLS [https://en.wikipedia.org/wiki/HTTP_Live_Streaming]  (HTTP Live Streaming)\nand IPNS [https://docs.ipfs.io/guides/concepts/ipns/]  (InterPlanetary Naming\nSystem) integrations are also still under development. For now, Y3 can only\nserve static content. IPNS would make those links mutable, and would update the\ncontent address as new chunks of data come in.\n\nOther important libraries used are web3.JS\n[https://web3js.readthedocs.io/en/1.0/], Infura's API\n[https://infura.io/docs/gettingStarted/makeRequests.md]  for Ethereum\nintegration, and FFmpeg [https://ffmpeg.org/]  for HLS capable video editing.\n\nIn the future, Kian would like to add a more intuitive frontend. The FISSION\nteam is looking forward to seeing where the project ends up and what functions\nhe can integrate!\n\n\n--------------------------------------------------------------------------------\n\nFinally, here are a few additional questions we had Kian answer about his\nbackground and the hackathon itself:\n\nWhat’s your background as a developer?\n\nI’m currently 21, and so I’m still pursuing my undergrad. As an Engineering\nPhysics major, I’m not left with a lot of time during the semester to develop\nEthereum-related projects, but do develop data processing and machine learning\nsoftware professionally. When I have the time, most of the work that I do in the\ndecentralized space are through hackathons. Thus far, I’ve been to two ETHGlobal\nevents, where the focus of my energy has been to develop two pieces of tech — a\ndecentralized video streaming application and a decentralized computation\napplication.\n\nWhat got you into Ethereum / IPFS / decentralization initially?\n\nI along with most of my peers had heard of the decentralized space via word of\nmouth - at the time, most of the popular discussion surrounded cryptocurrencies.\nOut of curiosity and a desire to distinguish ourselves from the hype, my\ncolleagues and I decided to look more carefully at the tech behind all these\npopular ideas. Eventually, we came to a point where we were able to judge, for\nourselves, that the technology had real value and a wide selection of practical\nand worth-while use cases. Naturally, this realization lent itself to a\nheightened sense of curiosity and greater exposure to more complex and\ncutting-edge developments in the space.\n\nWhere do you go to read tech news / developer news?\n\nFor tech and developer news, I find Twitter to be ideal. In a sense, Twitter is\na very weak filter on ideas, and so when you have a community that is very\nactive on the platform (which is the case for decentralized technologies), the\nresult is a large number of leading figures engaged in discussions on very novel\nconcepts. The downside to this kind of environment is that you’re forced to\njudge for yourself the quality of ideas that have not yet been fully hashed out,\nwhile the upside is that you’re exposed to ideas soon after they’re born.\n\nIn general, talk about your hackathon experience? Highs / lows?\n\nOne of the strong points of this hackathon was that there was a large pool of\nsponsors present there to talk about their products. This made for very fruitful\nand exciting workshops, and along with the large number of high quality hackers\npresent, meant that exposure to new and exciting projects was high.\n\nWhat inspired Y3?\n\nA video steaming application is one of those use cases for decentralized\ntechnologies where the benefits are very obvious to see – you don’t have go\nthrough leaps in logic to explain why it would be useful for people. As a\nplatform, video streaming applications are one of the hallmark luxuries that\nwe’ve been afforded due to the Internet. With them, people are able to share all\nkinds of information in a way that is immediately accessible and highly\nengaging. This luxury, however, isn’t afforded to the billions of people around\nthe world whose governments maintain tight control on Internet transparency.\nThus, the market for this kind of product is huge, and the motivation for the\npursuit of its realization is noble.\n\nWhat made you want to integrate IPFS?\n\nIPFS emerged as a natural solution to what I wanted, and that was a way to store\nthe contents of videos on a decentralized, peer-to-peer network. As a solution,\nit was fairly elegant – the only major disadvantage being the lack of\npersistence of content on the network. This issue, however, is actively being\naddressed by developers of the protocol.\n\nWhat challenges did you experience integrating IPFS?\n\nConnecting my computer to the IPFS network and integrating the appropriate\nPython client libraries were all very straightforward. By far, the biggest\nchallenge that I encountered was in trying to use IPFS in a way that allowed for\nHLS functionality (HLS is a communications protocol that allows for the bit rate\nof incoming data to vary in accordance with the quality of network\nconnectivity).\n\nWhat was the most useful feedback you received from judges or other hackathon\nparticipants?\n\nAfter expressing the difficulty that I encountered in trying to properly\nintegrate IPFS with HLS, I was able to obtain feedback from a gentleman from\nLivepeer (a Platform as a Service used by developers to add videos to their\nprojects). He explained how I could use IPNS (a system used to update links to\nIPFS content) to handle updating a pointer to the hash of the file contents\nperiodically.\n\nAny plans to keep working on the project?\n\nYes. My application does not completely function as intended. I will finish\nproperly implementing HLS functionality and then go on to share the project\nonline.\n\nIn hindsight what’s something you may have done differently for either the\nproject or the hackathon?\n\nI actually anticipated the issue that I had regarding the implementation of HLS\nfunctionality with IPFS before I even started the project. In hindsight, I\nshould have sought out a solution to my problem well before I ever encountered\nit.\n\n\n--------------------------------------------------------------------------------\n\n\nThanks Kian for spending time to help get this post ready for others to learn\nfrom. FISSION is gearing up to launch our first product into Alpha testing: \njoin\nus here [https://www.producthunt.com/upcoming/fission-tools]  if you're\ninterested in poking around the distributed frontier!\n\n\n--------------------------------------------------------------------------------\n\nCover image [https://unsplash.com/photos/WshiPS0giIg]  from Craig Whitehead\n[https://unsplash.com/@sixstreetunder]","html":"<p>This is the third post in a series that highlights projects developing solutions that challenge the current norms of user dependency on the cloud. Given the ever present challenges related to privacy, database breaches and platform lock-in, it's crucial to begin returning data autonomy back to users. </p><p>This post highlights an <a href=\"https://ethnewyork.com/\">ETHNewYork</a> submission from <a href=\"https://twitter.com/KianMolani\">Kian Molani</a> called <a href=\"https://devpost.com/software/y3-l8w9mx\">Y3</a>: \"a decentralized and censorship-resistant video streaming application that uses Ethereum and IPFS as its core technologies.\" ETHNewYork was the first hackathon run in NYC by ETHglobal, an organisation dedicated to onboarding new Ethereum developers. First we'll look at how the project works, followed by a few questions FISSION asked the team about their background and hackathon experience.</p><p>Hackathon Devpost: <a href=\"https://devpost.com/software/y3-l8w9mx\">https://devpost.com/software/y3-l8w9mx</a></p><p>Repo: <a href=\"https://github.com/KianMolani/decentralized_video_streaming_app\">https://github.com/KianMolani/decentralized_video_streaming_app</a></p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><h3 id=\"how-y3-works\">How Y3 works</h3><p>The name originated as an aspirational take on where video platforms might head in our distributed future. If Youtube (Y2) is a legacy system that can censor users and withhold payments for content, Y3 is an exploration towards a future where new possibilities open up. Self-hosted, replicated content can't be taken down, and payments over Ethereum are censorship resistant to a high degree.</p><p>The first step for users is to be running or have access to an IPFS node. After loading their content into the <a href=\"https://dist.ipfs.io/#go-ipfs\">IPFS interface</a>, users submit a content hash to the Y3 onchain Ethereum contract. The video metadata gets stored in a contract array to be accessed later by users.</p><p>Payment, if required, would be handled via a Python script, conditional upon successful delivery of content from the IPFS network. The contract would then call a function that sets up the transaction. This is one thing that still needs to be developed for the project to operate properly. According to Kian,  this kind of payment scheme wouldn't be practical in reality: </p><blockquote>Instead, an implementation of either state channels or probabilistic micropayments –with the total time of video content already streamed taken to be the primary metric for payment – would be more apt.</blockquote><p><a href=\"https://en.wikipedia.org/wiki/HTTP_Live_Streaming\">HLS</a> (HTTP Live Streaming) and <a href=\"https://docs.ipfs.io/guides/concepts/ipns/\">IPNS</a> (InterPlanetary Naming System) integrations are also still under development. For now, Y3 can only serve static content. IPNS would make those links mutable, and would update the content address as new chunks of data come in.</p><p>Other important libraries used are <a href=\"https://web3js.readthedocs.io/en/1.0/\">web3.JS</a>, <a href=\"https://infura.io/docs/gettingStarted/makeRequests.md\">Infura's API</a> for Ethereum integration, and <a href=\"https://ffmpeg.org/\">FFmpeg</a> for HLS capable video editing.</p><p>In the future, Kian would like to add a more intuitive frontend. The FISSION team is looking forward to seeing where the project ends up and what functions he can integrate!</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://s3.fission.codes/2019/06/blog-header-image-19.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p>Finally, here are a few additional questions we had Kian answer about his background and the hackathon itself:</p><p><strong>What’s your background as a developer?</strong></p><p>I’m currently 21, and so I’m still pursuing my undergrad. As an Engineering Physics major, I’m not left with a lot of time during the semester to develop Ethereum-related projects, but do develop data processing and machine learning software professionally. When I have the time, most of the work that I do in the decentralized space are through hackathons. Thus far, I’ve been to two ETHGlobal events, where the focus of my energy has been to develop two pieces of tech — a decentralized video streaming application and a decentralized computation application.</p><p><strong>What got you into Ethereum / IPFS / decentralization initially?</strong></p><p>I along with most of my peers had heard of the decentralized space via word of mouth - at the time, most of the popular discussion surrounded cryptocurrencies. Out of curiosity and a desire to distinguish ourselves from the hype, my colleagues and I decided to look more carefully at the tech behind all these popular ideas. Eventually, we came to a point where we were able to judge, for ourselves, that the technology had real value and a wide selection of practical and worth-while use cases. Naturally, this realization lent itself to a heightened sense of curiosity and greater exposure to more complex and cutting-edge developments in the space.</p><p><strong>Where do you go to read tech news / developer news?</strong></p><p>For tech and developer news, I find Twitter to be ideal. In a sense, Twitter is a very weak filter on ideas, and so when you have a community that is very active on the platform (which is the case for decentralized technologies), the result is a large number of leading figures engaged in discussions on very novel concepts. The downside to this kind of environment is that you’re forced to judge for yourself the quality of ideas that have not yet been fully hashed out, while the upside is that you’re exposed to ideas soon after they’re born.</p><p><strong>In general, talk about your hackathon experience? Highs / lows?</strong></p><p>One of the strong points of this hackathon was that there was a large pool of sponsors present there to talk about their products. This made for very fruitful and exciting workshops, and along with the large number of high quality hackers present, meant that exposure to new and exciting projects was high.</p><p><strong>What inspired Y3?</strong></p><p>A video steaming application is one of those use cases for decentralized technologies where the benefits are very obvious to see – you don’t have go through leaps in logic to explain why it would be useful for people. As a platform, video streaming applications are one of the hallmark luxuries that we’ve been afforded due to the Internet. With them, people are able to share all kinds of information in a way that is immediately accessible and highly engaging. This luxury, however, isn’t afforded to the billions of people around the world whose governments maintain tight control on Internet transparency. Thus, the market for this kind of product is huge, and the motivation for the pursuit of its realization is noble.</p><p><strong>What made you want to integrate IPFS?</strong></p><p>IPFS emerged as a natural solution to what I wanted, and that was a way to store the contents of videos on a decentralized, peer-to-peer network. As a solution, it was fairly elegant – the only major disadvantage being the lack of persistence of content on the network. This issue, however, is actively being addressed by developers of the protocol.</p><p><strong>What challenges did you experience integrating IPFS?</strong></p><p>Connecting my computer to the IPFS network and integrating the appropriate Python client libraries were all very straightforward. By far, the biggest challenge that I encountered was in trying to use IPFS in a way that allowed for HLS functionality (HLS is a communications protocol that allows for the bit rate of incoming data to vary in accordance with the quality of network connectivity).</p><p><strong>What was the most useful feedback you received from judges or other hackathon participants?</strong></p><p>After expressing the difficulty that I encountered in trying to properly integrate IPFS with HLS, I was able to obtain feedback from a gentleman from Livepeer (a Platform as a Service used by developers to add videos to their projects). He explained how I could use IPNS (a system used to update links to IPFS content) to handle updating a pointer to the hash of the file contents periodically.</p><p><strong>Any plans to keep working on the project?</strong></p><p>Yes. My application does not completely function as intended. I will finish properly implementing HLS functionality and then go on to share the project online.</p><p><strong>In hindsight what’s something you may have done differently for either the project or the hackathon?</strong></p><p>I actually anticipated the issue that I had regarding the implementation of HLS functionality with IPFS before I even started the project. In hindsight, I should have sought out a solution to my problem well before I ever encountered it.</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://s3.fission.codes/2019/06/blog-header-image-18.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><p><br>Thanks Kian for spending time to help get this post ready for others to learn from. FISSION is gearing up to launch our first product into Alpha testing: <a href=\"https://www.producthunt.com/upcoming/fission-tools\">join us here</a> if you're interested in poking around the distributed frontier!</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p><em><a href=\"https://unsplash.com/photos/WshiPS0giIg\">Cover image</a> from <a href=\"https://unsplash.com/@sixstreetunder\">Craig Whitehead</a></em></p>","url":"https://blog.fission.codes/interview-y3/","canonical_url":null,"uuid":"144e9c98-16c6-476f-81f0-6dd8f592bc24","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5ceda0a70bff56001eb87dd5","reading_time":null}},{"node":{"id":"Ghost__Post__5ced76e00bff56001eb87d96","title":"FISSION Interviews: Diffuse","slug":"fission-interviews-diffuse","featured":false,"feature_image":"https://images.unsplash.com/photo-1512998844734-cd2cca565822?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","excerpt":"Interviewing Steven Vandevelde, the creator of Diffuse: a tool that connects you to your cloud/distributed music storage.","custom_excerpt":"Interviewing Steven Vandevelde, the creator of Diffuse: a tool that connects you to your cloud/distributed music storage.","created_at_pretty":"28 May, 2019","published_at_pretty":"13 June, 2019","updated_at_pretty":"13 June, 2019","created_at":"2019-05-28T10:58:56.000-07:00","published_at":"2019-06-13T12:48:29.000-07:00","updated_at":"2019-06-13T13:20:59.000-07:00","meta_title":null,"meta_description":"Interviewing Steven Vandevelde, the creator of Diffuse: a tool that connects to your cloud/distributed music storage","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Trenton Van Epps","slug":"trenton","bio":"Former architect working to grow the Ethereum ecosystem and Web3 tech.","profile_image":"https://s3.fission.codes/2019/05/14054274_10155286912259062_1515671855628123823_o.jpg","twitter":"@trent_vanepps","facebook":null,"website":null}],"primary_author":{"name":"Trenton Van Epps","slug":"trenton","bio":"Former architect working to grow the Ethereum ecosystem and Web3 tech.","profile_image":"https://s3.fission.codes/2019/05/14054274_10155286912259062_1515671855628123823_o.jpg","twitter":"@trent_vanepps","facebook":null,"website":null},"primary_tag":{"name":"IPFS","slug":"ipfs","description":"InterPlanetary File System","feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"IPFS","slug":"ipfs","description":"InterPlanetary File System","feature_image":null,"meta_description":null,"meta_title":null},{"name":"Blockstack","slug":"blockstack","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"music","slug":"music","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Interview","slug":"interview","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Local Software","slug":"local-software","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"This is the second post in a series that highlights projects developing\nsolutions that challenge the current norms of user dependency on the cloud.\nGiven the ever present challenges related to privacy, database breaches and\nplatform lock-in, it's crucial to begin returning data autonomy back to users. \n\nFor this issue, we're diving into Steven Vandevelde\n[https://twitter.com/icidasset]'s Diffuse: a music player that connects to your\ncloud/distributed music storage. First we'll look at how the project works,\nfollowed by a few questions FISSION asking about Steven's background.\n\nRepo: https://github.com/icidasset/diffuse\n\nTry it out yourself: https://diffuse.sh [https://diffuse.sh/]\n\n\n--------------------------------------------------------------------------------\n\nHow does Diffuse work\n\nThe basic idea is that users should be able to access music files they own from\nanywhere, even local content.  This ranges from cloud servers like Dropbox or\nGoogle Drive to distributed storage solutions like IPFS. Steven has been\niterating on Diffuse, written in Elm [https://elm-lang.org/], for over 6 years\nnow. The Diffuse About [https://diffuse.sh/about/]  page also has some good\ninformation.\n\nThere are three main pieces to the product: the user data storage,  the file  \nstorage medium, and  the frontend  which sits between them both. \n\nTo start a user would navigate to diffuse.sh [https://diffuse.sh], no need to\ninstall anything. In the current V1, users can authenticate themselves through \nBlockstack [https://blockstack.org/], Remote Storage [https://remotestorage.io/] \n or use the product anonymously via the browser.\n\nhere's what the user sees firstUsing a proper authentication method allows users\nto save things like music metadata, user favourites, and settings, whereas an\n\"anonymous\" login may result in data loss if the browser is cleared. Once they\nhave been authenticated, users are able to add new content or access previously\nadded content. \n\nThe user facing front-end is hosted on Netlify [https://www.netlify.com/].\nFurther down the decentralisation spectrum, it's certainly possible to self-host\nthe frontend by downloading the html and mimicking Netlify (check this IPFS +\nENS site hosting tutorial\n[https://gateway.ipfs.io/ipfs/QmUJKsA1FQRo4rGKJ9WAXNnv6o6HXy4NoJiWH97gPZUddV/ens+ipfs/ENSIPFS-Part-1-Introduction.html]\n). \n\nHere's an example of what would happen under the hood for a file hosted on\nGoogle Drive. Once a user authenticates on Diffuse and requests to add a file,\nthey will be logged into their Google account and asked to allow permissions to\nthe Diffuse app. Once granted, the app will request that Drive construct a\nfiletree, which is a list containing the path to every audio file. It works in\nchunks of 1000 files requested from each url and then gets the music\ntags/metadata from each file via the JSmediatags library\n[https://github.com/aadsm/jsmediatags]. The parsed metadata from those files is\nthen cached in a user's storage provider: in V1 this is limited to either\nBlockstack or RemoteStorage. That way, when a user logs in and any metadata from\npreviously loaded music is already there.\n\nOnce music on the storage medium has been identified and the metadata cached,\nthe app users can enjoy whatever music files they have saved. Content searching\nis facilitated by the Lunr library [https://github.com/olivernn/lunr.js/].\n\nA V2 is already in the works to make the entire product more user friendly. This\nnext version will have data encryption, and even more storage options, including\n Textile [https://textile.io/]  for user data, or Blockstack's Gaia\n[https://docs.blockstack.org/storage/overview.html]  for file access. Fission is\nlooking forward to when the V2 is live hopefully later this summer. We'll plan\nto do a blog post then detailing any of the updates.\n\n\n--------------------------------------------------------------------------------\n\nFinally, here's a set of questions we asked Steven.\n\nWhat’s your background as a developer?\n\nStarted with web dev as a hobby when I was 15 (I’m 29 now). First gig was for a\nweb agency, mainly doing small artsy websites and a cms using ruby. Four years\nlater I started working for another agency, but mainly doing app development.\nI've been doing all kinds of dev things in my spare time, but my main side\nproject for the last 8 years has been Diffuse and its predecessors.\n\nWhere do you go to read tech news / developer news?\n\nTwitter, email newsletters, slack/discord channels\n\nWhat first inspired Diffuse?\n\nSomeone asked me to build a UI for https://github.com/trevorturk/kzak, and at\nthe same time I was collecting music. Seemed like an interesting idea and fun to\nwork on. Also, I used Spotify for a while, but they kept silently removing some\nof my favourite music, after that I never turned back.\n\nHow has user testing gone?\n\nCould be better. People like the design, made a few feature requests, but never\nreally expressed what could be better. That said, Blockstack recently put\nDiffuse on https://www.trymyui.com/  which has given me good feedback.\n\nWhere have you gotten the bulk of your users?\n\nIPFS forum, https://electronjs.org/apps/diffuse  and chinese/japanese blogs\nabout IPFS. I think… I don’t have any analytics except on Github, so I don’t\nreally know.\n\nWhat was the most useful feedback you’ve received?\n\n“I don’t know how to use this”\n\nWhat is the benefit of using Blockstack? Drawbacks?\n\nEasy decentralized authentication. Drawback, way too much javascript, bad\nperformance.\n\nIf you were to redesign or reset your structure what would you have done\ndifferently?\n\nI’m currently working on V2, which is built from scratch. So this’ll be easy to\nanswer 😄 I like the design very much so that stayed the same, just more fine\ntuned, more attention to detail. Structure has improved as well, better\nperformance, moved more things on the web-worker side, easier to extend (build\non).\n\nWhat challenges did you experience integrating IPFS?\n\n  I don’t really remember the music-storage integration, was over a year ago.\nBut I think it went pretty smoothly, except for a CORS issue which was later\nresolved in go-ipfs. I recently did IPFS “authentication”, or in other words\nuser-data storage, which is the unpublished work-in-progress V2. That was more\nchallenging, I had to find a good way to encrypt the user’s data.\n\n\n--------------------------------------------------------------------------------\n\nThanks Steven for spending time to help get this ready for others to learn from.\nWe'll be posting other IPFS projects on this blog as well >> be sure to check\nback soon.\n\n\n--------------------------------------------------------------------------------\n\nCover image [https://unsplash.com/photos/9f1gCaLkZBU]  from David Jorre\n[https://unsplash.com/@davidjorre]","html":"<p>This is the second post in a series that highlights projects developing solutions that challenge the current norms of user dependency on the cloud. Given the ever present challenges related to privacy, database breaches and platform lock-in, it's crucial to begin returning data autonomy back to users. </p><p>For this issue, we're diving into <a href=\"https://twitter.com/icidasset\">Steven Vandevelde</a>'s Diffuse: a music player that connects to your cloud/distributed music storage. First we'll look at how the project works, followed by a few questions FISSION asking about Steven's background.</p><p>Repo: <a href=\"https://github.com/icidasset/diffuse\">https://github.com/icidasset/diffuse</a></p><p>Try it out yourself: <a href=\"https://diffuse.sh/\">https://diffuse.sh</a></p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p><strong>How does Diffuse work</strong></p><p>The basic idea is that users should be able to access music files they own from anywhere, even local content.  This ranges from cloud servers like Dropbox or Google Drive to distributed storage solutions like IPFS. Steven has been iterating on Diffuse, <a href=\"https://elm-lang.org/\">written in Elm</a>, for over 6 years now. The Diffuse <a href=\"https://diffuse.sh/about/\">About</a> page also has some good information.</p><p>There are three main pieces to the product: the <strong>user data storage,</strong> the <strong>file</strong> <strong>storage medium, </strong>and<strong> </strong>the <strong>frontend</strong> which sits between them both. </p><p>To start a user would navigate to <a href=\"https://diffuse.sh\">diffuse.sh</a>, no need to install anything. In the current V1, users can authenticate themselves through <a href=\"https://blockstack.org/\">Blockstack</a>, <a href=\"https://remotestorage.io/\">Remote Storage</a> or use the product anonymously via the browser.  </p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://s3.fission.codes/2019/06/Screen-Shot-2019-06-13-at-11.26.10.png\" class=\"kg-image\"><figcaption>here's what the user sees first</figcaption></figure><!--kg-card-end: image--><p>Using a proper authentication method allows users to save things like music metadata, user favourites, and settings, whereas an \"anonymous\" login may result in data loss if the browser is cleared. Once they have been authenticated, users are able to add new content or access previously added content. </p><p>The user facing front-end is hosted on <a href=\"https://www.netlify.com/\">Netlify</a>. Further down the decentralisation spectrum, it's certainly possible to self-host the frontend by downloading the html and mimicking Netlify (check this IPFS + ENS site <a href=\"https://gateway.ipfs.io/ipfs/QmUJKsA1FQRo4rGKJ9WAXNnv6o6HXy4NoJiWH97gPZUddV/ens+ipfs/ENSIPFS-Part-1-Introduction.html\">hosting tutorial</a>). </p><p>Here's an example of what would happen under the hood for a file hosted on Google Drive. Once a user authenticates on Diffuse and requests to add a file, they will be logged into their Google account and asked to allow permissions to the Diffuse app. Once granted, the app will request that Drive construct a filetree, which is a list containing the path to every audio file. It works in chunks of 1000 files requested from each url and then gets the music tags/metadata from each file via the <a href=\"https://github.com/aadsm/jsmediatags\">JSmediatags library</a>. The parsed metadata from those files is then cached in a user's storage provider: in V1 this is limited to either Blockstack or RemoteStorage. That way, when a user logs in and any metadata from previously loaded music is already there.</p><p>Once music on the storage medium has been identified and the metadata cached, the app users can enjoy whatever music files they have saved. Content searching is facilitated by the <a href=\"https://github.com/olivernn/lunr.js/\">Lunr library</a>.</p><p>A V2 is already in the works to make the entire product more user friendly. This next version will have data encryption, and even more storage options, including <a href=\"https://textile.io/\">Textile</a> for user data, or <a href=\"https://docs.blockstack.org/storage/overview.html\">Blockstack's Gaia</a> for file access. Fission is looking forward to when the V2 is live hopefully later this summer. We'll plan to do a blog post then detailing any of the updates.</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p>Finally, here's a set of questions we asked Steven.</p><p><strong>What’s your background as a developer?</strong></p><p>Started with web dev as a hobby when I was 15 (I’m 29 now). First gig was for a web agency, mainly doing small artsy websites and a cms using ruby. Four years later I started working for another agency, but mainly doing app development. I've been doing all kinds of dev things in my spare time, but my main side project for the last 8 years has been Diffuse and its predecessors.</p><p><strong>Where do you go to read tech news / developer news?</strong></p><p>Twitter, email newsletters, slack/discord channels</p><p><strong>What first inspired Diffuse?</strong></p><p>Someone asked me to build a UI for <a href=\"https://github.com/trevorturk/kzak\">https://github.com/trevorturk/kzak</a>, and at the same time I was collecting music. Seemed like an interesting idea and fun to work on. Also, I used Spotify for a while, but they kept silently removing some of my favourite music, after that I never turned back.</p><p><strong>How has user testing gone?</strong></p><p>Could be better. People like the design, made a few feature requests, but never really expressed what could be better. That said, Blockstack recently put Diffuse on <a href=\"https://www.trymyui.com/\">https://www.trymyui.com/</a> which has given me good feedback.</p><p><strong>Where have you gotten the bulk of your users?</strong></p><p>IPFS forum, <a href=\"https://electronjs.org/apps/diffuse\">https://electronjs.org/apps/diffuse</a> and chinese/japanese blogs about IPFS. I think… I don’t have any analytics except on Github, so I don’t really know.</p><p><strong>What was the most useful feedback you’ve received?</strong></p><p>“I don’t know how to use this”</p><p><strong>What is the benefit of using Blockstack? Drawbacks?</strong></p><p>Easy decentralized authentication. Drawback, way too much javascript, bad performance.</p><p><strong>If you were to redesign or reset your structure what would you have done differently?</strong></p><p>I’m currently working on V2, which is built from scratch. So this’ll be easy to answer 😄 I like the design very much so that stayed the same, just more fine tuned, more attention to detail. Structure has improved as well, better performance, moved more things on the web-worker side, easier to extend (build on).</p><p><strong>What challenges did you experience integrating IPFS?</strong></p><p> I don’t really remember the music-storage integration, was over a year ago. But I think it went pretty smoothly, except for a CORS issue which was later resolved in go-ipfs. I recently did IPFS “authentication”, or in other words user-data storage, which is the unpublished work-in-progress V2. That was more challenging, I had to find a good way to encrypt the user’s data.</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p>Thanks Steven for spending time to help get this ready for others to learn from. We'll be posting other IPFS projects on this blog as well &gt;&gt; be sure to check back soon.</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p><a href=\"https://unsplash.com/photos/9f1gCaLkZBU\">Cover image</a> from <a href=\"https://unsplash.com/@davidjorre\">David Jorre</a></p>","url":"https://blog.fission.codes/fission-interviews-diffuse/","canonical_url":null,"uuid":"b26f8efe-40d9-4726-9e28-5c49e47a2f6b","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5ced76e00bff56001eb87d96","reading_time":null}},{"node":{"id":"Ghost__Post__5ced8f3f0bff56001eb87db4","title":"FISSION Interviews: 0xSU","slug":"interview-0xsu","featured":false,"feature_image":"https://images.unsplash.com/photo-1486551937199-baf066858de7?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","excerpt":"Fission Interviews: Dive into an Ethereum + IPFS hack from ETHNewYork called 0xSU: a decentralised URL shortener.","custom_excerpt":"Fission Interviews: Dive into an Ethereum + IPFS hack from ETHNewYork called 0xSU: a decentralised URL shortener.","created_at_pretty":"28 May, 2019","published_at_pretty":"06 June, 2019","updated_at_pretty":"06 June, 2019","created_at":"2019-05-28T12:42:55.000-07:00","published_at":"2019-06-06T10:34:47.000-07:00","updated_at":"2019-06-06T12:01:12.000-07:00","meta_title":null,"meta_description":"Fission Interviews: Dive into an Ethereum + IPFS hack from ETHNewYork called 0xSU: a decentralised URL shortener.","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Trenton Van Epps","slug":"trenton","bio":"Former architect working to grow the Ethereum ecosystem and Web3 tech.","profile_image":"https://s3.fission.codes/2019/05/14054274_10155286912259062_1515671855628123823_o.jpg","twitter":"@trent_vanepps","facebook":null,"website":null}],"primary_author":{"name":"Trenton Van Epps","slug":"trenton","bio":"Former architect working to grow the Ethereum ecosystem and Web3 tech.","profile_image":"https://s3.fission.codes/2019/05/14054274_10155286912259062_1515671855628123823_o.jpg","twitter":"@trent_vanepps","facebook":null,"website":null},"primary_tag":{"name":"Interview","slug":"interview","description":null,"feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"Interview","slug":"interview","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"IPFS","slug":"ipfs","description":"InterPlanetary File System","feature_image":null,"meta_description":null,"meta_title":null},{"name":"Ethereum","slug":"ethereum","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"EthNewYork","slug":"ethnewyork","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"hackathon","slug":"hackathon","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"Welcome to the first in a series where FISSION interviews projects that\nintegrate IPFS and other similar technologies. \n\nThis post highlights an ETHNewYork [https://ethnewyork.com/]  submission from \nAuston Bunsen [https://twitter.com/bunsen]  and Jonathan Biro\n[https://twitter.com/jonathanbiro]  called 0xSU, or Ethereum Short URLs:\n\"Decentralized URL shortener. First we'll look at how the project works,\nfollowed by a few questions FISSION asked the team about their background.\n\nHackathon Devpost: https://devpost.com/software/0xsu-ethereum-short-urls\n\nGitHub repo: https://github.com/du4e\n\nHow 0xSU works\n\"Think of it like goo.gl except it can't be taken down.\" In theory, URL\nshorteners could censor a link or decline to continue forwarding requests. By\ndeploying to the public Ethereum chain, creating open source proxy servers and\nutilising a distributed storage layer like IPFS, much of that risk is avoided. \n\nBefore using 0xSU, users need to make sure they have either a traditional\nweb-browser like Chrome plus wallet extension (ie Metamask\n[https://metamask.io/]) or through a Web3 browser like Status\n[https://status.im/]  or Coinbase Wallet [https://wallet.coinbase.com/]. If\nthat's ready, they can navigate to 0xSU.co [https://0xsu.co/]  with the URL they\nwant to shorten and store immutably. The web3 frontend is hosted through IPFS,\nmeaning everything needed to make this work properly already exists outside of a\ncentralised server. Currently, the node is hosted through Digital Ocean.\n\nOnce on the site, users submit the link along with a small amount of Ether to\ncover associated gas costs. Under the hood, the link is written into the\ncontract (address on Etherscan\n[https://etherscan.io/address/0x19624ffa41fe26744e74fdbba77bef967a222d4c]) as a\nkey value pair: the full link and the shortened one. The backend sits onchain in\nthe contract, accessed via either a helper js library\n[https://github.com/dU4E/0xsu-js-lib]  or one of the open source 0xsu.co\n[http://0xsu.co/]  proxy servers: flask\n[https://github.com/dU4E/0xsu-flask-server], sinatra\n[https://github.com/dU4E/0xsu-sinatra-server], or express\n[https://github.com/dU4E/0xsu-express-server].\n\nAdditionally, the url shortener doesn't work without an http redirect, so they\nwrote open source forwarding proxies that enable this and anyone can run. The\nproject currently uses Quiknode [https://quiknode.io/]  as the Web3 provider to\nsupply a node that the forwarders can hook into.\n\nGiven that the code is open source, anyone could fork the front end and run\ntheir own forwarding instance. In the future, users could get served ads to\noffset the cost of forwarding. Alternatively, the team is also looking at\nintegrating the Gas Station Network\n[https://medium.com/groundhog-network/the-gas-station-network-alliance-6fd543e7eca3]\n, a collaboration between Ethereum organisations that cover the cost of gas for\nonboarding new users and subsidised apps.\n\nIn the future, the project will have to consider the implications of state rent\n[https://www.reddit.com/r/ethereum/comments/arw0au/what_is_state_rent_in_ethereum_and_how_does_it/]\n. Users, or the Gas Station Network might have to provide an additional payment\nto wake a dormant contract back into state. A partial workaround for this could\nbe to cache the high traffic URLs in something like Heroku. \n\nFuture UI improvements might include adding a Wyre [https://www.sendwyre.com/] \nintegration to allow users to use credit cards instead of maintaining a\ncompatible wallet. The team hopes to continue working on it as a side project.\n\nHere's a quick video demo of 0xSU in action:\n\n\n--------------------------------------------------------------------------------\n\nFinally, here's a set of questions we had the team answer:\n\nWhat is your developer background?\n\nJon: I graduated from a full-stack coding bootcamp about a month ago. Before\nthat I just dabbled a little with JavaScript.\n\nAuston: I am a self-taught developer who started writing code about 12 years\nago. I am always interested in learning new languages & Solidity / Ethereum are\nsuper powerful conceptually. \n\nWhat got you into Ethereum / IPFS / decentralisation initially? \n\nJon: I found the idea of the blockchain and its serverless application\nfascinating. I wanted to learn more and my research told me the Ethereum network\nis the best run place to start.\n\nAuston: For me it started in 2011 when my friend Michael had a little hacker\nmeetup & decided to talk about bitcoin. I dismissed it initially but eventually\ncame around to the idea. Finally my friend Kai reached out in 2017 & told me\nabout Ethereum, that’s when I really started to dive deep, as I realized there\nwas now a censorship resistant platform that could be built upon.\n\nWhere do you go to read tech news / developer news?\n\nJon: hackernoon, medium, techcrunch, dev.to [http://dev.to/]\n\nAuston: I love hacker news! Twitter is always fun to discover random things & on\noccasion, Hacker Noon. \n\nDo you listen to any technology or developer podcasts?\n\nJon: I would if I found the time.\n\nAuston: Shill time! I have been working on a podcast for a few weeks with my\nfriend Jose, you can go listen to it on the Devshirts' site\n[https://devshirts.co/blogs/podcasts].\n\nIn general, talk about your hackathon experience? Highs / lows?\n\nJon: Was pretty interesting and inspiring. It was my first time and I didn’t\nknow where to begin, but luckily I teamed up with Auston who is a nice guy &\nhelped guide me.\n\nAuston: It was really invigorating to see so many people hyped up about Ethereum\n& working on Dapps. I definitely appreciated the sponsor dev support, we\nlaunched a node on quiknode.io [http://quiknode.io/]  and got some help from\nthen sendwyre.com [http://sendwyre.com/]  team. Also was super cool to get some\nhelp from Vitalik himself debugging an issue with our smart contract. \n\nWhat inspired the project? \n\nGoo.gl [http://goo.gl/]  had been taken down which is a shame because it was a\nuseful service, and we wanted to make sure that couldn’t happen again by using\nthe blockchain.\n\nWhat made you want to integrate IPFS? \n\nAuston: IPFS is a project I’ve known about since 2017 that again I thought would\nbe a super awesome way to distribute copies of content on.\n\nWhat challenges did you experience integrating IPFS?\n\nAuston: None really, it was actually super easy for the most part. However I had\nto find a guide that showed me to how to point a domain at the IPFS node.\n\nWhat was the most useful feedback you received from judges or other hackathon\nparticipants?\n\nThere were other apps and apis that could make what we did cheaper and faster,\nbut we kept it simple. Also the positive attitude of the judges was really nice\nto have, they were really onboard with the fact that we deployed to main net,\netc. \n\nAny plans to keep working on the project? \n\nWould definitely love to integrate Stripe to make it possible to pay for link\nshortening with a credit/debit card, get more people running a forwarding server\n& perhaps integrate the gas station network to let people pay with BAT or by\nwatching ads.\n\nIn hindsight what’s something you may have done differently for either the\nproject or the hackathon?\n\nAuston: Jon would have liked to integrate more sponsors, but I’m actually really\nhappy with the outcome. \n\nAny side projects or interests you would like to shill?\n\nAuston: Definitely quiknode.io [http://quiknode.io/]  as well as 0xsu.co\n[http://0xsu.co/]  - you should try both and run a forwarding server!!\n\n\n--------------------------------------------------------------------------------\n\nThanks Jon & Auston for spending time to help get this ready for others to learn\nfrom. We'll be posting other IPFS projects on this blog as well >> be sure to\ncheck back soon.\n\nOur first product is an IPFS add-on for Heroku. Interested in testing it out\nwhen we launch? Join us and sign up as an alpha tester on ProductHunt\n[https://www.producthunt.com/upcoming/fission-tools].","html":"<p>Welcome to the first in a series where FISSION interviews projects that integrate IPFS and other similar technologies. <br><br>This post highlights an <a href=\"https://ethnewyork.com/\">ETHNewYork</a> submission from <a href=\"https://twitter.com/bunsen\">Auston Bunsen</a> and <a href=\"https://twitter.com/jonathanbiro\">Jonathan Biro</a> called 0xSU, or Ethereum Short URLs: \"Decentralized URL shortener. First we'll look at how the project works, followed by a few questions FISSION asked the team about their background.</p><p>Hackathon Devpost: <a href=\"https://devpost.com/software/0xsu-ethereum-short-urls\">https://devpost.com/software/0xsu-ethereum-short-urls</a></p><p>GitHub repo: <a href=\"https://github.com/du4e\">https://github.com/du4e</a></p><h3 id=\"how-0xsu-works\">How 0xSU works</h3><p>\"Think of it like goo.gl except it can't be taken down.\" In theory, URL shorteners could censor a link or decline to continue forwarding requests. By deploying to the public Ethereum chain, creating open source proxy servers and utilising a distributed storage layer like IPFS, much of that risk is avoided. </p><p>Before using 0xSU, users need to make sure they have either a traditional web-browser like Chrome plus wallet extension (ie <a href=\"https://metamask.io/\">Metamask</a>) or through a Web3 browser like <a href=\"https://status.im/\">Status</a> or <a href=\"https://wallet.coinbase.com/\">Coinbase Wallet</a>. If that's ready, they can navigate to <a href=\"https://0xsu.co/\">0xSU.co</a> with the URL they want to shorten and store immutably. The web3 frontend is hosted through IPFS, meaning everything needed to make this work properly already exists outside of a centralised server. Currently, the node is hosted through Digital Ocean.</p><p>Once on the site, users submit the link along with a small amount of Ether to cover associated gas costs. Under the hood, the link is written into the contract (<a href=\"https://etherscan.io/address/0x19624ffa41fe26744e74fdbba77bef967a222d4c\">address on Etherscan</a>) as a key value pair: the full link and the shortened one. The backend sits onchain in the contract, accessed via either a <a href=\"https://github.com/dU4E/0xsu-js-lib\">helper js library</a> or one of the open source <a href=\"http://0xsu.co/\" rel=\"noopener noreferrer\">0xsu.co</a> proxy servers: <a href=\"https://github.com/dU4E/0xsu-flask-server\">flask</a>, <a href=\"https://github.com/dU4E/0xsu-sinatra-server\">sinatra</a>, or <a href=\"https://github.com/dU4E/0xsu-express-server\">express</a>.<br><br>Additionally, the url shortener doesn't work without an http redirect, so they wrote open source forwarding proxies that enable this and anyone can run. The project currently uses <a href=\"https://quiknode.io/\">Quiknode</a> as the Web3 provider to supply a node that the forwarders can hook into.</p><p>Given that the code is open source, anyone could fork the front end and run their own forwarding instance. In the future, users could get served ads to offset the cost of forwarding. Alternatively, the team is also looking at integrating the <a href=\"https://medium.com/groundhog-network/the-gas-station-network-alliance-6fd543e7eca3\">Gas Station Network</a>, a collaboration between Ethereum organisations that cover the cost of gas for onboarding new users and subsidised apps.</p><p>In the future, the project will have to consider the implications of <a href=\"https://www.reddit.com/r/ethereum/comments/arw0au/what_is_state_rent_in_ethereum_and_how_does_it/\">state rent</a>. Users, or the Gas Station Network might have to provide an additional payment to wake a dormant contract back into state. A partial workaround for this could be to cache the high traffic URLs in something like Heroku. </p><p>Future UI improvements might include adding a <a href=\"https://www.sendwyre.com/\">Wyre</a> integration to allow users to use credit cards instead of maintaining a compatible wallet. The team hopes to continue working on it as a side project.</p><p>Here's a quick video demo of 0xSU in action:</p><!--kg-card-begin: embed--><figure class=\"kg-card kg-embed-card\"><iframe width=\"459\" height=\"344\" src=\"https://www.youtube.com/embed/55JN4GWSR8w?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></figure><!--kg-card-end: embed--><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p>Finally, here's a set of questions we had the team answer:</p><p><strong>What is your developer background?</strong></p><p>Jon: I graduated from a full-stack coding bootcamp about a month ago. Before that I just dabbled a little with JavaScript.</p><p>Auston: I am a self-taught developer who started writing code about 12 years ago. I am always interested in learning new languages &amp; Solidity / Ethereum are super powerful conceptually. </p><p><strong>What got you into Ethereum / IPFS / decentralisation initially? </strong></p><p>Jon: I found the idea of the blockchain and its serverless application fascinating. I wanted to learn more and my research told me the Ethereum network is the best run place to start.</p><p>Auston: For me it started in 2011 when my friend Michael had a little hacker meetup &amp; decided to talk about bitcoin. I dismissed it initially but eventually came around to the idea. Finally my friend Kai reached out in 2017 &amp; told me about Ethereum, that’s when I really started to dive deep, as I realized there was now a censorship resistant platform that could be built upon.</p><p><strong>Where do you go to read tech news / developer news?</strong></p><p>Jon: hackernoon, medium, techcrunch, <a href=\"http://dev.to/\" rel=\"noopener noreferrer\">dev.to</a></p><p>Auston: I love hacker news! Twitter is always fun to discover random things &amp; on occasion, Hacker Noon. </p><p><strong>Do you listen to any technology or developer podcasts?</strong></p><p>Jon: I would if I found the time.</p><p>Auston: Shill time! I have been working on a podcast for a few weeks with my friend Jose, you can go listen to it on the <a href=\"https://devshirts.co/blogs/podcasts\">Devshirts' site</a>.</p><p><strong>In general, talk about your hackathon experience? Highs / lows?</strong></p><p>Jon: Was pretty interesting and inspiring. It was my first time and I didn’t know where to begin, but luckily I teamed up with Auston who is a nice guy &amp; helped guide me.</p><p>Auston: It was really invigorating to see so many people hyped up about Ethereum &amp; working on Dapps. I definitely appreciated the sponsor dev support, we launched a node on <a href=\"http://quiknode.io/\" rel=\"noopener noreferrer\">quiknode.io</a> and got some help from then <a href=\"http://sendwyre.com/\" rel=\"noopener noreferrer\">sendwyre.com</a> team. Also was super cool to get some help from Vitalik himself debugging an issue with our smart contract. </p><p><strong>What inspired the project? </strong></p><p><a href=\"http://goo.gl/\" rel=\"noopener noreferrer\">Goo.gl</a> had been taken down which is a shame because it was a useful service, and we wanted to make sure that couldn’t happen again by using the blockchain.</p><p><strong>What made you want to integrate IPFS? </strong></p><p>Auston: IPFS is a project I’ve known about since 2017 that again I thought would be a super awesome way to distribute copies of content on.</p><p><strong>What challenges did you experience integrating IPFS?</strong></p><p>Auston: None really, it was actually super easy for the most part. However I had to find a guide that showed me to how to point a domain at the IPFS node.</p><p><strong>What was the most useful feedback you received from judges or other hackathon participants?</strong></p><p>There were other apps and apis that could make what we did cheaper and faster, but we kept it simple. Also the positive attitude of the judges was really nice to have, they were really onboard with the fact that we deployed to main net, etc. </p><p><strong>Any plans to keep working on the project? </strong></p><p>Would definitely love to integrate Stripe to make it possible to pay for link shortening with a credit/debit card, get more people running a forwarding server &amp; perhaps integrate the gas station network to let people pay with BAT or by watching ads.</p><p><strong>In hindsight what’s something you may have done differently for either the project or the hackathon?</strong></p><p>Auston: Jon would have liked to integrate more sponsors, but I’m actually really happy with the outcome. </p><p><strong>Any side projects or interests you would like to shill?</strong></p><p>Auston: Definitely <a href=\"http://quiknode.io/\" rel=\"noopener noreferrer\">quiknode.io</a> as well as <a href=\"http://0xsu.co/\" rel=\"noopener noreferrer\">0xsu.co</a> - you should try both and run a forwarding server!!</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p>Thanks Jon &amp; Auston for spending time to help get this ready for others to learn from. We'll be posting other IPFS projects on this blog as well &gt;&gt; be sure to check back soon.</p><p>Our first product is an IPFS add-on for Heroku. Interested in testing it out when we launch? Join us and sign up as an alpha tester <a href=\"https://www.producthunt.com/upcoming/fission-tools\">on ProductHunt</a>.</p>","url":"https://blog.fission.codes/interview-0xsu/","canonical_url":null,"uuid":"78b5841e-d5c3-402e-b517-1dcd5e415e5a","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5ced8f3f0bff56001eb87db4","reading_time":null}}]}},"pageContext":{"slug":"interview","pageNumber":0,"humanPageNumber":1,"skip":0,"limit":12,"numberOfPages":1,"previousPagePath":"","nextPagePath":""}}