{"data":{"allGhostPost":{"edges":[{"node":{"id":"Ghost__Post__5e73df8b73d281001e1ea40d","title":"Weekly Decentralized Web \"Lunch & Learn\" Video Calls","slug":"weekly-dweb-video-calls","featured":true,"feature_image":"https://s3.fission.codes/2020/03/dweb-lunch-n-learn-3.jpg","excerpt":"We're hosting weekly decentralized web related video calls on Thursdays. Watch the video from the first one on the topic of cryptography, browser APIs, and macaroons, presented by Daniel from our team.","custom_excerpt":"We're hosting weekly decentralized web related video calls on Thursdays. Watch the video from the first one on the topic of cryptography, browser APIs, and macaroons, presented by Daniel from our team.","created_at_pretty":"19 March, 2020","published_at_pretty":"19 March, 2020","updated_at_pretty":"19 March, 2020","created_at":"2020-03-19T14:09:31.000-07:00","published_at":"2020-03-19T15:34:19.000-07:00","updated_at":"2020-03-19T15:34:19.000-07:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"},{"name":"Daniel Holmgren","slug":"daniel","bio":null,"profile_image":"https://s3.fission.codes/2019/09/75f5c64c98dbaf2b49b86c299104ab06.png","twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"},"primary_tag":{"name":"DWeb Lunch & Learn","slug":"dweblunchnlearn","description":"Decentralized Web Lunch & Learn. Weekly video calls hosted on Thursdays by the Fission team.","feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"DWeb Lunch & Learn","slug":"dweblunchnlearn","description":"Decentralized Web Lunch & Learn. Weekly video calls hosted on Thursdays by the Fission team.","feature_image":null,"meta_description":null,"meta_title":null},{"name":"cryptography","slug":"cryptography","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"WebAuthN","slug":"webauthn","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"macaroons","slug":"macaroons","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"ecc","slug":"ecc","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"We did our first Decentralized Web \"Lunch & Learn\" video presentation this\nmorning. Join us weekly on Thursdays for live chats, follow the upcoming\nspeakers and topics list [https://talk.fission.codes/t/upcoming-dweb-talks/530],\nor suggest your own topic you'd like to see covered.\n\nWe'll be hosting these calls on a weekly basis, and anyone is welcome to drop\nin. We'll schedule some \"formal\" presentations, other times it might just be\ndemos, sharing some interesting apps we've seen, and so on. Kind of like an\noffice based \"Lunch & Learn\", except there's no office, and it's only lunch time\nin the North American Eastern Time Zone!\n\nCryptography, Keys, and Auth, with Daniel Holmgren\nThis weeks call we had Daniel from our team cover a lot of different\ncryptography and authentication topics related to what we're building at\nFission:\n\n * Cryptographic building blocks: hashes, symmetric keys, asymmetric keys,\n   public/private keys\n * Types of crypto-systems, including RSA and ECC\n * Browser APIs, including WebCrypto, IndexedDB, and WebAuthN\n * Macaroons, a better version of cookies\n\nDaniel also wrote up Everything you wanted to know about Elliptic Curve\nCryptography\n[https://blog.fission.codes/everything-you-wanted-to-know-about-elliptic-curve-cryptography/] \n as a full blog post, with definitions of all the various algorithms.\n\nHere's the video of the live call:\n\nhttps://ipfs.runfission.com/ipfs/Qme4pju9gFYuzCtZc1RJHAB31o9i4ay57FvBGDVgyk2rg5/daniel-crypto-dweb-lunchnlearn.mp4\n\n You can find all the related links and resources in our forum\n[https://talk.fission.codes/t/cryptography-keys-and-authorization-authentication-with-daniel-holmgren/529]\n.\n\nWant to be reminded about joining us next week? Subscribe to our Events &\nMeetups list »\n[https://5d04d668.sibforms.com/serve/MUIEAIlLz1kjYt6HZ5KK2HdjjwFSCY6DGobJY_wWMJTUB96KYAKCKS51gCUfiqsTtGbfpX30jAXqWjG3mCxFaQtmFY-rGKE_TIr5PSj8RYMuCqoONmKwjC2-4kKvu0MyX_0kSjSwVQJsYf9a5BamJo_OmRfUvVJWjXgaWsHbEtBV_7iR4ulTCCQao_l1MMjN_t4YsG0eCtyB3bBF]","html":"<p>We did our first Decentralized Web \"Lunch &amp; Learn\" video presentation this morning. Join us weekly on Thursdays for live chats, follow the <a href=\"https://talk.fission.codes/t/upcoming-dweb-talks/530\">upcoming speakers and topics list</a>, or suggest your own topic you'd like to see covered.</p><p>We'll be hosting these calls on a weekly basis, and anyone is welcome to drop in. We'll schedule some \"formal\" presentations, other times it might just be demos, sharing some interesting apps we've seen, and so on. Kind of like an office based \"Lunch &amp; Learn\", except there's no office, and it's only lunch time in the North American Eastern Time Zone!</p><h2 id=\"cryptography-keys-and-auth-with-daniel-holmgren\">Cryptography, Keys, and Auth, with Daniel Holmgren</h2><p>This weeks call we had Daniel from our team cover a lot of different cryptography and authentication topics related to what we're building at Fission:</p><ul><li>Cryptographic building blocks: hashes, symmetric keys, asymmetric keys, public/private keys</li><li>Types of crypto-systems, including RSA and ECC</li><li>Browser APIs, including WebCrypto, IndexedDB, and WebAuthN</li><li>Macaroons, a better version of cookies</li></ul><p>Daniel also wrote up <a href=\"https://blog.fission.codes/everything-you-wanted-to-know-about-elliptic-curve-cryptography/\">Everything you wanted to know about Elliptic Curve Cryptography</a> as a full blog post, with definitions of all the various algorithms.</p><p>Here's the video of the live call:</p><!--kg-card-begin: html--><video width=\"100%\" height=\"100%\" controls>\n              <source src=\"https://ipfs.runfission.com/ipfs/Qme4pju9gFYuzCtZc1RJHAB31o9i4ay57FvBGDVgyk2rg5/daniel-crypto-dweb-lunchnlearn.mp4\">\n              <a href=\"https://ipfs.runfission.com/ipfs/Qme4pju9gFYuzCtZc1RJHAB31o9i4ay57FvBGDVgyk2rg5/daniel-crypto-dweb-lunchnlearn.mp4\">https://ipfs.runfission.com/ipfs/Qme4pju9gFYuzCtZc1RJHAB31o9i4ay57FvBGDVgyk2rg5/daniel-crypto-dweb-lunchnlearn.mp4</a>\n            </video><!--kg-card-end: html--><p>You can find all the related <a href=\"https://talk.fission.codes/t/cryptography-keys-and-authorization-authentication-with-daniel-holmgren/529\">links and resources in our forum</a>.</p><p>Want to be reminded about joining us next week? <a href=\"https://5d04d668.sibforms.com/serve/MUIEAIlLz1kjYt6HZ5KK2HdjjwFSCY6DGobJY_wWMJTUB96KYAKCKS51gCUfiqsTtGbfpX30jAXqWjG3mCxFaQtmFY-rGKE_TIr5PSj8RYMuCqoONmKwjC2-4kKvu0MyX_0kSjSwVQJsYf9a5BamJo_OmRfUvVJWjXgaWsHbEtBV_7iR4ulTCCQao_l1MMjN_t4YsG0eCtyB3bBF\">Subscribe to our Events &amp; Meetups list »</a></p>","url":"https://blog.fission.codes/weekly-dweb-video-calls/","canonical_url":null,"uuid":"8da9e8f8-20f2-43ae-bd37-af065305a892","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5e73df8b73d281001e1ea40d","reading_time":null}},{"node":{"id":"Ghost__Post__5e274d05fbc2c9001eeb9759","title":"Everything you wanted to know about Elliptic Curve Cryptography","slug":"everything-you-wanted-to-know-about-elliptic-curve-cryptography","featured":true,"feature_image":"https://s3.fission.codes/2020/03/math.jpg","excerpt":"So you've heard of Elliptic Curve Cryptography. Maybe you know it's supposed to\nbe better than RSA. Maybe you know that all these cool new decentralized\nprotocols use it. Maybe you've seen the landslide of acronyms that go along with\nit: ECC, ECDSA, ECDH, EdDSA, Ed25519, etc. Maybe you've seen some cool looking\ngraphs but don't know how those translate to working cryptography. The articles\nyou find online either don't answer your questions, or launch in to a 30 minute\ndescription of birational e","custom_excerpt":null,"created_at_pretty":"21 January, 2020","published_at_pretty":"19 March, 2020","updated_at_pretty":"19 March, 2020","created_at":"2020-01-21T11:12:05.000-08:00","published_at":"2020-03-18T18:50:41.000-07:00","updated_at":"2020-03-19T09:16:18.000-07:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Daniel Holmgren","slug":"daniel","bio":null,"profile_image":"https://s3.fission.codes/2019/09/75f5c64c98dbaf2b49b86c299104ab06.png","twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Daniel Holmgren","slug":"daniel","bio":null,"profile_image":"https://s3.fission.codes/2019/09/75f5c64c98dbaf2b49b86c299104ab06.png","twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"cryptography","slug":"cryptography","description":null,"feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"cryptography","slug":"cryptography","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"elliptic","slug":"elliptic","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"ecc","slug":"ecc","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"keys","slug":"keys","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"DID","slug":"did","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"encryption","slug":"encryption","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Technology Highlight","slug":"technology-highlight","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"So you've heard of Elliptic Curve Cryptography. Maybe you know it's supposed to\nbe better than RSA. Maybe you know that all these cool new decentralized\nprotocols use it. Maybe you've seen the landslide of acronyms that go along with\nit: ECC, ECDSA, ECDH, EdDSA, Ed25519, etc. Maybe you've seen some cool looking\ngraphs but don't know how those translate to working cryptography. The articles\nyou find online either don't answer your questions, or launch in to a 30 minute\ndescription of birational equivalence.\n\nWe feel your pain. We wanted to create a resource that answers all those\nquestions you have, gives you a cheat sheet for those pesky acronyms, and takes\nyou from crypto-kindergartener to elliptic-expert in less than 10 minutes.\n\nEnough with the talk! I just need to figure out what all these funky acronyms\nmean!\n  \nRSA:  Rivest–Shamir–Adleman (the three inventors of RSA)\nOld school cryptography that uses prime-factorization\n\nECC:  Elliptic Curve Cryptography\nNew-fangled cryptography that uses elliptic curves. More secure & smaller keys\nthan RSA.\n\nECDH:  Elliptic Curve Diffie Hellman\nKey-sharing algorithm used for asymmetric encryption\n\nECDSA:  Elliptic Curve Digital Signing Algorithm\nDigital signing algorithm using elliptic curves (makes sense right?)\n\nEdwards Curve:  \nA special type of elliptic curve (most are Montgomery Curves). Faster for\ncertain operations.\n\nEdDSA:  Edwards Digital Signing Algorithm\nDigital signing algorithm using an Edwards curve. Runs in constant time.\n\nEd25519:  Edwards Curve 25519\nThe most commonly used Edwards Curve\n\nCurve25519:\nThe non-edwards companion to Ed25519\n\nsecp256k1:\nThe curve used by Bitcoin & Ethereum\n\nNIST Curves:\nCurves created and standardized by the National Institute of Standards and\nTechnology \n\nWhat is asymmetric cryptography?\n\nAsymmetric cryptography  (or \"public key cryptography\") is a cryptographic\nsystem that uses keypairs (a private key and a public key). The public key is\nshared widely, while the private key must be kept \ncompletely secret. \n\nThere are two main use cases for public key cryptography: asymmetric encryption\nand digital signatures.\n\nAsymmetric encryption  is a method by which Alice can send a message to Bob\nwithout leaking any information about her private key to Bob and nothing about\nthe key or the message to the outside world. \n\nDigital signatures  are a means of verifying that a message came from the holder\nof a certain private key and that the information has not been tampered with in\nflight.\n\nHow on earth does that work?\n\nAll public key cryptography relies on the existence of one-way functions:\nmathematical functions that are very easy to calculate in one direction but\nnearly impossible to \"undo\", or calculate in the other direction.\n\nRSA has been the predominant cryptosystem since its introduction in 1977. It\nrelies on prime factorization  of very large numbers.\n\nPrime factorization is the process of breaking a number down into the product of\nprime numbers. This is easy with small numbers: for instance, the prime factors\nof 70 are 2 * 5 * 7. Now do that with a 2048-bit integer, and it ends up being\npretty complicated.\n\nSweet good thing someone figured that out. Now we can all kick back and relax\nknowing all of our information is secure!\n\nWell, computers are a lot faster nowadays than in 1977. Unfortunately that means\nthat they're also getting faster at factoring large prime numbers. While a 256\nbit key might've cut it at one point, now that key can be broken in ⌚👀, 103\nseconds. \n\nComputers and prime numbers are now in an arms race, with the current key size\nrecommendation being 2048 bits. As keys get larger, operations obviously become\nslower. Meanwhile, the threat of quantum computing looms on the horizon. The now\ninfamous Shor's algorithm [https://en.wikipedia.org/wiki/Shor%27s_algorithm] \nthreatens to solve prime factorization in polynomial time. Which would render\nRSA as good as done.\n\nIs there no hope for privacy?!\n\nThere's a new one-way function on the block: Elliptic Curve Cryptography. Now\nwith 100% less prime factorization! \n\nWhat's an elliptic curve?\n\nElliptic curves are cool looking curves that look like this: \n\nAnd are graphed with equations that looks like this: \n\ny^2 = x^3 + ax + b\n\nExcept decimals are a bit unruly so we only take the integers, and then take a\nmodulus of the function (basically wrap the graph around the edges like an old\ngame of snake), so the graph actually ends up looking something like this (note\nthere's still a horizontal line of symmetry):\n\nAlright, but what do these have to do with cryptography?\nThe basic procedure of ECC is this:\n\n * Choose a curve and a point P  on the curve (everyone uses the same point)\n * Choose an arbitrary very large number N  (this is your private key).\n * Using point addition, add P  to itself N  times\n * The x-coordinate of N*P  is your public-key\n\nCan you ground this in reality a bit?\n\nSure! Let's draw an analogy to adjusting a clock. Here are the same steps listed\nout but with a clock instead of an elliptic curve:\n\n * Grab a clock sitting at exactly midnight and choose an arbitrary number of\n   seconds P\n * Choose a very large number N\n * Move the clock forward P  seconds N  times (pretend you have really fast\n   hands 😜)\n * Give the clock to a friend and tell them how big each step was (P) then see\n   if they can figure out how many times you moved it (N) to arrive at the\n   current location\n\nAnd how well does this whole thing work?\n\nIt turns out this is a much more robust one-way function than prime\nfactorization. In fact, we can achieve the same security as a 3072-bit RSA key\nwith a 256-bit ECC key. Not bad!\n\nWhat if someone guesses the same number N  that I chose?\n\nThere's a mind-blowingly large range of numbers to choose from. Each key is 256\nbits so you have 2^256 = 10^77  options. To give you a scale of how big this is,\nthere are: \n\n * ~10^18  grains of sand on earth\n * ~10^22  stars in the observable universe\n * ~10^78  atoms in the observable universe\n\nSo guessing someone's private key would be approximately equivalent to guessing\na random atom in the universe.\n\nDoesn't it take a long time to calculate my public key?\n\nNope, point addition is associative. Meaning:\nP + P + P + P = (P + P) + (P + P) = 2P + 2P\n\nSo when calculating a N*P  for a very large N, you only need to calculate P + 2P\n+ 4P + 8P...\n\nAt most, you must calculate 256 terms. Trivial for a computer. But to guess the\npublic key for a given private key, you would need to check every number in\nbetween (that big number we talked about earlier).\n\nHow do these keys translate into cryptographic functions?\n\nECDH  is a key sharing algorithm, most commonly used to send encrypted messages.\nECDH works by multiplying your private key by another's public key to get a\nshared secret, then using that shared secret to perform symmetric encryption.\n\nTo illustrate why this works:\n\n * Alice and Bob agree on a curve with starting point P\n * Alice has a private key a  and public key A = a * P\n * Bob has a private key b  and public key B = b * P\n * a * B = a * b * P = b * A\n * So a * b * P  ends up being the shared secret\n\nECDSA is a signature algorithm, used to prove authenticity of some information.\nThe algorithm is a bit trickier than ECDH. \nWarning: lots of equations, feel free to skip to the takeways below.\n\n * Alice and bob agree on a curve with starting point P\n * Alice has a private key a  and public key A = a * P\n * Alice chooses a random k  and point K = k * P\n * Alice takes r  which is just the x-value of K\n * Alice hashes her message to produce hash H\n * Alice calculates a value s = inv(k)*(H+ra)\n * Alice sends her message to Bob along with the signature (r, s)\n * Bob calculates H  from the message\n * Bob ensures that r = H*inv(s)*P + r*inv(s)*A\n * If it does, the signature is valid!\n\nIf you skipped those equations or they don't quite click, the key takeaways \nare:\n\n * Alice sends a random value r  and a calculated value s  that could only be\n   calculated with a combination of the private key, the message hash, and the\n   random value, but gives away no information about her private key.\n * Bob can verify r  and s  by using just the message hash and Alice's public\n   key\n * You need  a good source of randomness to use ECDSA. If you're randomness\n   function is broken, repeated signatures can disclose your private key\n\nReal quick, you mentioned symmetric encryption. How does that work?\nSymmetric encryption uses just one key to encrypt and decrypt a message.\nEncrypted messages just look like random jumbles of letters and numbers that\ngive no information about the underlying message unless you have the key to\n\"unjumble\" it. Most algorithms use a block cipher. This involves choosing a\nblock size (say 64 bits), and encrypting the message in blocks of that size.\n\nWe mentioned symmetric encryption when talking about ECDH. When people say\n\"asymmetrically encrypted\", they actually mean \"symmetrically encrypted with a\nsecret that is shared asymmetrically\".\n\nA few examples of algorithms are AES\n[https://en.wikipedia.org/wiki/Advanced_Encryption_Standard], Salsa20\n[https://en.wikipedia.org/wiki/Salsa20], or Triplesec\n[https://keybase.io/triplesec]  (which is actually just a combo of the first two\nfor extra security).\n\nOkay, I generally understand how this works, but how do people decide on a curve\nand a point P?\n\nA bunch of different ways, sometimes they're chosen for a specific reason,\nsometimes they're algorithmically determined. Different curves have different\nproperties. Checkout Safe Curves [https://safecurves.cr.yp.to/]  for an analysis\nof different curves.\n\nCan \"faulty\" curves give backdoors?\n\nYes! Faulty curves can give shortcuts to determining a private key from a given\npublic key. \n\nMany suspect that NIST curves have NSA backdoors in them.  This is because a\npublished NIST randomization algorithm (that the NSA tightly collaborated on)\nwas found to have a backdoor.\n[https://www.ams.org/notices/201402/rnoti-p190.pdf]  We encourage you not to use\nany curves published by the NIST!\n\nWhat's this \"Edwards Curve\" I keep hearing about?\n\nMost Elliptic curves are Montgomery Curves\n[https://en.wikipedia.org/wiki/Montgomery_curve]. Edwards Curves were described\nby mathematician Harold Edwards and popularized by cryptographer Daniel\nBernstein. They have a different structure that allows for a faster signature\nalgorithm. This signature algorithm, when performed on an Edwards curve, is\ncalled EdDSA. This algorithm runs in constant time, meaning it's faster and\nleaks less information\n\nCan Edwards Curves do key sharing?\n\nEdwards curves are specifically used for signatures. There is not a related\nDiffie-Hellman key sharing algorithm.\n\nSo if I want to use both ECDH & EdDSA, I need two key pairs?\n\nNot exactly. Let's take the most common Edwards curve Ed25519. This curve is\nrelated to Montgomery curve Curve25519. In fact Ed25519 is a twist\n[https://en.wikipedia.org/wiki/Twists_of_curves]  of Curve25519. A \"twist\"\nbasically means that the curves are mappable to one another. What this means is\nthat you can use the same private key to generate a public key on both curves\nand then transform those public keys between one another without any knowledge\nof the private key. Specifically, with these equations.\n\n(u, v) = ((1+y)/(1-y), sqrt(-486664)*u/x)\n(x, y) = (sqrt(-486664)*u/v, (u-1)/(u+1))\n\n\nwhere (u, v)  is the Curve25519 point and (x, y)  is the Ed25519 point\n\nYou can read a more in-depth post about that Here\n[https://blog.filippo.io/using-ed25519-keys-for-encryption/].\n\nWhat cryptography algorithms do protocols like Bitcoin, Ethereum, and IPFS use?\n\nBitcoin uses secp256k1  for completely arbitrary reasons\n[https://bitcointalk.org/index.php?topic=2699.msg37328#msg37328]\nEtherem uses secp256k1  for interop with Bitcoin\n[https://forum.ethereum.org/discussion/comment/53/#Comment_53]\nIPFS uses Ed25519  and RSA.\n\nOkay so what do you recommend?\nWe're using Ed25519 & Curve25519. We chose these because:\n\n * They are well-recognized as safe curves [https://safecurves.cr.yp.to/]\n * They are one of the more commonly used curves, so we have easier interop\n * They allow us to use EdDSA for signatures\n * We're fairly certain that they don't have any backdoors in them\n\nThis is sweet! Why doesn't everyone have a private key??\n\nWe ask ourselves the same question everyday. The main reason is: it's a pain.\nKeys look scary (6A576D5A7134743777217A25432A462D4A614...). And if you lose a\nkey, you're forever screwed. There's no \"recovery by email\" available. \n\nWhat are people doing about this?\n\nWe need to fix the UX of public keys. Remove the scary hexadecimal strings and\nprovide more painless recovery.\n\nA few options are\n\n * Replication: Share the same key across multiple devices. If you drop your\n   phone in a lake, you can recover your key with your laptop\n * Shamir Secret Sharing: This involves splitting a key up into separate\n   \"shares\". Each share reveals nothing about the key, but by combining the\n   shares back together, you can recover the private key. This leads to\n   interesting solutions like social recovery\n   [https://www.coindesk.com/pay-your-friends-to-protect-your-keys-one-startups-new-take-on-crypto-custody] \n    or zero-knowledge key recovery\n   [https://medium.com/@amanladia1/zerowallet-a-zkp-based-wallet-authentication-mechanism-9871dcca0a01] \n    which we implemented as a Proof of Concept\n   [https://github.com/fission-suite/zerowallet-poc].\n * Secure Hardware Enclaves: Many phones and computers that are coming out these\n   days have Secure Hardware Enclaves. These use both hardware and software to\n   provide very  strong security gurantees\n * Hardware Secure Modules (HSMs): These are similar to Secure Hardware\n   Enclaves, but larger and hold more information. Physical modules exist, and\n   you can also rent space from cloud providers such as AWS. Less\n   security-minded users might be interested in backing up their keys with a\n   \"trusted custodian\" (this still ends up being quite a bit safer than the\n   internet's current security model).\n\nHow are you using private keys?\n\nHere at Fission, we wanted to get private keys into the hands of our users as\nquickly as possible. We just rolled out our new authentication scheme which uses\nprivate keys to power our command line tool: Fission Live\n[https://github.com/fission-suite/cli]. Give it a go and let us know what you\nthink! We have other big projects coming down the pipeline soon that will use\nthis public key infrastructure to power some really neat features: a global\nencrypted filesystem, cryptographically verifiable claims, and more!","html":"<p>So you've heard of Elliptic Curve Cryptography. Maybe you know it's supposed to be better than RSA. Maybe you know that all these cool new decentralized protocols use it. Maybe you've seen the landslide of acronyms that go along with it: ECC, ECDSA, ECDH, EdDSA, Ed25519, etc. Maybe you've seen some cool looking graphs but don't know how those translate to working cryptography. The articles you find online either don't answer your questions, or launch in to a 30 minute description of <em>birational equivalence</em>.<br><br>We feel your pain. We wanted to create a resource that answers all those questions you have, gives you a cheat sheet for those pesky acronyms, and takes you from crypto-kindergartener to elliptic-expert in less than 10 minutes.</p><h3 id=\"enough-with-the-talk-i-just-need-to-figure-out-what-all-these-funky-acronyms-mean-\">Enough with the talk! I just need to figure out what all these funky acronyms mean!</h3><p> <br><strong>RSA:</strong> Rivest–Shamir–Adleman (the three inventors of RSA)<br>Old school cryptography that uses prime-factorization<br><br><strong>ECC:</strong> Elliptic Curve Cryptography<br>New-fangled cryptography that uses elliptic curves. More secure &amp; smaller keys than RSA.<br><br><strong>ECDH:</strong> Elliptic Curve Diffie Hellman<br>Key-sharing algorithm used for asymmetric encryption<br><br><strong>ECDSA:</strong> Elliptic Curve Digital Signing Algorithm<br>Digital signing algorithm using elliptic curves (makes sense right?)<br><br><strong>Edwards Curve:</strong> <br>A special type of elliptic curve (most are Montgomery Curves). Faster for certain operations.<br><br><strong>EdDSA:</strong> Edwards Digital Signing Algorithm<br>Digital signing algorithm using an Edwards curve. Runs in constant time.<br><br><strong>Ed25519:</strong> Edwards Curve 25519<br>The most commonly used Edwards Curve<br><br><strong>Curve25519:</strong><br>The non-edwards companion to Ed25519<br><br><strong>secp256k1:</strong><br>The curve used by Bitcoin &amp; Ethereum<br><br><strong>NIST Curves:</strong><br>Curves created and standardized by the National Institute of Standards and Technology </p><h3 id=\"what-is-asymmetric-cryptography\">What is asymmetric cryptography?<br></h3><p><strong>Asymmetric cryptography</strong> (or \"public key cryptography\") is a cryptographic system that uses keypairs (a private key and a public key). The public key is shared widely, while the private key must be kept <br>completely secret. <br><br>There are two main use cases for public key cryptography: asymmetric encryption and digital signatures.<br><br><strong>Asymmetric encryption</strong> is a method by which Alice can send a message to Bob without leaking any information about her private key to Bob and nothing about the key or the message to the outside world. <br><br><strong>Digital signatures</strong> are a means of verifying that a message came from the holder of a certain private key and that the information has not been tampered with in flight.</p><h3 id=\"how-on-earth-does-that-work\">How on earth does that work?<br></h3><p>All public key cryptography relies on the existence of <strong>one-way functions</strong>: mathematical functions that are very easy to calculate in one direction but nearly impossible to \"undo\", or calculate in the other direction.<br><br>RSA has been the predominant cryptosystem since its introduction in 1977. It relies on <strong>prime factorization</strong> of very large numbers.<br><br>Prime factorization is the process of breaking a number down into the product of prime numbers. This is easy with small numbers: for instance, the prime factors of 70 are 2 * 5 * 7. Now do that with a 2048-bit integer, and it ends up being pretty complicated.</p><h3 id=\"sweet-good-thing-someone-figured-that-out-now-we-can-all-kick-back-and-relax-knowing-all-of-our-information-is-secure-\">Sweet good thing someone figured that out. Now we can all kick back and relax knowing all of our information is secure!<br></h3><p>Well, computers are a lot faster nowadays than in 1977. Unfortunately that means that they're also getting faster at factoring large prime numbers. While a 256 bit key might've cut it at one point, now that key can be broken in ⌚👀, 103 seconds. <br><br>Computers and prime numbers are now in an arms race, with the current key size recommendation being 2048 bits. As keys get larger, operations obviously become slower. Meanwhile, the threat of quantum computing looms on the horizon. The now infamous <a href=\"https://en.wikipedia.org/wiki/Shor%27s_algorithm\">Shor's algorithm</a> threatens to solve prime factorization in polynomial time. Which would render RSA as good as done.</p><h3 id=\"is-there-no-hope-for-privacy-\">Is there no hope for privacy?!<br></h3><p>There's a new one-way function on the block: <strong>Elliptic Curve Cryptography</strong>. Now with 100% less prime factorization! </p><h3 id=\"what-s-an-elliptic-curve\">What's an elliptic curve?<br></h3><p>Elliptic curves are cool looking curves that look like this: </p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://s3.fission.codes/2020/01/ecc.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><p>And are graphed with equations that looks like this: </p><!--kg-card-begin: markdown--><p><code>y^2 = x^3 + ax + b</code></p>\n<!--kg-card-end: markdown--><p>Except decimals are a bit unruly so we only take the integers, and then take a modulus of the function (basically wrap the graph around the edges like an old game of snake), so the graph actually ends up looking something like this (note there's still a horizontal line of symmetry):</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://s3.fission.codes/2020/01/sageplot_06.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><h3 id=\"alright-but-what-do-these-have-to-do-with-cryptography\">Alright, but what do these have to do with cryptography?</h3><!--kg-card-begin: markdown--><p>The basic procedure of ECC is this:</p>\n<ul>\n<li>Choose a curve and a point <code>P</code> on the curve (everyone uses the same point)</li>\n<li>Choose an arbitrary very large number <code>N</code> (this is your private key).</li>\n<li>Using point addition, add <code>P</code> to itself <code>N</code> times</li>\n<li>The x-coordinate of <code>N*P</code> is your public-key</li>\n</ul>\n<!--kg-card-end: markdown--><h3 id=\"can-you-ground-this-in-reality-a-bit\">Can you ground this in reality a bit?<br></h3><p>Sure! Let's draw an analogy to adjusting a clock. Here are the same steps listed out but with a clock instead of an elliptic curve:</p><!--kg-card-begin: markdown--><ul>\n<li>Grab a clock sitting at exactly midnight and choose an arbitrary number of seconds <code>P</code></li>\n<li>Choose a very large number <code>N</code></li>\n<li>Move the clock forward <code>P</code> seconds <code>N</code> times (pretend you have really fast hands 😜)</li>\n<li>Give the clock to a friend and tell them how big each step was (<code>P</code>) then see if they can figure out how many times you moved it (<code>N</code>) to arrive at the current location</li>\n</ul>\n<!--kg-card-end: markdown--><h3 id=\"and-how-well-does-this-whole-thing-work\">And how well does this whole thing work?<br></h3><p>It turns out this is a much more robust one-way function than prime factorization. In fact, we can achieve the same security as a 3072-bit RSA key with a 256-bit ECC key. Not bad!</p><h3 id=\"what-if-someone-guesses-the-same-number-n-that-i-chose\">What if someone guesses the same number <em>N</em> that I chose?<br></h3><p>There's a mind-blowingly large range of numbers to choose from. Each key is 256 bits so you have <code>2^256 = 10^77</code> options. To give you a scale of how big this is, there are: </p><!--kg-card-begin: markdown--><ul>\n<li><code>~10^18</code> grains of sand on earth</li>\n<li><code>~10^22</code> stars in the observable universe</li>\n<li><code>~10^78</code> atoms in the observable universe</li>\n</ul>\n<!--kg-card-end: markdown--><p>So guessing someone's private key would be approximately equivalent to guessing a random atom in the <em>universe.</em></p><h3 id=\"doesn-t-it-take-a-long-time-to-calculate-my-public-key\">Doesn't it take a long time to calculate my public key?<br></h3><p>Nope, point addition is associative. Meaning:<br><code>P + P + P + P = (P + P) + (P + P) = 2P + 2P</code><br><br>So when calculating a <code>N*P</code> for a very large <code>N</code>, you only need to calculate <code>P + 2P + 4P + 8P...</code>  <br><br>At most, you must calculate 256 terms. Trivial for a computer. But to guess the public key for a given private key, you would need to check every number in between (that big number we talked about earlier).</p><h3 id=\"how-do-these-keys-translate-into-cryptographic-functions\">How do these keys translate into cryptographic functions?<br></h3><p><strong>ECDH</strong> is a key sharing algorithm, most commonly used to send encrypted messages. ECDH works by multiplying your private key by another's public key to get a shared secret, then using that shared secret to perform symmetric encryption.</p><!--kg-card-begin: markdown--><p>To illustrate why this works:</p>\n<ul>\n<li>Alice and Bob agree on a curve with starting point <code>P</code></li>\n<li>Alice has a private key <code>a</code> and public key <code>A = a * P</code></li>\n<li>Bob has a private key <code>b</code> and public key <code>B = b * P</code></li>\n<li><code>a * B = a * b * P = b * A</code></li>\n<li>So <code>a * b * P</code> ends up being the shared secret</li>\n</ul>\n<!--kg-card-end: markdown--><p><strong>ECDSA </strong>is a signature algorithm, used to prove authenticity of some information. The algorithm is a bit trickier than ECDH. <br><em>Warning: lots of equations, feel free to skip to the takeways below.</em></p><!--kg-card-begin: markdown--><ul>\n<li>Alice and bob agree on a curve with starting point <code>P</code></li>\n<li>Alice has a private key <code>a</code> and public key <code>A = a * P</code></li>\n<li>Alice chooses a random <code>k</code> and point <code>K = k * P</code></li>\n<li>Alice takes <code>r</code> which is just the x-value of <code>K</code></li>\n<li>Alice hashes her message to produce hash <code>H</code></li>\n<li>Alice calculates a value <code>s = inv(k)*(H+ra)</code></li>\n<li>Alice sends her message to Bob along with the signature <code>(r, s)</code></li>\n<li>Bob calculates <code>H</code> from the message</li>\n<li>Bob ensures that <code>r = H*inv(s)*P + r*inv(s)*A</code></li>\n<li>If it does, the signature is valid!</li>\n</ul>\n<p>If you skipped those equations or they don't quite click, the key <strong>takeaways</strong> are:</p>\n<ul>\n<li>Alice sends a random value <code>r</code> and a calculated value <code>s</code> that could only be calculated with a combination of the private key, the message hash, and the random value, but gives away no information about her private key.</li>\n<li>Bob can verify <code>r</code> and <code>s</code> by using just the message hash and Alice's public key</li>\n<li>You <em>need</em> a good source of randomness to use ECDSA. If you're randomness function is broken, repeated signatures can disclose your private key</li>\n</ul>\n<!--kg-card-end: markdown--><h3 id=\"real-quick-you-mentioned-symmetric-encryption-how-does-that-work\">Real quick, you mentioned symmetric encryption. How does that work?</h3><p>Symmetric encryption uses just one key to encrypt and decrypt a message. Encrypted messages just look like random jumbles of letters and numbers that give no information about the underlying message unless you have the key to \"unjumble\" it. Most algorithms use a <strong>block cipher. </strong>This involves choosing a block size (say 64 bits), and encrypting the message in blocks of that size.</p><p>We mentioned symmetric encryption when talking about ECDH. When people say \"asymmetrically encrypted\", they actually mean \"symmetrically encrypted with a secret that is shared asymmetrically\".</p><p>A few examples of algorithms are <a href=\"https://en.wikipedia.org/wiki/Advanced_Encryption_Standard\">AES</a>, <a href=\"https://en.wikipedia.org/wiki/Salsa20\">Salsa20</a>, or <a href=\"https://keybase.io/triplesec\">Triplesec</a> (which is actually just a combo of the first two for <em>extra security</em>).</p><h3 id=\"okay-i-generally-understand-how-this-works-but-how-do-people-decide-on-a-curve-and-a-point-p\">Okay, I generally understand how this works, but how do people decide on a curve and a point P?<br></h3><p>A bunch of different ways, sometimes they're chosen for a specific reason, sometimes they're algorithmically determined. Different curves have different properties. Checkout <a href=\"https://safecurves.cr.yp.to/\">Safe Curves</a> for an analysis of different curves.</p><h3 id=\"can-faulty-curves-give-backdoors\">Can \"faulty\" curves give backdoors?<br></h3><p>Yes! Faulty curves can give shortcuts to determining a private key from a given public key. <br><br><em>Many suspect that NIST curves have NSA backdoors in them.</em> <a href=\"https://www.ams.org/notices/201402/rnoti-p190.pdf\">This is because a published NIST randomization algorithm (that the NSA tightly collaborated on) was found to have a backdoor.</a> We encourage you not to use any curves published by the NIST!</p><h3 id=\"what-s-this-edwards-curve-i-keep-hearing-about\">What's this \"Edwards Curve\" I keep hearing about?<br></h3><p>Most Elliptic curves are <a href=\"https://en.wikipedia.org/wiki/Montgomery_curve\"><strong>Montgomery Curves</strong></a>. Edwards Curves were described by mathematician Harold Edwards and popularized by cryptographer Daniel Bernstein. They have a different structure that allows for a faster signature algorithm. This signature algorithm, when performed on an Edwards curve, is called <strong>EdDSA</strong>. This algorithm runs in constant time, meaning it's faster and leaks less information</p><h3 id=\"can-edwards-curves-do-key-sharing\">Can Edwards Curves do key sharing?<br></h3><p>Edwards curves are specifically used for signatures. There is not a related Diffie-Hellman key sharing algorithm.</p><h3 id=\"so-if-i-want-to-use-both-ecdh-eddsa-i-need-two-key-pairs\">So if I want to use both ECDH &amp; EdDSA, I need two key pairs?<br></h3><p>Not exactly. Let's take the most common Edwards curve <strong>Ed25519</strong>. This curve is related to Montgomery curve <strong>Curve25519</strong>. In fact Ed25519 is a <strong><a href=\"https://en.wikipedia.org/wiki/Twists_of_curves\">twist</a></strong> of Curve25519. A \"twist\" basically means that the curves are mappable to one another. What this means is that you can use the same private key to generate a public key on both curves and then transform those public keys between one another without any knowledge of the private key. Specifically, with these equations.</p><!--kg-card-begin: markdown--><pre><code>(u, v) = ((1+y)/(1-y), sqrt(-486664)*u/x)\n(x, y) = (sqrt(-486664)*u/v, (u-1)/(u+1))\n</code></pre>\n<p>where <code>(u, v)</code> is the Curve25519 point and <code>(x, y)</code> is the Ed25519 point</p>\n<!--kg-card-end: markdown--><p>You can read a more in-depth post about that <a href=\"https://blog.filippo.io/using-ed25519-keys-for-encryption/\">Here</a>.</p><h3 id=\"what-cryptography-algorithms-do-protocols-like-bitcoin-ethereum-and-ipfs-use\">What cryptography algorithms do protocols like Bitcoin, Ethereum, and IPFS use?<br></h3><p>Bitcoin uses <strong>secp256k1</strong> for <a href=\"https://bitcointalk.org/index.php?topic=2699.msg37328#msg37328\">completely arbitrary reasons</a><br>Etherem uses <strong>secp256k1</strong> for <a href=\"https://forum.ethereum.org/discussion/comment/53/#Comment_53\">interop with Bitcoin</a><br>IPFS uses <strong>Ed25519</strong> and <strong>RSA</strong>.</p><h3 id=\"okay-so-what-do-you-recommend\">Okay so what do you recommend?</h3><!--kg-card-begin: markdown--><p>We're using Ed25519 &amp; Curve25519. We chose these because:</p>\n<ul>\n<li>They are well-recognized as <a href=\"https://safecurves.cr.yp.to/\">safe curves</a></li>\n<li>They are one of the more commonly used curves, so we have easier interop</li>\n<li>They allow us to use EdDSA for signatures</li>\n<li>We're fairly certain that they don't have any backdoors in them</li>\n</ul>\n<!--kg-card-end: markdown--><h3 id=\"this-is-sweet-why-doesn-t-everyone-have-a-private-key\">This is sweet! Why doesn't everyone have a private key??<br></h3><p>We ask ourselves the same question everyday. The main reason is: it's a pain. Keys look scary (<code>6A576D5A7134743777217A25432A462D4A614...</code>). And if you lose a key, you're forever screwed. There's no \"recovery by email\" available. </p><h3 id=\"what-are-people-doing-about-this\">What are people doing about this?<br></h3><!--kg-card-begin: markdown--><p>We need to fix the UX of public keys. Remove the scary hexadecimal strings and provide more painless recovery.</p>\n<p>A few options are</p>\n<ul>\n<li>Replication: Share the same key across multiple devices. If you drop your phone in a lake, you can recover your key with your laptop</li>\n<li>Shamir Secret Sharing: This involves splitting a key up into separate &quot;shares&quot;. Each share reveals nothing about the key, but by combining the shares back together, you can recover the private key. This leads to interesting solutions like <a href=\"https://www.coindesk.com/pay-your-friends-to-protect-your-keys-one-startups-new-take-on-crypto-custody\">social recovery</a> or <a href=\"https://medium.com/@amanladia1/zerowallet-a-zkp-based-wallet-authentication-mechanism-9871dcca0a01\">zero-knowledge key recovery</a> which we implemented as a <a href=\"https://github.com/fission-suite/zerowallet-poc\">Proof of Concept</a>.</li>\n<li>Secure Hardware Enclaves: Many phones and computers that are coming out these days have Secure Hardware Enclaves. These use both hardware and software to provide <em>very</em> strong security gurantees</li>\n<li>Hardware Secure Modules (HSMs): These are similar to Secure Hardware Enclaves, but larger and hold more information. Physical modules exist, and you can also rent space from cloud providers such as AWS. Less security-minded users might be interested in backing up their keys with a &quot;trusted custodian&quot; (this still ends up being quite a bit safer than the internet's current security model).</li>\n</ul>\n<!--kg-card-end: markdown--><h3 id=\"how-are-you-using-private-keys\">How are you using private keys?<br></h3><p>Here at Fission, we wanted to get private keys into the hands of our users as quickly as possible. We just rolled out our new authentication scheme which uses private keys to power our command line tool: <a href=\"https://github.com/fission-suite/cli\">Fission Live</a>. Give it a go and let us know what you think! We have other big projects coming down the pipeline soon that will use this public key infrastructure to power some really neat features: a global encrypted filesystem, cryptographically verifiable claims, and more!</p>","url":"https://blog.fission.codes/everything-you-wanted-to-know-about-elliptic-curve-cryptography/","canonical_url":null,"uuid":"c045a827-06e6-4b75-895e-782a8b2ddfce","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5e274d05fbc2c9001eeb9759","reading_time":null}},{"node":{"id":"Ghost__Post__5e6687c859c1cc001e896fc2","title":"Fission on the IPFS Community Call","slug":"fission-on-the-ipfs-community-call","featured":true,"feature_image":"https://s3.fission.codes/2020/03/ipfsbot-twitter-header-community-call.png","excerpt":"Fission presented what we've been up to on the IPFS Weekly Call on March 9th, 2020.","custom_excerpt":"Fission presented what we've been up to on the IPFS Weekly Call on March 9th, 2020.","created_at_pretty":"09 March, 2020","published_at_pretty":"09 March, 2020","updated_at_pretty":"31 March, 2020","created_at":"2020-03-09T11:15:36.000-07:00","published_at":"2020-03-09T12:34:27.000-07:00","updated_at":"2020-03-31T13:46:57.000-07:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"}],"primary_author":{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"},"primary_tag":{"name":"Presentations","slug":"presentation","description":null,"feature_image":"https://images.unsplash.com/photo-1535016120720-40c646be5580?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","meta_description":null,"meta_title":null},"tags":[{"name":"Presentations","slug":"presentation","description":null,"feature_image":"https://images.unsplash.com/photo-1535016120720-40c646be5580?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","meta_description":null,"meta_title":null},{"name":"IPFS","slug":"ipfs","description":"InterPlanetary File System","feature_image":null,"meta_description":null,"meta_title":null},{"name":"web native","slug":"web-native","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Community Call","slug":"community-call","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"Thanks to the IPFS team for hosting us on the weekly community call! These \ncommunity calls happen weekly on Mondays at 1600 UTC\n[https://talk.fission.codes/t/ipfs-weekly-community-calls/521].\n\nWe presented an intro to what we're building at Fission, including our hosted\nservices, open source contributions, and more.\n\nWe've started to use the phrase \"web native apps\" to describe Fission's app\ncreation platform that decouples storage from apps, with user controlled data,\nand secure by default. Which is what is expected by users  from native mobile\napps.\n\nYou can watch the video – stored on IPFS! – here:\n\nhttps://ipfs.runfission.com/ipfs/QmdAdEPac3X41pVZE2m3EUJibg5mXqtW6sE5LuMDV5mR7x/Fission%20Building%20Web%20Native%20Apps%20IPFS%20Weekly%20Call%202020-03-09.mp4\n\n Originally from the IPFS YouTube [https://youtu.be/wvmZj7IE9Bo]The slides are available on IPFS as a PDF\n[https://events.fission.name/2020/ipfs-community-call/Fission-IPFS-Community-Call-March2020.pdf]\n:\n\nAlso on Notist [https://noti.st/bmann/TltFLG/fission-building-web-native-apps]\n--------------------------------------------------------------------------------\n\nFrom the final slide, here are all the places where you can find out more and\nconnect with us:\n\n * Github: fission-suite [https://github.com/fission-suite]\n * Install Guide & Docs: guide.fission.codes [https://guide.fission.codes]\n * Technical Whitepaper: whitepaper.fission.codes\n   [https://whitepaper.fission.codes]   – this is a work in progress! 🚧 👷‍♀️✍️\n * Discourse forum: talk.fission.codes [https://talk.fission.codes]\n * Discord chat: fission.codes/discourse [https://fission.codes/discourse]\n * Twitter: @fissioncodes [https://twitter.com/fissioncodes], team accounts \n   @expede [https://twitter.com/expede],@bmann [https://twitter.com/bmann], \n   @icidasset [https://twitter.com/icidasset], and @dholms on Github\n   [https://github.com/dholms]","html":"<p>Thanks to the IPFS team for hosting us on the weekly community call! These <a href=\"https://talk.fission.codes/t/ipfs-weekly-community-calls/521\">community calls happen weekly on Mondays at 1600 UTC</a>.</p><p>We presented an intro to what we're building at Fission, including our hosted services, open source contributions, and more.</p><p>We've started to use the phrase \"web native apps\" to describe Fission's app creation platform that decouples storage from apps, with user controlled data, and secure by default. Which is what is expected by users  from native mobile apps.</p><p>You can watch the video – stored on IPFS! – here:</p><!--kg-card-begin: html--><figure class=\"kg-card kg-card-hascaption\">\n<video width=\"100%\" height=\"100%\" controls>\n              <source src=\"https://ipfs.runfission.com/ipfs/QmdAdEPac3X41pVZE2m3EUJibg5mXqtW6sE5LuMDV5mR7x/Fission%20Building%20Web%20Native%20Apps%20IPFS%20Weekly%20Call%202020-03-09.mp4\">\n              <a href=\"https://ipfs.runfission.com/ipfs/QmdAdEPac3X41pVZE2m3EUJibg5mXqtW6sE5LuMDV5mR7x/Fission%20Building%20Web%20Native%20Apps%20IPFS%20Weekly%20Call%202020-03-09.mp4\">https://ipfs.runfission.com/ipfs/QmdAdEPac3X41pVZE2m3EUJibg5mXqtW6sE5LuMDV5mR7x/Fission%20Building%20Web%20Native%20Apps%20IPFS%20Weekly%20Call%202020-03-09.mp4</a>\n            </video>\n    <figcaption>Originally from the <a href=\"https://youtu.be/wvmZj7IE9Bo\">IPFS YouTube</a></figcaption>\n</figure><!--kg-card-end: html--><p>The slides are <a href=\"https://events.fission.name/2020/ipfs-community-call/Fission-IPFS-Community-Call-March2020.pdf\">available on IPFS as a PDF</a>:</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://s3.fission.codes/2020/03/Screen-Shot-2020-03-09-at-12.19.32-PM.png\" class=\"kg-image\"><figcaption><a href=\"https://noti.st/bmann/TltFLG/fission-building-web-native-apps\">Also on Notist</a></figcaption></figure><!--kg-card-end: image--><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p>From the final slide, here are all the places where you can find out more and connect with us:</p><ul><li>Github: <a href=\"https://github.com/fission-suite\">fission-suite</a></li><li>Install Guide &amp; Docs: <a href=\"https://guide.fission.codes\">guide.fission.codes</a></li><li>Technical Whitepaper: <a href=\"https://whitepaper.fission.codes\">whitepaper.fission.codes</a>  – this is a work in progress! 🚧 👷‍♀️✍️</li><li>Discourse forum: <a href=\"https://talk.fission.codes\">talk.fission.codes</a></li><li>Discord chat: <a href=\"https://fission.codes/discourse\">fission.codes/discourse</a></li><li>Twitter: <a href=\"https://twitter.com/fissioncodes\">@fissioncodes</a>, team accounts <a href=\"https://twitter.com/expede\">@expede</a>,  <a href=\"https://twitter.com/bmann\">@bmann</a>, <a href=\"https://twitter.com/icidasset\">@icidasset</a>, and <a href=\"https://github.com/dholms\">@dholms on Github</a></li></ul>","url":"https://blog.fission.codes/fission-on-the-ipfs-community-call/","canonical_url":null,"uuid":"9ee77a98-26c4-4879-b9e3-349650be7806","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5e6687c859c1cc001e896fc2","reading_time":null}},{"node":{"id":"Ghost__Post__5e137d1b0dcd70001e823ea3","title":"Fission team retreat and Fernie Internet Next","slug":"fission-team-retreat-fernienext","featured":true,"feature_image":"https://s3.fission.codes/2020/01/fernie-internet-next-poster.jpg","excerpt":"The Fission team held their quarterly retreat in Fernie BC, as well as a remote presentation series on decentralized web tech called Fernie Internet Next.","custom_excerpt":"The Fission team held their quarterly retreat in Fernie BC, as well as a remote presentation series on decentralized web tech called Fernie Internet Next.","created_at_pretty":"06 January, 2020","published_at_pretty":"26 February, 2020","updated_at_pretty":"26 February, 2020","created_at":"2020-01-06T10:31:55.000-08:00","published_at":"2020-02-26T14:25:59.000-08:00","updated_at":"2020-02-26T14:30:13.000-08:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"}],"primary_author":{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"},"primary_tag":{"name":"Events","slug":"event","description":"Events in the decentralized web, p2p, & Ethereum community.","feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"Events","slug":"event","description":"Events in the decentralized web, p2p, & Ethereum community.","feature_image":null,"meta_description":null,"meta_title":null},{"name":"Fernie Internet Next","slug":"fernie-internet-next","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"decentralized web","slug":"decentralized-web","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"DWeb","slug":"dweb","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"We combined the Fission team retreat with a selection of remote presentations\naround decentralized web topics.\n\nThe Fission team is distributed (as of this writing, Vancouver, Canada; Nixa,\nMissouri, USA; Ghent, Belgium) so we make sure to meet in person every three\nmonths or so. Our last retreat was in Berlin, where we launched the Fission CLI\ntool and Live services.\n\nThis time around we made our way to Fernie, BC [https://tourismfernie.com/], a\nsmall mountain town with a great ski hill that is in the south-east corner of\nBritish Columbia, close to the Alberta border. We flew in to Calgary and then\ndrove about 3 hours to Fernie.\n\nBlaine and Brooke on the Fairy Creek TrailWhy Fernie? Well, our friend Blaine Cook @blaine [https://twitter.com/blaine],\nwho you may better know as the original Lead Developer at Twitter, grew up\naround Fernie and was going to be based there working remotely. When we caught\nup in Vancouver, it turns out he's been thinking about content addressing and\nportable computing in a very similar way to Brooke's ideas.\n\nAnd so, we picked a small, snowy, BC mountain town as the location of our\nretreat. Thanks to Blaine and Natasha for showing us around Fernie, including\nlots of fun snow activities!\n\nFernie Internet Next\nWe originally had the idea to invite some other people to join us in skiing and\ndecentralized web talks, but ended up running out of time for organizing. And,\nit turns out folks from Portugal don't like -20C (we'll get you next time Moxy\nStudio [https://moxy.studio/]!).\n\nSo instead we reached out to some people working on interesting tech in the\nbroader decentralized web space and invited them to give remote presentations.\n\nWe ended up with 5 talks across two days, with Brooke & Blaine broadcasting from\nFernie, others joining us remotely from elsewhere in North America.\n\nWe recorded all the talks and added some links and notes, which are all\navailable on the agenda on the Fission Talk forum, as well as links to the\nindividual videos and talks below:\n\nBrooke Zelenka: Universal Substrate\n[https://talk.fission.codes/t/brooklyn-zelenka-talk-notes-video-feb-13th/494]\n\nDave Hrycyszyn: Mixnets with Nym Technologies\n[https://talk.fission.codes/t/dave-hrycyszyn-nym-technologies-talk-notes-video-feb-13th/495]\n\n> Older mixnets had various problems. @nymproject\n[https://twitter.com/nymproject?ref_src=twsrc%5Etfw]  uses Loopix \nhttps://t.co/vsC81TMvkZ, plus Sphinx encrypted packet format \nhttps://t.co/EvAC4xVO60  (which is same format that Lightning uses)@futurechimp\n[https://twitter.com/futurechimp?ref_src=twsrc%5Etfw]  #fernienext\n[https://twitter.com/hashtag/fernienext?src=hash&ref_src=twsrc%5Etfw]\n\n— FISSION (@FISSIONcodes) February 13, 2020\n[https://twitter.com/FISSIONcodes/status/1228036912620826624?ref_src=twsrc%5Etfw]\nEvan \"Rabble\" Henshaw-Plath: Planetary & Secure Scuttlebutt\n[https://talk.fission.codes/t/evan-rabble-henshaw-plath-talk-notes-video-feb-13th/497]\n\n> Planetary is building a humane open social media platform built on secure\nscuttlebutt (SSB).\n\nOpen decentralized like a cross between Instagram, Tumblr, and Google Reader,\nwith Patreon or Substack style paid feeds for members@rabble\n[https://twitter.com/rabble?ref_src=twsrc%5Etfw]  #fernienext\n[https://twitter.com/hashtag/fernienext?src=hash&ref_src=twsrc%5Etfw]\n\n— FISSION (@FISSIONcodes) February 13, 2020\n[https://twitter.com/FISSIONcodes/status/1228071678606888962?ref_src=twsrc%5Etfw]\n> Decentralization != better: social software is complicated, just like society.\n\nWe need to be intentional about design.\n\nSSB Principles Stack -- Environment, Technology, Community, Society.@rabble\n[https://twitter.com/rabble?ref_src=twsrc%5Etfw]  #fernienext\n[https://twitter.com/hashtag/fernienext?src=hash&ref_src=twsrc%5Etfw]\n\n— FISSION (@FISSIONcodes) February 13, 2020\n[https://twitter.com/FISSIONcodes/status/1228083168353239040?ref_src=twsrc%5Etfw]\nBlaine Cook: Edition, Content Addressing and Compute\n[https://talk.fission.codes/t/blaine-cook-talk-notes-video-feb-13th/493]\n\n> All the functionality of an \"operating system\" -- at least a POSIX one.\n\nThink of everything as data. From files to functions to apps.@blaine\n[https://twitter.com/blaine?ref_src=twsrc%5Etfw]  #fernienext\n[https://twitter.com/hashtag/fernienext?src=hash&ref_src=twsrc%5Etfw]\n\n— FISSION (@FISSIONcodes) February 13, 2020\n[https://twitter.com/FISSIONcodes/status/1228100366773837826?ref_src=twsrc%5Etfw]\nPeter van Hardenberg: Local first software\n[https://talk.fission.codes/t/peter-van-hardenberg-ink-switch-talk-notes-and-video-feb-14th-2020/489]\n\n> \"The goal here is to influence other people to build better software\"@pvh\n[https://twitter.com/pvh?ref_src=twsrc%5Etfw]  #fernienext\n[https://twitter.com/hashtag/fernienext?src=hash&ref_src=twsrc%5Etfw]\n\n— FISSION (@FISSIONcodes) February 14, 2020\n[https://twitter.com/FISSIONcodes/status/1228399725809819649?ref_src=twsrc%5Etfw]\n\n--------------------------------------------------------------------------------\n\nIt was a great experience to learn directly from the creators of these tools and\nprotocols. Stay tuned for more remote presentations, we're going to be inviting\npeople in to speak, and talk about our own progress, on a regular basis.\n\nFernie Experiences\nTo finish up, here are a handful of photos of our retreat, the location where we\npresented from, and various activities in and around Fernie.\n\nFrom top left, clockwise: Fernie condo home base, condo back window view, Natash\nand Blaine and the snowshoeing group, cooking some chickens together, Dave from\nNym Tech presenting, Blaine and Steven presenting, Fernie Ghostriders Junior A\nhockey game (Steven's first hockey game), Boris in front of Sparwood's \"Titan\"\nworld's largest truck","html":"<p>We combined the Fission team retreat with a selection of remote presentations around decentralized web topics.</p><p>The Fission team is distributed (as of this writing, Vancouver, Canada; Nixa, Missouri, USA; Ghent, Belgium) so we make sure to meet in person every three months or so. Our last retreat was in Berlin, where we launched the Fission CLI tool and Live services.</p><p>This time around we made our way to <a href=\"https://tourismfernie.com/\">Fernie, BC</a>, a small mountain town with a great ski hill that is in the south-east corner of British Columbia, close to the Alberta border. We flew in to Calgary and then drove about 3 hours to Fernie.</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://s3.fission.codes/2020/02/2020-02-09-blaine-brooke-fairy-creek-trail.jpg\" class=\"kg-image\"><figcaption>Blaine and Brooke on the Fairy Creek Trail</figcaption></figure><!--kg-card-end: image--><p>Why Fernie? Well, our friend <a href=\"https://twitter.com/blaine\">Blaine Cook @blaine</a>, who you may better know as the original Lead Developer at Twitter, grew up around Fernie and was going to be based there working remotely. When we caught up in Vancouver, it turns out he's been thinking about content addressing and portable computing in a very similar way to Brooke's ideas.</p><p>And so, we picked a small, snowy, BC mountain town as the location of our retreat. Thanks to Blaine and Natasha for showing us around Fernie, including lots of fun snow activities!</p><h1 id=\"fernie-internet-next\">Fernie Internet Next</h1><p>We originally had the idea to invite some other people to join us in skiing and decentralized web talks, but ended up running out of time for organizing. And, it turns out folks from Portugal don't like -20C (we'll get you next time <a href=\"https://moxy.studio/\">Moxy Studio</a>!).</p><p>So instead we reached out to some people working on interesting tech in the broader decentralized web space and invited them to give remote presentations.</p><p>We ended up with 5 talks across two days, with Brooke &amp; Blaine broadcasting from Fernie, others joining us remotely from elsewhere in North America.</p><p>We recorded all the talks and added some links and notes, which are all available on the agenda on the Fission Talk forum, as well as links to the individual videos and talks below:</p><p><a href=\"https://talk.fission.codes/t/brooklyn-zelenka-talk-notes-video-feb-13th/494\">Brooke Zelenka: Universal Substrate</a></p><p><a href=\"https://talk.fission.codes/t/dave-hrycyszyn-nym-technologies-talk-notes-video-feb-13th/495\">Dave Hrycyszyn: Mixnets with Nym Technologies</a></p><!--kg-card-begin: embed--><figure class=\"kg-card kg-embed-card\"><blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">Older mixnets had various problems. <a href=\"https://twitter.com/nymproject?ref_src=twsrc%5Etfw\">@nymproject</a> uses Loopix <a href=\"https://t.co/vsC81TMvkZ\">https://t.co/vsC81TMvkZ</a>, plus Sphinx encrypted packet format <a href=\"https://t.co/EvAC4xVO60\">https://t.co/EvAC4xVO60</a> (which is same format that Lightning uses)<a href=\"https://twitter.com/futurechimp?ref_src=twsrc%5Etfw\">@futurechimp</a> <a href=\"https://twitter.com/hashtag/fernienext?src=hash&amp;ref_src=twsrc%5Etfw\">#fernienext</a></p>&mdash; FISSION (@FISSIONcodes) <a href=\"https://twitter.com/FISSIONcodes/status/1228036912620826624?ref_src=twsrc%5Etfw\">February 13, 2020</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n</figure><!--kg-card-end: embed--><p><a href=\"https://talk.fission.codes/t/evan-rabble-henshaw-plath-talk-notes-video-feb-13th/497\">Evan \"Rabble\" Henshaw-Plath: Planetary &amp; Secure Scuttlebutt</a></p><!--kg-card-begin: embed--><figure class=\"kg-card kg-embed-card\"><blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">Planetary is building a humane open social media platform built on secure scuttlebutt (SSB).<br><br>Open decentralized like a cross between Instagram, Tumblr, and Google Reader, with Patreon or Substack style paid feeds for members<a href=\"https://twitter.com/rabble?ref_src=twsrc%5Etfw\">@rabble</a> <a href=\"https://twitter.com/hashtag/fernienext?src=hash&amp;ref_src=twsrc%5Etfw\">#fernienext</a></p>&mdash; FISSION (@FISSIONcodes) <a href=\"https://twitter.com/FISSIONcodes/status/1228071678606888962?ref_src=twsrc%5Etfw\">February 13, 2020</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n</figure><!--kg-card-end: embed--><!--kg-card-begin: embed--><figure class=\"kg-card kg-embed-card\"><blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">Decentralization != better: social software is complicated, just like society.<br><br>We need to be intentional about design.<br><br>SSB Principles Stack -- Environment, Technology, Community, Society.<a href=\"https://twitter.com/rabble?ref_src=twsrc%5Etfw\">@rabble</a> <a href=\"https://twitter.com/hashtag/fernienext?src=hash&amp;ref_src=twsrc%5Etfw\">#fernienext</a></p>&mdash; FISSION (@FISSIONcodes) <a href=\"https://twitter.com/FISSIONcodes/status/1228083168353239040?ref_src=twsrc%5Etfw\">February 13, 2020</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n</figure><!--kg-card-end: embed--><p><a href=\"https://talk.fission.codes/t/blaine-cook-talk-notes-video-feb-13th/493\">Blaine Cook: Edition, Content Addressing and Compute</a></p><!--kg-card-begin: embed--><figure class=\"kg-card kg-embed-card\"><blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">All the functionality of an &quot;operating system&quot; -- at least a POSIX one.<br><br>Think of everything as data. From files to functions to apps.<a href=\"https://twitter.com/blaine?ref_src=twsrc%5Etfw\">@blaine</a> <a href=\"https://twitter.com/hashtag/fernienext?src=hash&amp;ref_src=twsrc%5Etfw\">#fernienext</a></p>&mdash; FISSION (@FISSIONcodes) <a href=\"https://twitter.com/FISSIONcodes/status/1228100366773837826?ref_src=twsrc%5Etfw\">February 13, 2020</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n</figure><!--kg-card-end: embed--><p><a href=\"https://talk.fission.codes/t/peter-van-hardenberg-ink-switch-talk-notes-and-video-feb-14th-2020/489\">Peter van Hardenberg: Local first software </a></p><!--kg-card-begin: embed--><figure class=\"kg-card kg-embed-card\"><blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&quot;The goal here is to influence other people to build better software&quot;<a href=\"https://twitter.com/pvh?ref_src=twsrc%5Etfw\">@pvh</a> <a href=\"https://twitter.com/hashtag/fernienext?src=hash&amp;ref_src=twsrc%5Etfw\">#fernienext</a></p>&mdash; FISSION (@FISSIONcodes) <a href=\"https://twitter.com/FISSIONcodes/status/1228399725809819649?ref_src=twsrc%5Etfw\">February 14, 2020</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n</figure><!--kg-card-end: embed--><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p>It was a great experience to learn directly from the creators of these tools and protocols. Stay tuned for more remote presentations, we're going to be inviting people in to speak, and talk about our own progress, on a regular basis.</p><h2 id=\"fernie-experiences\">Fernie Experiences</h2><p>To finish up, here are a handful of photos of our retreat, the location where we presented from, and various activities in and around Fernie.</p><!--kg-card-begin: gallery--><figure class=\"kg-card kg-gallery-card kg-width-wide kg-card-hascaption\"><div class=\"kg-gallery-container\"><div class=\"kg-gallery-row\"><div class=\"kg-gallery-image\"><img src=\"https://s3.fission.codes/2020/02/fernie-condo.jpg\" width=\"4032\" height=\"3024\"></div><div class=\"kg-gallery-image\"><img src=\"https://s3.fission.codes/2020/02/fernie-back-window.jpg\" width=\"4032\" height=\"3024\"></div><div class=\"kg-gallery-image\"><img src=\"https://s3.fission.codes/2020/02/IMG_1887.JPG\" width=\"4032\" height=\"3024\"></div></div><div class=\"kg-gallery-row\"><div class=\"kg-gallery-image\"><img src=\"https://s3.fission.codes/2020/02/2020-02-09_15-23-33_060.jpeg\" width=\"4032\" height=\"3024\"></div><div class=\"kg-gallery-image\"><img src=\"https://s3.fission.codes/2020/02/2020-02-13_11-10-50_788.jpeg\" width=\"4032\" height=\"3024\"></div><div class=\"kg-gallery-image\"><img src=\"https://s3.fission.codes/2020/02/IMG_1906.JPG\" width=\"4032\" height=\"3024\"></div></div><div class=\"kg-gallery-row\"><div class=\"kg-gallery-image\"><img src=\"https://s3.fission.codes/2020/02/fernie-ghostriders-hockey-steven.jpg\" width=\"4032\" height=\"3024\"></div><div class=\"kg-gallery-image\"><img src=\"https://s3.fission.codes/2020/02/sparwood-titan-truck.jpg\" width=\"4032\" height=\"3024\"></div></div></div><figcaption>From top left, clockwise: Fernie condo home base, condo back window view, Natash and Blaine and the snowshoeing group, cooking some chickens together, Dave from Nym Tech presenting, Blaine and Steven presenting, Fernie Ghostriders Junior A hockey game (Steven's first hockey game), Boris in front of Sparwood's \"Titan\" world's largest truck</figcaption></figure><!--kg-card-end: gallery-->","url":"https://blog.fission.codes/fission-team-retreat-fernienext/","canonical_url":null,"uuid":"17e6a03f-a6f6-452e-ad21-0edb49a970d7","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5e137d1b0dcd70001e823ea3","reading_time":null}},{"node":{"id":"Ghost__Post__5e50441cf2d438001ebdfeb4","title":"Back to the Future (of Drupal)","slug":"back-to-the-future-of-drupal","featured":true,"feature_image":"https://s3.fission.codes/2020/02/Screenshot-2020-02-21-12.52.48.png","excerpt":"Boris will be presenting on Drupal and the Decentralized Web at DrupalCon Minneapolis, May 18 - 22.","custom_excerpt":"Boris will be presenting on Drupal and the Decentralized Web at DrupalCon Minneapolis, May 18 - 22.","created_at_pretty":"21 February, 2020","published_at_pretty":"21 February, 2020","updated_at_pretty":"23 June, 2020","created_at":"2020-02-21T12:57:00.000-08:00","published_at":"2020-02-21T14:40:45.000-08:00","updated_at":"2020-06-23T11:24:02.000-07:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"}],"primary_author":{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"},"primary_tag":{"name":"Events","slug":"event","description":"Events in the decentralized web, p2p, & Ethereum community.","feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"Events","slug":"event","description":"Events in the decentralized web, p2p, & Ethereum community.","feature_image":null,"meta_description":null,"meta_title":null},{"name":"Drupal","slug":"drupal","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"DrupalCon","slug":"drupalcon","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"speaking","slug":"speaking","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"decentralized web","slug":"decentralized-web","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"After a long absence from the Drupal community, I've been accepted as a speaker\nat DrupalCon Minneapolis [https://events.drupal.org/minneapolis2020/]. I'll be\npresenting about Drupal and the Decentralized Web, and some of the changes that\nhave happened from the past to the present on a number of topics, including open\nsource licenses, a shift in architectures and hosting, the rise of the\nadvertising supported web, and what a more peer-to-peer future holds.\n\nUpdate:  DrupalCon Global has been rescheduled as a fully online, distributed\nconference. I will miss the opportunity to catch up with many people in person.\nBut I have been lucky enough to have my Drupal and the Decentralized Web\nsession\naccepted as a \"live\" talk\n[https://events.drupal.org/global2020/sessions/drupal-and-decentralized-web],\ntaking place on July 14th at 23:15 UTC / 4:15pm PDT / 7:15pm EDT. Please join me\nat the conference and for my session, I've added it as an event on our forum as\nwell\n[https://talk.fission.codes/t/drupal-and-the-decentralized-web-boris-mann-drupalcon-global-july-14th/729]\n.\n\n\n--------------------------------------------------------------------------------\n\nBack in 2003, I joined drupal.org, posted about wrapping recipe.module with CSS\nclasses [https://www.drupal.org/project/recipe/issues/2524], and the rest is\nhistory.\n\n> Happy 16th birthday, Drupal! 🎂🎈 https://t.co/eTO1JMvxTQ  \npic.twitter.com/Q57SXfQQIY [https://t.co/Q57SXfQQIY]\n\n— Dries Buytaert (@Dries) January 15, 2017\n[https://twitter.com/Dries/status/820624651344809984?ref_src=twsrc%5Etfw]\nDries presenting in Vancouver in November 2004, in a tweet from 2017. Drupal is\n19 years old this year!I went on to host Dries in Vancouver [https://dri.es/album/vancouver-2004/]  in\n2004, along with the first printed Drupal t-shirts, a beer tower\n[https://dri.es/album/vancouver-2004/pub-beer-tower-2], and the folks from\nDeanSpace / CivicSpace (working on the Democratic primaries) flew up to join us.\n\nAllow me some brief nostalgia…\n\n\n--------------------------------------------------------------------------------\n\nI founded Bryght\n[https://www.drupal.org/forum/general/news-and-announcements/2004-08-30/who-are-these-bryght-guys]\n, one of the first commercial companies focused on Drupal, helped organize many\nmore DrupalCons and DrupalCamps, and helped found the Drupal Association.\n\nFOSDEM 2005, before which the first DrupalCon had about 40 peopleWe were in the\nthick of Web 1.0 transitioning to Web 2.0, and the early days of identity\nstandards and communication between websites. That post I made about the \nrecipe.module  is actually tied to a Blogger.com account, which at the time you\ncould use to login to drupal.org.\n\nOpen source licenses and the details of GPL were hotly contested, and we faced a\nlot of FUD from Microsoft and others. A global community using mailing lists and\nIRC was forming, and we didn't know what we were doing was new and different,\nbut that we had come for the code and were staying for the community.\n\n\n--------------------------------------------------------------------------------\n\nNow, I see Web3 emerging – although the blog post where I attempt to define what\nthat means to me still isn't finished yet!\n\nNew open source licenses are emerging (Dries on Makers and Takers\n[https://dri.es/balancing-makers-and-takers-to-scale-and-sustain-open-source]),\nbusiness models beyond the advertising supported web are being sought for.\n\nAdvances in computer science theory have given us new tools for distributed\nsystems and cryptography, leading to both better privacy and programmable\nInternet money. \n\nDries' post on low-code and no code tools\n[https://dri.es/low-code-and-no-code-tools-continue-to-drive-the-web-forward] \nshows more changes that I think fit into this theme:\n\n> When everyone is a builder, more good things will happen on the web. I was\nexcited about this trend more than 12 years ago, and remain excited today. I'm\neager to see the progress no-code and low-code solutions will bring to the web\nin the next decade.\nThe Drupal community has long been eager to experiment with new technology and\nstandards. How will Drupal's traditional LAMP stack architecture fit with\nserverless and decentralized approaches? What new standards and protocols make\nsense to integrate and expand on?\n\nWhat new experiences do they enable that offer benefits for everyone from site\nbuilders to Drupal end users?\n\nPlease join me in Minneapolis for my presentation Drupal and the Decentralized\nWeb\n[https://events.drupal.org/minneapolis2020/sessions/drupal-and-decentralized-web]\n. Check out the full list of speakers\n[https://events.drupal.org/minneapolis2020/speakers]  and accepted sessions\n[https://events.drupal.org/minneapolis2020/sessions/accepted].\n\nI'd love to catch up with many of you that I haven't seen for years, and to meet\nmany new members of the Drupal community.\n\n\"The Drop is Always Moving\" is about Drupal always changing and evolving. Image\nfrom the @DropIsMoving [https://twitter.com/DropIsMoving]  account.\n--------------------------------------------------------------------------------\n\nWant to find out more about what we're up to with Fission\n[https://fission.codes]? You can read the latest newsletter in our forum\n[https://talk.fission.codes/t/newsletter-fission-product-update-fission-drive-preview/505]\n, or drop into our Discord chat [https://fission.codes/discord]  to come say\n\"hi\" (plus I'm in the Drupal Slack, too).","html":"<p>After a long absence from the Drupal community, I've been accepted as a speaker at <a href=\"https://events.drupal.org/minneapolis2020/\">DrupalCon Minneapolis</a>. I'll be presenting about Drupal and the Decentralized Web, and some of the changes that have happened from the past to the present on a number of topics, including open source licenses, a shift in architectures and hosting, the rise of the advertising supported web, and what a more peer-to-peer future holds.</p><p><strong>Update:</strong> DrupalCon Global has been rescheduled as a fully online, distributed conference. I will miss the opportunity to catch up with many people in person. But I have been lucky enough to have my <a href=\"https://events.drupal.org/global2020/sessions/drupal-and-decentralized-web\">Drupal and the Decentralized Web session accepted as a \"live\" talk</a>, taking place on July 14th at 23:15 UTC / 4:15pm PDT / 7:15pm EDT. Please join me at the conference and for my session, <a href=\"https://talk.fission.codes/t/drupal-and-the-decentralized-web-boris-mann-drupalcon-global-july-14th/729\">I've added it as an event on our forum as well</a>.</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p>Back in 2003, I joined drupal.org, <a href=\"https://www.drupal.org/project/recipe/issues/2524\">posted about wrapping recipe.module with CSS classes</a>, and the rest is history.</p><!--kg-card-begin: embed--><figure class=\"kg-card kg-embed-card kg-card-hascaption\"><blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">Happy 16th birthday, Drupal! 🎂🎈 <a href=\"https://t.co/eTO1JMvxTQ\">https://t.co/eTO1JMvxTQ</a> <a href=\"https://t.co/Q57SXfQQIY\">pic.twitter.com/Q57SXfQQIY</a></p>&mdash; Dries Buytaert (@Dries) <a href=\"https://twitter.com/Dries/status/820624651344809984?ref_src=twsrc%5Etfw\">January 15, 2017</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<figcaption>Dries presenting in Vancouver in November 2004, in a tweet from 2017. Drupal is 19 years old this year!</figcaption></figure><!--kg-card-end: embed--><p>I went on to <a href=\"https://dri.es/album/vancouver-2004/\">host Dries in Vancouver</a> in 2004, along with the first printed Drupal t-shirts, a <a href=\"https://dri.es/album/vancouver-2004/pub-beer-tower-2\">beer tower</a>, and the folks from DeanSpace / CivicSpace (working on the Democratic primaries) flew up to join us.</p><p><em>Allow me some brief nostalgia…</em></p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p>I founded <a href=\"https://www.drupal.org/forum/general/news-and-announcements/2004-08-30/who-are-these-bryght-guys\">Bryght</a>, one of the first commercial companies focused on Drupal, helped organize many more DrupalCons and DrupalCamps, and helped found the Drupal Association.</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://s3.fission.codes/2020/02/drupal-5-minute-booth_105581628_o.jpg\" class=\"kg-image\"><figcaption>FOSDEM 2005, before which the first DrupalCon had about 40 people</figcaption></figure><!--kg-card-end: image--><p>We were in the thick of Web 1.0 transitioning to Web 2.0, and the early days of identity standards and communication between websites. That post I made about the <em>recipe.module</em> is actually tied to a Blogger.com account, which at the time you could use to login to drupal.org.</p><p>Open source licenses and the details of GPL were hotly contested, and we faced a lot of FUD from Microsoft and others. A global community using mailing lists and IRC was forming, and we didn't know what we were doing was new and different, but that we had come for the code and were staying for the community.</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p>Now, I see Web3 emerging – although the blog post where I attempt to define what that means to me still isn't finished yet!</p><p>New open source licenses are emerging (<a href=\"https://dri.es/balancing-makers-and-takers-to-scale-and-sustain-open-source\">Dries on Makers and Takers</a>), business models beyond the advertising supported web are being sought for.</p><p>Advances in computer science theory have given us new tools for distributed systems and cryptography, leading to both better privacy and programmable Internet money. </p><p><a href=\"https://dri.es/low-code-and-no-code-tools-continue-to-drive-the-web-forward\">Dries' post on low-code and no code tools</a> shows more changes that I think fit into this theme:</p><blockquote>When everyone is a builder, more good things will happen on the web. I was excited about this trend more than 12 years ago, and remain excited today. I'm eager to see the progress no-code and low-code solutions will bring to the web in the next decade.</blockquote><p>The Drupal community has long been eager to experiment with new technology and standards. How will Drupal's traditional LAMP stack architecture fit with serverless and decentralized approaches? What new standards and protocols make sense to integrate and expand on?</p><p>What new experiences do they enable that offer benefits for everyone from site builders to Drupal end users?</p><p>Please join me in Minneapolis for my presentation <a href=\"https://events.drupal.org/minneapolis2020/sessions/drupal-and-decentralized-web\">Drupal and the Decentralized Web</a>. Check out the <a href=\"https://events.drupal.org/minneapolis2020/speakers\">full list of speakers</a> and <a href=\"https://events.drupal.org/minneapolis2020/sessions/accepted\">accepted sessions</a>.</p><p>I'd love to catch up with many of you that I haven't seen for years, and to meet many new members of the Drupal community.</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://s3.fission.codes/2020/02/drop_moving.png\" class=\"kg-image\"><figcaption>\"The Drop is Always Moving\" is about Drupal always changing and evolving. Image from the <a href=\"https://twitter.com/DropIsMoving\">@DropIsMoving</a> account.</figcaption></figure><!--kg-card-end: image--><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p>Want to find out more about what we're up to with <a href=\"https://fission.codes\">Fission</a>? You can <a href=\"https://talk.fission.codes/t/newsletter-fission-product-update-fission-drive-preview/505\">read the latest newsletter in our forum</a>, or drop into our <a href=\"https://fission.codes/discord\">Discord chat</a> to come say \"hi\" (plus I'm in the Drupal Slack, too).</p>","url":"https://blog.fission.codes/back-to-the-future-of-drupal/","canonical_url":null,"uuid":"df025f3f-e59d-4b99-8f7a-3d5f8a545349","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5e50441cf2d438001ebdfeb4","reading_time":null}},{"node":{"id":"Ghost__Post__5e17a981f14aa0001e823397","title":"Fission Drive Preview","slug":"fission-drive-preview","featured":true,"feature_image":"https://s3.fission.codes/2020/02/fission-drive-preview-ramen.png","excerpt":"We're pleased to present the Preview release of Fission Drive, the web native file system browser that we're including as a base component of the Fission stack.","custom_excerpt":"We're pleased to present the Preview release of Fission Drive, the web native file system browser that we're including as a base component of the Fission stack.","created_at_pretty":"09 January, 2020","published_at_pretty":"13 February, 2020","updated_at_pretty":"13 February, 2020","created_at":"2020-01-09T14:30:25.000-08:00","published_at":"2020-02-13T10:51:41.000-08:00","updated_at":"2020-02-13T10:53:28.000-08:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"},{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"}],"primary_author":{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"},"primary_tag":{"name":"FISSION","slug":"fission","description":null,"feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"FISSION","slug":"fission","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Fission Drive","slug":"fission-drive","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"IPFS","slug":"ipfs","description":"InterPlanetary File System","feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"We're pleased to present the Preview release of Fission Drive, the web native\nfile system browser that we're including as a base component of the Fission\nstack.\n\nWe've been hosting files, static websites, and client-side apps on Fission since\nwe launched our CLI tool in October of 2019.\n\nUnderneath, we use IPFS, but increasingly that's a detail that we don't think\nmost users of our service should have to care about. It's a dependency, just\nlike using MySQL or Redis.\n\nOf course, if you do  know what IPFS, great! We want to make it as easy to use\nas any existing Web2 component, while having capabilities at the protocol level\n– like file de-duplication, a global CDN, peer-to-peer sync, immutability, and\noffline support, to name a few– that let us empower all developers to build new\nand interesting tools. \n\nFission Drive is the app that we're building to showcase what the entire Fission\nstack can do, hosted on our own infrastructure. \n\nSteven @icidasset [https://twitter.com/icidasset]  joined the team in December\nand has been full time since January. He designed and built Fission Drive, as\nwell as our slick new home page [https://fission.codes], which is also now\nrunning on Fission. Next up for Steven is building out web-based passwordless\nlogin for Drive, as well as the TypeScript libraries that will let all\ndevelopers build apps like this.\n\nDrive has a few features to play with, like image previews and support for dark\nmode. We'll keep the guide docs updated [https://guide.fission.codes/drive]  as\nwe add features.\n\nFission Drive in Dark Mode, with an image previewThis preview release supports\nbrowsing any public IPFS hash, not just those on Fission. You can use this\nexample hash QmbCLefkFuXbhHBWSW7PWmJzBL7W7e8zm41HK4DGJ1RDwV  to see it in action\nat drive.fission.codes [https://drive.fission.codes].\n\nWant to add your own files? Follow the install instructions for the Fission CLI\n[https://guide.fission.codes/apps/installation]  to easily upload using fission\nup.\n\nYou can subscribe to keep up to date with Fission Drive and other product\nupdates\n[https://5d04d668.sibforms.com/serve/MUIEAD0fi3_BJE-4eieeuK6_0_XZaOPiu1_nfh56jvP1pV9uWy9OLxWLrHtjC148osZF2vcRb0XAymSdzFxhVD7XgvvODjbrp5ClBvQLmY70hyvU1JKu7ucoOP5KFJVRcfNgYN-3qvVppxg72KGyYZlWAJr2IkO7Ae9CIhnjpufaP7npZGPrBFzpmyEaKKLGYyqu0dnQIobGLAMM]\n.","html":"<p>We're pleased to present the Preview release of <strong>Fission Drive</strong>, the web native file system browser that we're including as a base component of the Fission stack.</p><p>We've been hosting files, static websites, and client-side apps on Fission since we launched our CLI tool in October of 2019.</p><p>Underneath, we use IPFS, but increasingly that's a detail that we don't think most users of our service should have to care about. It's a dependency, just like using MySQL or Redis.</p><p>Of course, if you <strong>do</strong> know what IPFS, great! We want to make it as easy to use as any existing Web2 component, while having capabilities at the protocol level – like file de-duplication, a global CDN, peer-to-peer sync, immutability, and offline support, to name a few– that let us empower all developers to build new and interesting tools. </p><p>Fission Drive is the app that we're building to showcase what the entire Fission stack can do, hosted on our own infrastructure. </p><p><a href=\"https://twitter.com/icidasset\">Steven @icidasset</a> joined the team in December and has been full time since January. He designed and built Fission Drive, as well as our <a href=\"https://fission.codes\">slick new home page</a>, which is also now running on Fission. Next up for Steven is building out web-based passwordless login for Drive, as well as the TypeScript libraries that will let all developers build apps like this.</p><p>Drive has a few features to play with, like image previews and support for dark mode. We'll keep the <a href=\"https://guide.fission.codes/drive\">guide docs updated</a> as we add features.</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://s3.fission.codes/2020/02/fission-drive-dark-mode.png\" class=\"kg-image\"><figcaption>Fission Drive in Dark Mode, with an image preview</figcaption></figure><!--kg-card-end: image--><p>This preview release supports browsing any public IPFS hash, not just those on Fission. You can use this example hash <code>QmbCLefkFuXbhHBWSW7PWmJzBL7W7e8zm41HK4DGJ1RDwV</code> to see it in action at <a href=\"https://drive.fission.codes\">drive.fission.codes</a>.</p><p>Want to add your own files? Follow the <a href=\"https://guide.fission.codes/apps/installation\">install instructions for the Fission CLI</a> to easily upload using <code>fission up</code>.</p><p>You can <a href=\"https://5d04d668.sibforms.com/serve/MUIEAD0fi3_BJE-4eieeuK6_0_XZaOPiu1_nfh56jvP1pV9uWy9OLxWLrHtjC148osZF2vcRb0XAymSdzFxhVD7XgvvODjbrp5ClBvQLmY70hyvU1JKu7ucoOP5KFJVRcfNgYN-3qvVppxg72KGyYZlWAJr2IkO7Ae9CIhnjpufaP7npZGPrBFzpmyEaKKLGYyqu0dnQIobGLAMM\">subscribe to keep up to date with Fission Drive and other product updates</a>.</p>","url":"https://blog.fission.codes/fission-drive-preview/","canonical_url":null,"uuid":"ea8c3e36-1184-4679-82d7-1224e7bc4729","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5e17a981f14aa0001e823397","reading_time":null}},{"node":{"id":"Ghost__Post__5e306af07fdea3001e2b6251","title":"Screaming Snake Case","slug":"screaming-snake-case","featured":true,"feature_image":"https://s3.fission.codes/2020/01/8C096C0B-02E9-4D21-9549-C51BAF112341.png","excerpt":"Introducing SCREAMING_SNAKE_CASE — our first developer-centric swag.","custom_excerpt":"Introducing SCREAMING_SNAKE_CASE — our first developer-centric swag.","created_at_pretty":"28 January, 2020","published_at_pretty":"28 January, 2020","updated_at_pretty":"21 August, 2020","created_at":"2020-01-28T09:10:08.000-08:00","published_at":"2020-01-28T12:24:20.000-08:00","updated_at":"2020-08-20T17:46:52.000-07:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"}],"primary_author":{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"},"primary_tag":{"name":"FISSION","slug":"fission","description":null,"feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"FISSION","slug":"fission","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"SCREAMING_SNAKE_CASE","slug":"screaming_snake_case","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"swag","slug":"swag","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Haskell","slug":"haskell","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"vapourwave","slug":"vapourwave","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"Did you know that different programming languages and certain developer\npreferences have led to different standards in naming functions, variables,\nconstants, and other programming terms?\n\nCamel case (wikipedia [https://en.wikipedia.org/wiki/Camel_case]) – or should I\nsay, camelCase – is probably the best known programming naming convention, in\neither PascalCase  (initial capital) or dromedaryCase  versions.\n\nWhile researching, we were delighted to learn about kebab-case-being-a-thing,\nand you can find a bunch more letter cases on Wikipedia\n[https://en.wikipedia.org/wiki/Letter_case#Special_case_styles]. \n\nBut we're here to tell you about snake_case:\n\n> The use of underscores as word separators in identifiers in programming\nlanguages is old, dating to the late 1960s. It is particularly associated with\nC, being found in The C Programming Language\n[https://en.wikipedia.org/wiki/The_C_Programming_Language]  (1978), and\ncontrasted with PascalCase [https://en.wikipedia.org/wiki/Pascal_case]  (a type\nof camel case [https://en.wikipedia.org/wiki/Camel_case]). However, the\nconvention traditionally had no specific name: the Python style guide refers to\nit simply as \"lower_case_with_underscores\".\n\nWithin Usenet [https://en.wikipedia.org/wiki/Usenet]  the name \"snake_case\" was\nfirst seen in the Ruby\n[https://en.wikipedia.org/wiki/Ruby_(programming_language)]  community in 2004,\nused by Gavin Kistner\n\nhttps://en.wikipedia.org/wiki/Snake_case\nThis, of course, leads us to SCREAMING_SNAKE_CASE – all capitals, often used\nwhen defining constants. \n\nAnd now, a vapourwave inspired illustration:\n\nWe're a developer focused company, which means we have fun with\ndeveloper-centric in jokes and illustration. We've made a first run of stickers\nthat you can either get in person at tomorrow's Drinks with Canadians in San\nFrancisco [https://blog.fission.codes/drinks-with-canadians-in-sf/], or fill out\nyour postal address on our swag signup page [https://swag.fission.codes]  and\nwe'll get some sent to you.\n\nWe've got some other programming related illustrations that will get turned into\nstickers and other artwork lined up, with Haskell-related characters being up\nnext. Haskell also happens to be what we're writing our backend services in\n[https://github.com/fission-suite/web-api].\n\nThe artist behind this first set of work is Bruno Monts, a freelance illustrator\nand designer from Brazil. You can see his portfolio on Behance\n[https://www.behance.net/brunomonts]. Thank you Bruno for your great work!\n\nStay tuned for more fun developer art!\n\nUpdate August 20th:  We've got a dedicated Artwork page\n[https://fission.codes/artwork]  for all the illustration that we've made.\n\nYou can visit the Fission Swag Shop [https://shop.fission.codes]  to buy\nstickers and t-shirts, or buy a Screaming Snake Case t-shirt right here:","html":"<p>Did you know that different programming languages and certain developer preferences have led to different standards in naming functions, variables, constants, and other programming terms?</p><p>Camel case (<a href=\"https://en.wikipedia.org/wiki/Camel_case\">wikipedia</a>) – or should I say, camelCase – is probably the best known programming naming convention, in either <strong>PascalCase</strong> (initial capital) or <strong>dromedaryCase</strong> versions.</p><p>While researching, we were delighted to learn about <strong>kebab-case</strong>-being-a-thing, and you can find a bunch more <a href=\"https://en.wikipedia.org/wiki/Letter_case#Special_case_styles\">letter cases on Wikipedia</a>. </p><p>But we're here to tell you about <strong>snake_case</strong>:</p><blockquote>The use of underscores as word separators in identifiers in programming languages is old, dating to the late 1960s. It is particularly associated with C, being found in <em><a href=\"https://en.wikipedia.org/wiki/The_C_Programming_Language\">The C Programming Language</a></em> (1978), and contrasted with <a href=\"https://en.wikipedia.org/wiki/Pascal_case\">PascalCase</a> (a type of <a href=\"https://en.wikipedia.org/wiki/Camel_case\">camel case</a>). However, the convention traditionally had no specific name: the Python style guide refers to it simply as \"lower_case_with_underscores\".<br><br>Within <a href=\"https://en.wikipedia.org/wiki/Usenet\">Usenet</a> the name \"snake_case\" was first seen in the <a href=\"https://en.wikipedia.org/wiki/Ruby_(programming_language)\">Ruby</a> community in 2004, used by Gavin Kistner<br><br><a href=\"https://en.wikipedia.org/wiki/Snake_case\">https://en.wikipedia.org/wiki/Snake_case</a></blockquote><p>This, of course, leads us to SCREAMING_SNAKE_CASE – all capitals, often used when defining constants. </p><p>And now, a vapourwave inspired illustration:</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://s3.fission.codes/2020/01/F621DB83-9E43-4C37-B409-2828F22B3ECF.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><p>We're a developer focused company, which means we have fun with developer-centric in jokes and illustration. We've made a first run of stickers that you can either get in person at tomorrow's <a href=\"https://blog.fission.codes/drinks-with-canadians-in-sf/\">Drinks with Canadians in San Francisco</a>, or fill out your postal address on our <a href=\"https://swag.fission.codes\">swag signup page</a> and we'll get some sent to you.</p><p>We've got some other programming related illustrations that will get turned into stickers and other artwork lined up, with <strong>Haskell</strong>-related characters being up next. Haskell also happens to be what we're <a href=\"https://github.com/fission-suite/web-api\">writing our backend services in</a>.</p><p>The artist behind this first set of work is <strong>Bruno Monts</strong>, a freelance illustrator and designer from Brazil. You can see his <a href=\"https://www.behance.net/brunomonts\">portfolio on Behance</a>. Thank you Bruno for your great work!</p><p>Stay tuned for more fun developer art!</p><p><strong>Update August 20th:</strong> We've got a <a href=\"https://fission.codes/artwork\">dedicated Artwork page</a> for all the illustration that we've made.</p><p>You can visit the <a href=\"https://shop.fission.codes\">Fission Swag Shop</a> to buy stickers and t-shirts, or buy a Screaming Snake Case t-shirt right here:</p><!--kg-card-begin: html--><div id=\"product-component-1597970630096\"></div>\n<script type=\"text/javascript\">\n/*<![CDATA[*/\n(function () {\n  var scriptURL = 'https://sdks.shopifycdn.com/buy-button/latest/buy-button-storefront.min.js';\n  if (window.ShopifyBuy) {\n    if (window.ShopifyBuy.UI) {\n      ShopifyBuyInit();\n    } else {\n      loadScript();\n    }\n  } else {\n    loadScript();\n  }\n  function loadScript() {\n    var script = document.createElement('script');\n    script.async = true;\n    script.src = scriptURL;\n    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(script);\n    script.onload = ShopifyBuyInit;\n  }\n  function ShopifyBuyInit() {\n    var client = ShopifyBuy.buildClient({\n      domain: 'fission-swag.myshopify.com',\n      storefrontAccessToken: '5a1a74103714b313a6edbe31e974cd54',\n    });\n    ShopifyBuy.UI.onReady(client).then(function (ui) {\n      ui.createComponent('product', {\n        id: '5639779025064',\n        node: document.getElementById('product-component-1597970630096'),\n        moneyFormat: '%24%7B%7Bamount%7D%7D',\n        options: {\n  \"product\": {\n    \"styles\": {\n      \"product\": {\n        \"@media (min-width: 601px)\": {\n          \"max-width\": \"calc(25% - 20px)\",\n          \"margin-left\": \"20px\",\n          \"margin-bottom\": \"50px\"\n        }\n      },\n      \"button\": {\n        \"background-color\": \"#db1ce1\",\n        \":hover\": {\n          \"background-color\": \"#c519cb\"\n        },\n        \":focus\": {\n          \"background-color\": \"#c519cb\"\n        },\n        \"font-family\": \"Karla, sans-serif\",\n        \"font-weight\": \"bold\"\n      }\n    },\n    \"googleFonts\": [\n      \"Karla\"\n    ]\n  },\n  \"productSet\": {\n    \"styles\": {\n      \"products\": {\n        \"@media (min-width: 601px)\": {\n          \"margin-left\": \"-20px\"\n        }\n      }\n    }\n  },\n  \"modalProduct\": {\n    \"contents\": {\n      \"img\": false,\n      \"imgWithCarousel\": true\n    },\n    \"styles\": {\n      \"product\": {\n        \"@media (min-width: 601px)\": {\n          \"max-width\": \"100%\",\n          \"margin-left\": \"0px\",\n          \"margin-bottom\": \"0px\"\n        }\n      },\n      \"button\": {\n        \"background-color\": \"#db1ce1\",\n        \":hover\": {\n          \"background-color\": \"#c519cb\"\n        },\n        \":focus\": {\n          \"background-color\": \"#c519cb\"\n        },\n        \"font-family\": \"Karla, sans-serif\",\n        \"font-weight\": \"bold\"\n      }\n    },\n    \"googleFonts\": [\n      \"Karla\"\n    ]\n  },\n  \"cart\": {\n    \"styles\": {\n      \"button\": {\n        \"background-color\": \"#db1ce1\",\n        \":hover\": {\n          \"background-color\": \"#c519cb\"\n        },\n        \":focus\": {\n          \"background-color\": \"#c519cb\"\n        },\n        \"font-family\": \"Karla, sans-serif\",\n        \"font-weight\": \"bold\"\n      }\n    },\n    \"googleFonts\": [\n      \"Karla\"\n    ]\n  },\n  \"toggle\": {\n    \"styles\": {\n      \"toggle\": {\n        \"background-color\": \"#db1ce1\",\n        \":hover\": {\n          \"background-color\": \"#c519cb\"\n        },\n        \":focus\": {\n          \"background-color\": \"#c519cb\"\n        },\n        \"font-family\": \"Karla, sans-serif\",\n        \"font-weight\": \"bold\"\n      }\n    },\n    \"googleFonts\": [\n      \"Karla\"\n    ]\n  }\n},\n      });\n    });\n  }\n})();\n/*]]>*/\n</script><!--kg-card-end: html--><p></p><p></p>","url":"https://blog.fission.codes/screaming-snake-case/","canonical_url":null,"uuid":"ba57e1e1-8afd-4a6d-a381-cc99eb5daf83","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5e306af07fdea3001e2b6251","reading_time":null}},{"node":{"id":"Ghost__Post__5dfc1defaa0f04001e9572d6","title":"IPFS on Hackage","slug":"ipfs-on-hackage","featured":false,"feature_image":"https://s3.fission.codes/2019/12/ipfs-haskell-long.png","excerpt":"This library offers a high level API for interacting with IPFS nodes. Most of the functionality was refactored out of our Web API, which provides a convenient HTTP interface for accessing the IPFS network.","custom_excerpt":"This library offers a high level API for interacting with IPFS nodes. Most of the functionality was refactored out of our Web API, which provides a convenient HTTP interface for accessing the IPFS network.","created_at_pretty":"20 December, 2019","published_at_pretty":"20 December, 2019","updated_at_pretty":"20 December, 2019","created_at":"2019-12-19T17:03:43.000-08:00","published_at":"2019-12-20T13:27:05.000-08:00","updated_at":"2019-12-20T14:29:19.000-08:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Daniel Holmgren","slug":"daniel","bio":null,"profile_image":"https://s3.fission.codes/2019/09/75f5c64c98dbaf2b49b86c299104ab06.png","twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Daniel Holmgren","slug":"daniel","bio":null,"profile_image":"https://s3.fission.codes/2019/09/75f5c64c98dbaf2b49b86c299104ab06.png","twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"IPFS","slug":"ipfs","description":"InterPlanetary File System","feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"IPFS","slug":"ipfs","description":"InterPlanetary File System","feature_image":null,"meta_description":null,"meta_title":null},{"name":"Haskell","slug":"haskell","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Package","slug":"package","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"We just published version 1.0.0  of our IPFS package on Hackage\n[https://hackage.haskell.org/package/ipfs-1.0.0]  🎉\n\nThis library offers a high level API for interacting with IPFS nodes. Most of\nthe functionality was refactored out of our Web API\n[https://github.com/fission-suite/web-api\\], which provides a convenient HTTP\ninterface for accessing the IPFS network.\n\nThe library can communicate with IPFS nodes in two different ways:\n\n * Locally: This is done by shelling out to an IPFS daemon that is running on\n   the same machine. This would be the equivalent of running an IPFS command in\n   your terminal.\n * Remotely: This is done by communicating with a node's HTTP interface. This\n   could either be a node running on the same machine or on another machine.\n\nThe package doesn't currently implement all the IPFS commands, but the base\nfunctionality is present: add, get, pin, and dag put  (for building IPLD\nstructures). The existing code provides helpful building blocks for adding\nadditional functionality.\n\nCheck out the code on GitHub [https://github.com/fission-suite/ipfs-haskell].\nLet us know what features would be helpful for you and any issues that you might\nrun into along the way!\n\nWhen you're ready to start building, head over to Hackage\n[https://hackage.haskell.org/package/ipfs]  and grab the library.","html":"<p>We just published version <code>1.0.0</code> of our IPFS package on <a href=\"https://hackage.haskell.org/package/ipfs-1.0.0\">Hackage</a> 🎉</p><p>This library offers a high level API for interacting with IPFS nodes. Most of the functionality was refactored out of our <a href=\"https://github.com/fission-suite/web-api\\\">Web API</a>, which provides a convenient HTTP interface for accessing the IPFS network.</p><!--kg-card-begin: markdown--><p>The library can communicate with IPFS nodes in two different ways:</p>\n<ul>\n<li>Locally: This is done by shelling out to an IPFS daemon that is running on the same machine. This would be the equivalent of running an IPFS command in your terminal.</li>\n<li>Remotely: This is done by communicating with a node's HTTP interface. This could either be a node running on the same machine or on another machine.</li>\n</ul>\n<!--kg-card-end: markdown--><p>The package doesn't currently implement all the IPFS commands, but the base functionality is present: <code>add</code>, <code>get</code>, <code>pin</code>, and <code>dag put</code> (for building IPLD structures). The existing code provides helpful building blocks for adding additional functionality.</p><p>Check out <a href=\"https://github.com/fission-suite/ipfs-haskell\">the code on GitHub</a>. Let us know what features would be helpful for you and any issues that you might run into along the way!</p><p>When you're ready to start building, head over to <a href=\"https://hackage.haskell.org/package/ipfs\">Hackage</a> and grab the library. </p>","url":"https://blog.fission.codes/ipfs-on-hackage/","canonical_url":null,"uuid":"ac6688b6-d67c-4a15-b12e-96445f6e03ff","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5dfc1defaa0f04001e9572d6","reading_time":null}},{"node":{"id":"Ghost__Post__5df7baaf6da96c001e323622","title":"IPFS Storage Adapter for Ghost Blog with Heroku Deploy","slug":"ipfs-storage-adapter-for-ghost-blog-heroku-deploy","featured":true,"feature_image":"https://s3.fission.codes/2019/12/typewriter-ghost-ipfs-heroku-sidebyside.jpg","excerpt":"We wrote an IPFS Storage Adapter for the Ghost blogging platform, and have packaged it as a one-click deploy to Heroku.","custom_excerpt":"We wrote an IPFS Storage Adapter for the Ghost blogging platform, and have packaged it as a one-click deploy to Heroku.","created_at_pretty":"16 December, 2019","published_at_pretty":"20 December, 2019","updated_at_pretty":"23 January, 2020","created_at":"2019-12-16T09:11:11.000-08:00","published_at":"2019-12-19T16:51:05.000-08:00","updated_at":"2020-01-22T17:42:33.000-08:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"}],"primary_author":{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"},"primary_tag":{"name":"IPFS","slug":"ipfs","description":"InterPlanetary File System","feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"IPFS","slug":"ipfs","description":"InterPlanetary File System","feature_image":null,"meta_description":null,"meta_title":null},{"name":"Ghost","slug":"ghost-tag","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Heroku","slug":"heroku","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"NodeJS","slug":"nodejs","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"Back in May, as part of putting the Fission blog on Ghost, I packaged it up to\nbe a one-click deploy on Heroku\n[https://blog.fission.codes/ghost2-blog-on-heroku/]. We've gone one step further\nand gotten an IPFS Storage Adapter completed, and upgraded to Ghost v3.x.\n\nThis one-click deploy is possible because our IPFS Heroku Add-on is in beta\n[https://elements.heroku.com/addons/interplanetary-fission]! 🙌 🎉\n\nOur IPFS Heroku Add-on\n[https://elements.heroku.com/addons/interplanetary-fission]  is in beta with a\nfree \"test\" plan.This means you can package up apps to be deployed on Heroku\nthat automatically add our add-on. This provisions you a username and API key\nand your app can use our Web API to read and write to IPFS, manage DNS, and\nanything else accessible through our API.\n\nCheck the Github repo for more details\n[https://github.com/fission-suite/heroku-ipfs-ghost], or go ahead and deploy a\nnew Ghost 3 blog here:\n\n \n[https://heroku.com/deploy?template=https://github.com/fission-suite/heroku-ipfs-ghost]\n\nTo complete the Ghost deploy, the only configuration you'll need to do is to set\nthe public URL for your blog – e.g. https://boris-ghost-test1.herokuapp.com.\n\nWe've set the IPFS gateway to use ours by default, but you can put in any\ngateway you like. Images are included from this gateway, but of course using the\n IPFS Companion extension [https://github.com/ipfs-shipyard/ipfs-companion] \nmeans you can serve the images from your local machine.\n\nGo ahead and setup your first user, create a new post, and add an image – voila!\nInterplanetary Ghost Blogging! Here's my sample post\n[https://boris-ghost-test1.herokuapp.com/i-am-testing-ipfs/].\n\n\n--------------------------------------------------------------------------------\n\nWe're working on adding IPFS support for basic file uploads to a number of other\nplatforms. This is a first step in getting more content natively available in\nIPFS. Imagine managing your blog's media assets or a gallery page from your\ndesktop, being able to login to any system and have all your photos and files\navailable for you there.\n\nJoin our App Ideas forum [https://talk.fission.codes/c/app-ideas]  to suggest\nother things you'd like to see. Thanks to Mike Taylor [https://mktlr.com]  \n@mktlrwho [https://twitter.com/MKTLRwho]  for working on this with us!","html":"<p>Back in May, as part of putting the Fission blog on Ghost, I <a href=\"https://blog.fission.codes/ghost2-blog-on-heroku/\">packaged it up to be a one-click deploy on Heroku</a>. We've gone one step further and gotten an IPFS Storage Adapter completed, and upgraded to Ghost v3.x.</p><p>This one-click deploy is possible because our <a href=\"https://elements.heroku.com/addons/interplanetary-fission\">IPFS Heroku Add-on is in beta</a>! 🙌 🎉</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://s3.fission.codes/2019/12/heroku-add-on.png\" class=\"kg-image\"><figcaption>Our <a href=\"https://elements.heroku.com/addons/interplanetary-fission\">IPFS Heroku Add-on</a> is in beta with a free \"test\" plan.</figcaption></figure><!--kg-card-end: image--><p>This means you can package up apps to be deployed on Heroku that automatically add our add-on. This provisions you a username and API key and your app can use our Web API to read and write to IPFS, manage DNS, and anything else accessible through our API.</p><p>Check the <a href=\"https://github.com/fission-suite/heroku-ipfs-ghost\">Github repo for more details</a>, or go ahead and deploy a new Ghost 3 blog here:</p><!--kg-card-begin: markdown--><p><a href=\"https://heroku.com/deploy?template=https://github.com/fission-suite/heroku-ipfs-ghost\"><img src=\"https://www.herokucdn.com/deploy/button.svg\" alt=\"Deploy\"></a></p>\n<!--kg-card-end: markdown--><p>To complete the Ghost deploy, the only configuration you'll need to do is to set the public URL for your blog – e.g. <code>https://boris-ghost-test1.herokuapp.com</code>.</p><p>We've set the IPFS gateway to use ours by default, but you can put in any gateway you like. Images are included from this gateway, but of course using the <a href=\"https://github.com/ipfs-shipyard/ipfs-companion\">IPFS Companion extension</a> means you can serve the images from your local machine.</p><p>Go ahead and setup your first user, create a new post, and add an image – voila! Interplanetary Ghost Blogging! <a href=\"https://boris-ghost-test1.herokuapp.com/i-am-testing-ipfs/\">Here's my sample post</a>.</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p>We're working on adding IPFS support for basic file uploads to a number of other platforms. This is a first step in getting more content natively available in IPFS. Imagine managing your blog's media assets or a gallery page from your desktop, being able to login to any system and have all your photos and files available for you there.</p><p><a href=\"https://talk.fission.codes/c/app-ideas\">Join our App Ideas forum</a> to suggest other things you'd like to see. Thanks to <a href=\"https://mktlr.com\">Mike Taylor</a> <a href=\"https://twitter.com/MKTLRwho\">@mktlrwho</a> for working on this with us!</p>","url":"https://blog.fission.codes/ipfs-storage-adapter-for-ghost-blog-heroku-deploy/","canonical_url":null,"uuid":"c4d7ca0a-9ccc-4ef6-a2d7-1025c1a681e9","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5df7baaf6da96c001e323622","reading_time":null}},{"node":{"id":"Ghost__Post__5df2cfd84b5de2001e757ac7","title":"Drinks with Canadians in SF, January 2020","slug":"drinks-with-canadians-in-sf","featured":true,"feature_image":"https://s3.fission.codes/2019/12/southernpacificbrewing.jpg","excerpt":"We're hosting a meetup in SF on Wed Jan29th at Southern Pacific Brewing. Fission & Headphones.com invite you to find out more about our teams and what we're building.","custom_excerpt":"We're hosting a meetup in SF on Wed Jan29th at Southern Pacific Brewing. Fission & Headphones.com invite you to find out more about our teams and what we're building.","created_at_pretty":"12 December, 2019","published_at_pretty":"19 December, 2019","updated_at_pretty":"23 January, 2020","created_at":"2019-12-12T15:40:08.000-08:00","published_at":"2019-12-19T15:34:53.000-08:00","updated_at":"2020-01-22T17:44:30.000-08:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":"Meet Fission and Headphones.com, visiting SF from Vancouver, Canada. Drinks and appies on us at Southern Pacific Brewing. Click through to register.","twitter_image":"https://s3.fission.codes/2019/12/drinks_with_canadians_sf-1.jpg","twitter_title":"Drinks with Canadians, Jan29 6pm","authors":[{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"}],"primary_author":{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"},"primary_tag":{"name":"Events","slug":"event","description":"Events in the decentralized web, p2p, & Ethereum community.","feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"Events","slug":"event","description":"Events in the decentralized web, p2p, & Ethereum community.","feature_image":null,"meta_description":null,"meta_title":null},{"name":"San Francisco","slug":"san-francisco","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"Brooke and Boris are heading down to San Francisco, along with our friend Andrew\nfrom Headphones.com [https://headphones.com]. We're traveling for some meetings\nand want to connect with ex-pat Canadians in the area, along with other friends,\nacquaintances, and interesting Bay Area locals. So, we're hosting a Drinks with\nCanadians  event the week of Jan 27th while we're in town.\n\nPlease come out and meet us if you're interested in what we're building, the\n(brief) story of our companies and how we're growing, or even if you just like\nfriendly Canadians :) Founders, developers, audiophiles – you're all welcome to\nattend.\n\nJoin us at Southern Pacific Brewing [https://www.southernpacificbrewing.com/] \non Wednesday, January 29th, from 6pm to 9pm. Craft beer and appies are on us,\nplease do sign up for a ticket below to let us know you're coming 👇\n\nLet us know you're coming!\nSign up on the ticketing page directly »\n[https://ti.to/fission/drinks-with-canadians-sf-2020/]","html":"<p>Brooke and Boris are heading down to San Francisco, along with our friend Andrew from <a href=\"https://headphones.com\">Headphones.com</a>. We're traveling for some meetings and want to connect with ex-pat Canadians in the area, along with other friends, acquaintances, and interesting Bay Area locals. So, we're hosting a <strong>Drinks with Canadians</strong> event the week of Jan 27th while we're in town.</p><p>Please come out and meet us if you're interested in what we're building, the (brief) story of our companies and how we're growing, or even if you just like friendly Canadians :) Founders, developers, audiophiles – you're all welcome to attend.</p><p>Join us at <a href=\"https://www.southernpacificbrewing.com/\">Southern Pacific Brewing</a> on Wednesday, January 29th, from 6pm to 9pm. Craft beer and appies are on us, please do sign up for a ticket below to let us know you're coming 👇</p><h2 id=\"let-us-know-you-re-coming-\">Let us know you're coming!</h2><!--kg-card-begin: html--><tito-widget event=\"fission/drinks-with-canadians-sf-2020\"></tito-widget>\n\n<p><a href=\"https://ti.to/fission/drinks-with-canadians-sf-2020/\">Sign up on the ticketing page directly »</a></p><!--kg-card-end: html--><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://s3.fission.codes/2019/12/drinks_with_canadians_sf.jpg\" class=\"kg-image\"></figure><!--kg-card-end: image-->","url":"https://blog.fission.codes/drinks-with-canadians-in-sf/","canonical_url":null,"uuid":"48fc340e-879e-405d-b67d-898976137188","page":false,"codeinjection_foot":null,"codeinjection_head":"<script src='https://js.tito.io/v1' async></script>\n<link rel=\"stylesheet\" type=\"text/css\" href='https://css.tito.io/v1.1' />","codeinjection_styles":null,"comment_id":"5df2cfd84b5de2001e757ac7","reading_time":null}},{"node":{"id":"Ghost__Post__5dc9daebdef88c001e18be27","title":"Let Business Write Business Logic, Ben Church at The Big Elixir","slug":"let-business-write-business-logic-ben-church-at-the-big-elixir","featured":false,"feature_image":"https://s3.fission.codes/2019/12/EI3aMVFWsAA_05M.jpeg","excerpt":"Last month I was in New Orleans giving a talk on Erlang's lexer and parser libraries: leex and yecc. Essentially I was hoping to show that given a bit of creativity and the right tools hard problems can be solved with very few resources. Not too far off Fissions end goals","custom_excerpt":"Last month I was in New Orleans giving a talk on Erlang's lexer and parser libraries: leex and yecc. Essentially I was hoping to show that given a bit of creativity and the right tools hard problems can be solved with very few resources. Not too far off Fissions end goals","created_at_pretty":"11 November, 2019","published_at_pretty":"10 December, 2019","updated_at_pretty":"13 December, 2019","created_at":"2019-11-11T14:04:27.000-08:00","published_at":"2019-12-09T16:25:14.000-08:00","updated_at":"2019-12-12T16:12:22.000-08:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Ben Church","slug":"ben","bio":"An Engineer at Fission. Looking to make the serverless framework of the future.","profile_image":"https://s3.fission.codes/2019/11/IMG_4313.PNG","twitter":"@bnchrch","facebook":null,"website":"https://ben.church"}],"primary_author":{"name":"Ben Church","slug":"ben","bio":"An Engineer at Fission. Looking to make the serverless framework of the future.","profile_image":"https://s3.fission.codes/2019/11/IMG_4313.PNG","twitter":"@bnchrch","facebook":null,"website":"https://ben.church"},"primary_tag":{"name":"Presentations","slug":"presentation","description":null,"feature_image":"https://images.unsplash.com/photo-1535016120720-40c646be5580?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","meta_description":null,"meta_title":null},"tags":[{"name":"Presentations","slug":"presentation","description":null,"feature_image":"https://images.unsplash.com/photo-1535016120720-40c646be5580?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","meta_description":null,"meta_title":null},{"name":"Elixir","slug":"elixir","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"Elixir and Étouffée, name a better duo.\n\nLast month I was in New Orleans [https://www.thebigelixir.com/]  giving a talk\non Erlang's lexer and parser libraries: leex  and yecc. Essentially I was hoping\nto show that given a bit of creativity  and the right tools  hard problems can\nbe solved with very few resources.\n\nWhich is not too far off with what we're doing at Fission. Working to give\ndevelopers the tools and primitives to make the hard problem of user owned data\neasier.\n\nAfter coming home I have to say to those of you who haven't been to a\nprogramming conference, GO! and to those who have, GO AGAIN!\n\nThese events are always such a pleasure to attend. It's a space where crazy\nideas are shared and reveled in. At times sheerly for the absurdity of it. \nCorey\nO'Daniels Todo List [https://www.youtube.com/watch?v=0r9YmbH0xTY]  made entirely\nout of Kubernetes comes to mind.\n\nAnd what better backdrop for this type of experimentation than New Orleans. With\nits food, architecture and of course its late night music scene. The Big Elixir\n[https://www.thebigelixir.com/]  really knows how to set a progressive\nprogramming conference and I'm already looking forward to next year.\n\nIt's worth noting that passionate meetups like these are important. Without\nthose who make them possible, Organizers and attendees alike, new ideas would\nnever get momentum and our industry would never see progression. I believe we\nowe a lot to what gets started in these small collections of experts. Often they\ncan be the first ripple in what becomes a large wave. If nothing else, that's\nexciting.\n\nIf you're interested in learning more about my talk you can find my full slide\ndeck on Notist [https://noti.st/bnchrch/L47F0N]  and a complete tutorial on my\npersonal site\n[https://by.ben.church/Lexers-and-Parsers:-Letting-Business-Write-Business-Logic/]\n.\n\nFinally big thanks to the Drift Engineering team for the awesome shot and\nhelping spread the word!\n\n> Awesome talk about Leex and Yecc from @bnchrch\n[https://twitter.com/bnchrch?ref_src=twsrc%5Etfw]  from @FISSIONcodes\n[https://twitter.com/FISSIONcodes?ref_src=twsrc%5Etfw]  today. We can’t wait to\nstart writing our own grammars in #elixirlang\n[https://twitter.com/hashtag/elixirlang?src=hash&ref_src=twsrc%5Etfw]  \n#thebigelixir\n[https://twitter.com/hashtag/thebigelixir?src=hash&ref_src=twsrc%5Etfw]  \npic.twitter.com/LVxYqBLuod [https://t.co/LVxYqBLuod]\n\n— Drift Engineering (@DriftDev) November 8, 2019\n[https://twitter.com/DriftDev/status/1192849403935154177?ref_src=twsrc%5Etfw]","html":"<p><em>Elixir and Étouffée, name a better duo.</em></p><p>Last month I was in <a href=\"https://www.thebigelixir.com/\">New Orleans</a> giving a talk on Erlang's lexer and parser libraries: <code>leex</code> and <code>yecc</code>. Essentially I was hoping to show that given a bit of <u>creativity</u> and the <u>right tools</u> hard problems can be solved with very few resources.</p><p><em>Which is not too far off with what we're doing at Fission. Working to give developers the tools and primitives to make the hard problem of user owned data easier.</em></p><!--kg-card-begin: embed--><figure class=\"kg-card kg-embed-card\"><iframe width=\"480\" height=\"270\" src=\"https://www.youtube.com/embed/GTP0llRvEmE?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></figure><!--kg-card-end: embed--><p>After coming home I have to say to those of you who haven't been to a programming conference, GO! and to those who have, GO AGAIN!</p><p>These events are always such a pleasure to attend. It's a space where crazy ideas are shared and reveled in. At times sheerly for the absurdity of it. <a href=\"https://www.youtube.com/watch?v=0r9YmbH0xTY\">Corey O'Daniels Todo List</a> made entirely out of Kubernetes comes to mind.</p><p>And what better backdrop for this type of experimentation than New Orleans. With its food, architecture and of course its late night music scene. <a href=\"https://www.thebigelixir.com/\">The Big Elixir</a> really knows how to set a progressive programming conference and I'm already looking forward to next year.</p><p>It's worth noting that passionate meetups like these are important. Without those who make them possible, Organizers and attendees alike, new ideas would never get momentum and our industry would never see progression. I believe we owe a lot to what gets started in these small collections of experts. Often they can be the first ripple in what becomes a large wave. If nothing else, that's exciting.</p><p>If you're interested in learning more about my talk you can find my full slide deck <a href=\"https://noti.st/bnchrch/L47F0N\">on Notist</a> and a complete tutorial on <a href=\"https://by.ben.church/Lexers-and-Parsers:-Letting-Business-Write-Business-Logic/\">my personal site</a>.</p><p>Finally big thanks to the Drift Engineering team for the awesome shot and helping spread the word!</p><!--kg-card-begin: embed--><figure class=\"kg-card kg-embed-card\"><blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">Awesome talk about Leex and Yecc from <a href=\"https://twitter.com/bnchrch?ref_src=twsrc%5Etfw\">@bnchrch</a> from <a href=\"https://twitter.com/FISSIONcodes?ref_src=twsrc%5Etfw\">@FISSIONcodes</a> today. We can’t wait to start writing our own grammars in <a href=\"https://twitter.com/hashtag/elixirlang?src=hash&amp;ref_src=twsrc%5Etfw\">#elixirlang</a> <a href=\"https://twitter.com/hashtag/thebigelixir?src=hash&amp;ref_src=twsrc%5Etfw\">#thebigelixir</a> <a href=\"https://t.co/LVxYqBLuod\">pic.twitter.com/LVxYqBLuod</a></p>&mdash; Drift Engineering (@DriftDev) <a href=\"https://twitter.com/DriftDev/status/1192849403935154177?ref_src=twsrc%5Etfw\">November 8, 2019</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n</figure><!--kg-card-end: embed-->","url":"https://blog.fission.codes/let-business-write-business-logic-ben-church-at-the-big-elixir/","canonical_url":null,"uuid":"dd7a8f01-1985-4917-86f7-6980588fa35a","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5dc9daebdef88c001e18be27","reading_time":null}},{"node":{"id":"Ghost__Post__5de882325bb934001e62966f","title":"Fission one-click IPFS publishing for VSCode Extension 🎉","slug":"fission-ipfs-vscode-extension","featured":false,"feature_image":"https://s3.fission.codes/2019/12/vscode-header.png","excerpt":"Put your whole project, folder, or file live on the internet from VSCode in just one click. Uses IPFS, and is powered by Fission Live.","custom_excerpt":"Put your whole project, folder, or file live on the internet from VSCode in just one click. Uses IPFS, and is powered by Fission Live.","created_at_pretty":"05 December, 2019","published_at_pretty":"09 December, 2019","updated_at_pretty":"10 December, 2019","created_at":"2019-12-04T20:06:10.000-08:00","published_at":"2019-12-09T15:44:11.000-08:00","updated_at":"2019-12-09T16:57:00.000-08:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Ben Church","slug":"ben","bio":"An Engineer at Fission. Looking to make the serverless framework of the future.","profile_image":"https://s3.fission.codes/2019/11/IMG_4313.PNG","twitter":"@bnchrch","facebook":null,"website":"https://ben.church"}],"primary_author":{"name":"Ben Church","slug":"ben","bio":"An Engineer at Fission. Looking to make the serverless framework of the future.","profile_image":"https://s3.fission.codes/2019/11/IMG_4313.PNG","twitter":"@bnchrch","facebook":null,"website":"https://ben.church"},"primary_tag":{"name":"Product","slug":"product","description":null,"feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"Product","slug":"product","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"VSCode","slug":"vscode","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"IPFS","slug":"ipfs","description":"InterPlanetary File System","feature_image":null,"meta_description":null,"meta_title":null},{"name":"CLI","slug":"cli","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Diffusion","slug":"diffusion","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"hackathon","slug":"hackathon","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"A simple idea born out of the Diffusion Hackathon in Berlin\n[https://blog.fission.codes/fission-at-diffusion-2019-wrap-up/]  has become a\nreality. As well as helping to ship our Fission Live  service, I spent some hack\ntime putting together a Visual Studio Code Extension.\n\nNow you can put a whole project (or folder, or just a single file) live to the\ninternet directly from your favourite editor: \n\n⚡️Live from your laptop, instantly, around the worldHow can I get this sweet,\nsweet extension?\nGlad you asked, it's all too simple really.\n\n 1. First you install the Fission CLI [https://guide.fission.codes/installation]\n 2. Then you install the Fission VSCode extension\n    [https://marketplace.visualstudio.com/items?itemName=fission.fission-live]\n 3. Next open your command palate (cmd + shift + p) and look for Fission\n    Register  \n\nNow you’re all set to run Fission Up  and Fission Watch  to put any file or\nfolder live to the internet under your brand spanking new Fission subdomain.\nWOW!\n\nHow does this whole thing work?\nAt Fission, we're building developer tools to make it easy to build and deploy\nserverless apps directly from your desktop.  Our first service uses the\nInterPlanetary File System (IPFS), a p2p file system, so that files stream\ndirectly from your computer. Meaning that the data isn't hosted solely by us but\nis instead replicated around the world – including directly from your own\ncomputer.\n\nHave other ideas for the Fission VSCode extension? Head on over to the app\ngallery [https://talk.fission.codes/t/fission-up-vscode-extension/305]  to post\nyour feature ideas and feedback.","html":"<p>A simple idea born out of the <a href=\"https://blog.fission.codes/fission-at-diffusion-2019-wrap-up/\">Diffusion Hackathon in Berlin</a> has become a reality. As well as helping to ship our <strong>Fission Live</strong> service, I spent some hack time putting together a Visual Studio Code Extension.</p><p>Now you can put a whole project (or folder, or just a single file) live to the internet directly from your favourite editor: </p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://s3.fission.codes/2019/12/Dec-04-2019-21-10-08.gif\" class=\"kg-image\"><figcaption>⚡️Live from your laptop, instantly, around the world&nbsp;</figcaption></figure><!--kg-card-end: image--><h2 id=\"how-can-i-get-this-sweet-sweet-extension\">How can I get this sweet, sweet extension?</h2><p>Glad you asked, it's all too simple really.</p><ol><li>First you <a href=\"https://guide.fission.codes/installation\">install the Fission CLI</a></li><li>Then you <a href=\"https://marketplace.visualstudio.com/items?itemName=fission.fission-live\">install the Fission VSCode extension</a></li><li>Next open your command palate (<code>cmd + shift + p</code>) and look for <code>Fission Register</code> </li></ol><p>Now you’re all set to run <code>Fission Up</code> and <code>Fission Watch</code> to put any file or folder live to the internet under your brand spanking new Fission subdomain. WOW!</p><h2 id=\"how-does-this-whole-thing-work\">How does this whole thing work?</h2><p>At Fission, we're building developer tools to make it easy to build and deploy serverless apps directly from your desktop.<em> </em>Our first service uses the InterPlanetary File System (IPFS), a p2p file system, so that files stream directly from your computer. Meaning that the data isn't hosted solely by us but is instead replicated around the world – including directly from your own computer.</p><p>Have other ideas for the Fission VSCode extension? <a href=\"https://talk.fission.codes/t/fission-up-vscode-extension/305\">Head on over to the app gallery</a> to post your feature ideas and feedback.</p>","url":"https://blog.fission.codes/fission-ipfs-vscode-extension/","canonical_url":null,"uuid":"ce09acd3-a662-42df-9cc2-9c6d8164cdc4","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5de882325bb934001e62966f","reading_time":null}}]}},"pageContext":{"pageNumber":2,"humanPageNumber":3,"skip":24,"limit":12,"numberOfPages":7,"previousPagePath":"/page/2","nextPagePath":"/page/4"}}