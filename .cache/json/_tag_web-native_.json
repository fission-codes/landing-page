{"data":{"ghostTag":{"slug":"web-native","name":"web native","feature_image":null,"description":null,"meta_title":null,"meta_description":null},"allGhostPost":{"edges":[{"node":{"id":"Ghost__Post__603d33819ae96d001e956b16","title":"The Zettelkasten Method & Digital Note-taking","slug":"zettelkasten-method-and-digital-notetaking","featured":false,"feature_image":"https://s3.fission.codes/2021/03/david-travis-5bYxXawHOQg-unsplash.jpg","excerpt":"What does a prolific 20th-century German scholar have to do with digital note-taking? Turns out quite a bit. We're looking at the note-taking system known as \"Zettlekasten,\" and how you can use Fission and TiddlyWiki to create your own version. ","custom_excerpt":"What does a prolific 20th-century German scholar have to do with digital note-taking? Turns out quite a bit. We're looking at the note-taking system known as \"Zettlekasten,\" and how you can use Fission and TiddlyWiki to create your own version. ","created_at_pretty":"01 March, 2021","published_at_pretty":"02 March, 2021","updated_at_pretty":"02 March, 2021","created_at":"2021-03-01T10:33:37.000-08:00","published_at":"2021-03-02T08:04:09.000-08:00","updated_at":"2021-03-02T10:28:28.000-08:00","meta_title":"Zettelkasten Method, Fission and TiddlyWiki","meta_description":"We're looking at the note-taking system known as \"Zettlekasten,\" and how you can use Fission and TiddlyWiki to create your own version. ","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Courtney Hall","slug":"courtney","bio":"I'm a content writer and marketer in Charlotte, NC.","profile_image":"https://s3.fission.codes/2021/02/me.jpg","twitter":"@contentcourtney","facebook":null,"website":null},{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"}],"primary_author":{"name":"Courtney Hall","slug":"courtney","bio":"I'm a content writer and marketer in Charlotte, NC.","profile_image":"https://s3.fission.codes/2021/02/me.jpg","twitter":"@contentcourtney","facebook":null,"website":null},"primary_tag":{"name":"TiddlyWiki","slug":"tiddlywiki","description":null,"feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"TiddlyWiki","slug":"tiddlywiki","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"app","slug":"app-tag","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"productivity","slug":"productivity","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"encryption","slug":"encryption","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"FISSION","slug":"fission","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"open source","slug":"open-source","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"web native","slug":"web-native","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"What does a prolific 20th-century German scholar have to do with digital\nnote-taking? Turns out quite a bit. We're looking at the note-taking system\nknown as \"Zettlekasten,\" and how you can use Fission and TiddlyWiki\n[https://blog.fission.codes/announcing-tiddlywiki-on-fission/]to create your own\nversion. \n\n\n--------------------------------------------------------------------------------\n\nThis is Niklas Luhmann. Niklas was a prolific scholar and writer--he wrote and\npublished more than 70 books and more than 400 scholarly articles.\n\nThis is Niklas LuhmannNiklas Luhmann was such an intellectually productive\nbadass because of the relatively ingenious yet straightforward note-taking\nmethod he developed known as “Zettelkasten.” Like so many other German words,\nZettelkasten as a word is both literal and perfectly descriptive. “Zettel” means\nslip or note, and “kasten” means box. In essence, the Zettelkasten method is\nabout creating a box (or any storage receptacle) in which to keep notes.\n\nHow Zettelkasten works\nTo use the Zettelkasten method, you only need three simple things:\n\n * A way to take notes\n * A system with bidirectional linking\n * A collection of tags\n\nThat’s it! But now, let’s break down each piece a little bit.\n\nA note-taking system\nLuhmann was old school--he owned no computers and used paper, pens, and a\ntypewriter for most of his impressive writing career. He didn’t even type very\nquickly--he used the hunt and peck method.\n\nIn fact, his Zettelkasten was literally a box of notes in the form of a piece of\nfurniture--sort of like a card catalog.\n\nNot Luhmann's Zettelkasten, but you get the idea\n\nWhile Luhmann’s Zettelkasten was a piece of furniture stuffed with slips of\npaper, today, the concept translates very well to any of the many digital\nnote-taking systems available. Web apps like Evernote, Notion, and Google Keep\noffer free or low-cost ways to take notes on desktop or mobile devices.\nTiddlyWiki is also a great option because of it’s bidirectional linking power,\nwhich is the next crucial ingredient of a Zettelkasten.\n\nA system with bidirectional linking\nSo what is bidirectional linking? It’s exactly what it sounds like--the ability\nto connect ideas back and forth to each other in more than one direction. One\npopular option of a program with this capability is the paid product Roam\nResearch; however, TiddlyWiki offers bidirectional linking function in its free,\nopen-source program.\n\nA collection of tags\nThe last component of a Zettelkasten is a collection of tags, or labels, for\nyour thoughts/entries. We’re used to seeing tags used frequently with blog posts\nor online articles. On the Fission blog, we use categories like security, apps,\nopen-source, or headless to help readers find relevant content. Categorizing\nyour ideas with different tags allows you to find relevant information in a\nnote-taking system quickly. And because one idea may have more than one tag, you\ncan easily find the relevant idea from any number of search terms.\n\nUsing TiddlyWiki for Zettelkasten\nThe great thing about TiddlyWiki is that it gives us the three things we need to\nuse the Zettelkasten system.\n\n 1. A note-taking method.\n 2. Bidirectional linking\n 3. A system of Tags\n\nTiddlyWiki offers a note-taking method with its simple interface with entries\ncalled “Tiddlers.” A new Tiddler looks like this:\n\n\n\n\nTiddlers are simple to tag. In our example, I added three different tags--open\nsource, super rad ideas, and TiddlyWiki:\n\n\n\nLet’s create a second note. This one is titled “Even New Tiddler.” And for this\none, I only added one tag--Super rad ideas:\n\n\n\n\nNow, if you search for Tiddlers with the tag “Super rad ideas,” both of our\nTiddlers come up in the search results:\n\n\n\nTiddlyWiki and Fission\nAs you can see, TiddlyWiki provides a simple and effective way to organize your\nnotes using the Zettelkasten method. And now that TiddlyWiki is building a\nversion of the TiddlyWiki app on the Fission platform, users will have a web\nnative option to share content across browsers and devices. You get all of the\nbenefits of TiddlyWiki’s open-source program for note-taking, tagging, and\nbidirectional linking, while Fission acts as a flexible container for your\nZettelkasten. And Fission’s strong encryption keeps your data secure and\nprotected.\n\nWe are working on this project out in the open. You can check out the \nTiddlyWiki\ngroup on the Fission forum [https://talk.fission.codes/c/apps/tiddlywiki/57]  to\nkeep track of this project. You can look for the launch of TiddlyWiki for\nFission later this spring!\n\nAlso, check out the Fission Discord\n[https://discord.com/channels/478735028319158273/478735028319158277], where we\nare having lots of exciting conversations with other devs about current projects\nand all things open source. We started a channel dedicated to the TiddlyWiki on\nFission experience, so be sure to drop by.","html":"<p>What does a prolific 20th-century German scholar have to do with digital note-taking? Turns out quite a bit. We're looking at the note-taking system known as \"Zettlekasten,\" and how you can use <a href=\"https://blog.fission.codes/announcing-tiddlywiki-on-fission/\">Fission and TiddlyWiki </a>to create your own version. </p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p>This is Niklas Luhmann. Niklas was a prolific scholar and writer--he wrote and published more than 70 books and more than 400 scholarly articles.</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://s3.fission.codes/2021/03/Screen-Shot-2021-03-01-at-1.01.30-PM.png\" class=\"kg-image\"><figcaption>This is Niklas Luhmann</figcaption></figure><!--kg-card-end: image--><p>Niklas Luhmann was such an intellectually productive badass because of the relatively ingenious yet straightforward note-taking method he developed known as “Zettelkasten.” Like so many other German words, Zettelkasten as a word is both literal and perfectly descriptive. “Zettel” means slip or note, and “kasten” means box. In essence, the Zettelkasten method is about creating a box (or any storage receptacle) in which to keep notes.</p><h2 id=\"how-zettelkasten-works\">How Zettelkasten works</h2><p>To use the Zettelkasten method, you only need three simple things:</p><ul><li>A way to take notes</li><li>A system with bidirectional linking</li><li>A collection of tags</li></ul><p>That’s it! But now, let’s break down each piece a little bit.</p><h3 id=\"a-note-taking-system\">A note-taking system</h3><p>Luhmann was old school--he owned no computers and used paper, pens, and a typewriter for most of his impressive writing career. He didn’t even type very quickly--he used the hunt and peck method.</p><p>In fact, his Zettelkasten was literally a box of notes in the form of a piece of furniture--sort of like a card catalog.</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://s3.fission.codes/2021/03/Screen-Shot-2021-03-01-at-1.40.56-PM.png\" class=\"kg-image\"><figcaption>Not Luhmann's Zettelkasten, but you get the idea</figcaption></figure><!--kg-card-end: image--><p></p><p>While Luhmann’s Zettelkasten was a piece of furniture stuffed with slips of paper, today, the concept translates very well to any of the many digital note-taking systems available. Web apps like Evernote, Notion, and Google Keep offer free or low-cost ways to take notes on desktop or mobile devices. TiddlyWiki is also a great option because of it’s bidirectional linking power, which is the next crucial ingredient of a Zettelkasten.</p><h3 id=\"a-system-with-bidirectional-linking\">A system with bidirectional linking</h3><p>So what is bidirectional linking? It’s exactly what it sounds like--the ability to connect ideas back and forth to each other in more than one direction. One popular option of a program with this capability is the paid product Roam Research; however, TiddlyWiki offers bidirectional linking function in its free, open-source program.</p><h3 id=\"a-collection-of-tags\">A collection of tags</h3><p>The last component of a Zettelkasten is a collection of tags, or labels, for your thoughts/entries. We’re used to seeing tags used frequently with blog posts or online articles. On the Fission blog, we use categories like security, apps, open-source, or headless to help readers find relevant content. Categorizing your ideas with different tags allows you to find relevant information in a note-taking system quickly. And because one idea may have more than one tag, you can easily find the relevant idea from any number of search terms.</p><h2 id=\"using-tiddlywiki-for-zettelkasten\">Using TiddlyWiki for Zettelkasten</h2><p>The great thing about TiddlyWiki is that it gives us the three things we need to use the Zettelkasten system.</p><ol><li>A note-taking method.</li><li>Bidirectional linking</li><li>A system of Tags</li></ol><p>TiddlyWiki offers a note-taking method with its simple interface with entries called “Tiddlers.” A new Tiddler looks like this:</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://s3.fission.codes/2021/03/1.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><p><br></p><p>Tiddlers are simple to tag. In our example, I added three different tags--open source, super rad ideas, and TiddlyWiki:</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://s3.fission.codes/2021/03/2.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><p></p><p>Let’s create a second note. This one is titled “Even New Tiddler.” And for this one, I only added one tag--Super rad ideas:</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://s3.fission.codes/2021/03/3.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><p><br></p><p>Now, if you search for Tiddlers with the tag “Super rad ideas,” both of our Tiddlers come up in the search results:</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://s3.fission.codes/2021/03/4.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><p></p><h2 id=\"tiddlywiki-and-fission\">TiddlyWiki and Fission</h2><p>As you can see, TiddlyWiki provides a simple and effective way to organize your notes using the Zettelkasten method. And now that TiddlyWiki is building a version of the TiddlyWiki app on the Fission platform, users will have a web native option to share content across browsers and devices. You get all of the benefits of TiddlyWiki’s open-source program for note-taking, tagging, and bidirectional linking, while Fission acts as a flexible container for your Zettelkasten. And Fission’s strong encryption keeps your data secure and protected.</p><p>We are working on this project out in the open. You can check out the <a href=\"https://talk.fission.codes/c/apps/tiddlywiki/57\">TiddlyWiki group on the Fission forum</a> to keep track of this project. You can look for the launch of TiddlyWiki for Fission later this spring!</p><p>Also, check out the <a href=\"https://discord.com/channels/478735028319158273/478735028319158277\">Fission Discord</a>, where we are having lots of exciting conversations with other devs about current projects and all things open source. We started a channel dedicated to the TiddlyWiki on Fission experience, so be sure to drop by.</p>","url":"https://blog.fission.codes/zettelkasten-method-and-digital-notetaking/","canonical_url":null,"uuid":"36d2be05-b515-48fd-8648-3662c15b0732","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"603d33819ae96d001e956b16","reading_time":null}},{"node":{"id":"Ghost__Post__600b7b1257e354001ec9ef4f","title":"Brooklyn Zelenka at Speakeasy JS, Jan 22nd, 2021","slug":"brooklyn-zelenka-speakeasyjs-jan2021","featured":true,"feature_image":"https://images.unsplash.com/photo-1519214605650-76a613ee3245?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MXwxMTc3M3wwfDF8c2VhcmNofDUwfHxiYXJ8ZW58MHx8fA&ixlib=rb-1.2.1&q=80&w=1080","excerpt":"Brooklyn Zelenka presents WebNative: How to put a full stack directly in the browser at the Speakeasy JS meetup.","custom_excerpt":"Brooklyn Zelenka presents WebNative: How to put a full stack directly in the browser at the Speakeasy JS meetup.","created_at_pretty":"23 January, 2021","published_at_pretty":"23 January, 2021","updated_at_pretty":"23 January, 2021","created_at":"2021-01-22T17:25:38.000-08:00","published_at":"2021-01-22T17:27:59.000-08:00","updated_at":"2021-01-22T17:40:24.000-08:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"},{"name":"Brooklyn Zelenka","slug":"expede","bio":"CTO at Fission ♥λ Programs with functions","profile_image":"https://s3.fission.codes/2019/05/IMG_2934-square.jpeg","twitter":"@expede","facebook":null,"website":null}],"primary_author":{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"},"primary_tag":{"name":"Presentations","slug":"presentation","description":null,"feature_image":"https://images.unsplash.com/photo-1535016120720-40c646be5580?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","meta_description":null,"meta_title":null},"tags":[{"name":"Presentations","slug":"presentation","description":null,"feature_image":"https://images.unsplash.com/photo-1535016120720-40c646be5580?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","meta_description":null,"meta_title":null},{"name":"Speakeasy JS","slug":"speakeasy-js","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"web native","slug":"web-native","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"ucan","slug":"ucan","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"WNFS","slug":"wnfs","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"Brooklyn Zelenka presented the work we're doing at Fission at Speakeasy JS\n[https://speakeasyjs.com/]  which is \"the meetup for 🥼 mad science, 🧙‍♂️\nhacking, and 🧪 experiments\". \n\nWebNative: How to put a full stack directly in the browser\nSlides are available on Notist »\n[https://noti.st/expede/lZJZIu/webnative-how-to-put-a-full-stack-directly-in-the-browser]\nYes we have stickers\n[https://shop.fission.codes/collections/stickers-prints/products/speakeasyjs-jan-2021-js-se-stickers?variant=37714267766952]\n: we made a special edition of JavaScript and Speakeasy JS related stickers.\nCode SPEAKEASYJS  for a limited number of free sticker packs available (just pay\nshipping to wherever you are).\n\nThanks Feross [https://feross.org/]  for organizing!\n\nVideo\nVisit the Fission Vimeo account for all of our videos\n[https://vimeo.com/fission], or subscribe to our YouTube channel\n[https://www.youtube.com/channel/UCkf7isShsKRvQl2J7vz5EaA/featured].","html":"<p>Brooklyn Zelenka presented the work we're doing at Fission at <a href=\"https://speakeasyjs.com/\">Speakeasy JS</a> which is \"the meetup for 🥼 mad science, 🧙‍♂️ hacking, and 🧪 experiments\". </p><h2 id=\"webnative-how-to-put-a-full-stack-directly-in-the-browser\">WebNative: How to put a full stack directly in the browser</h2><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://s3.fission.codes/2021/01/webnative-full-stack-1.jpg\" class=\"kg-image\"><figcaption>Slides are <a href=\"https://noti.st/expede/lZJZIu/webnative-how-to-put-a-full-stack-directly-in-the-browser\">available on Notist »</a></figcaption></figure><!--kg-card-end: image--><p>Yes we have <a href=\"https://shop.fission.codes/collections/stickers-prints/products/speakeasyjs-jan-2021-js-se-stickers?variant=37714267766952\">stickers</a>: we made a special edition of JavaScript and Speakeasy JS related stickers. Code <code>SPEAKEASYJS</code> for a limited number of free sticker packs available (just pay shipping to wherever you are).</p><p>Thanks <a href=\"https://feross.org/\">Feross</a> for organizing!</p><h2 id=\"video\">Video</h2><!--kg-card-begin: embed--><figure class=\"kg-card kg-embed-card\"><iframe width=\"200\" height=\"113\" src=\"https://www.youtube.com/embed/TBKQ_TvrK8o?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></figure><!--kg-card-end: embed--><p>Visit the <a href=\"https://vimeo.com/fission\">Fission Vimeo account for all of our videos</a>, or <a href=\"https://www.youtube.com/channel/UCkf7isShsKRvQl2J7vz5EaA/featured\">subscribe to our YouTube channel</a>.</p>","url":"https://blog.fission.codes/brooklyn-zelenka-speakeasyjs-jan2021/","canonical_url":null,"uuid":"527fe227-0088-4ae9-8c9c-14a12425c7e2","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"600b7b1257e354001ec9ef4f","reading_time":null}},{"node":{"id":"Ghost__Post__5ffcad298c9ab6001e39307a","title":"Web Native Database Community Kickoff","slug":"webnative-database-community-kickoff","featured":false,"feature_image":"https://images.unsplash.com/photo-1495592822108-9e6261896da8?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MXwxMTc3M3wwfDF8c2VhcmNofDV8fGRhdGF8ZW58MHx8fA&ixlib=rb-1.2.1&q=80&w=1080","excerpt":"We held our first community meeting about building out the distributed database capabilities of the Web Native File System. Video from Jan 7, 2021.","custom_excerpt":"We held our first community meeting about building out the distributed database capabilities of the Web Native File System. Video from Jan 7, 2021.","created_at_pretty":"11 January, 2021","published_at_pretty":"16 January, 2021","updated_at_pretty":"16 January, 2021","created_at":"2021-01-11T11:55:21.000-08:00","published_at":"2021-01-16T00:38:43.000-08:00","updated_at":"2021-01-16T00:38:43.000-08:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"}],"primary_author":{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"},"primary_tag":{"name":"Presentations","slug":"presentation","description":null,"feature_image":"https://images.unsplash.com/photo-1535016120720-40c646be5580?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","meta_description":null,"meta_title":null},"tags":[{"name":"Presentations","slug":"presentation","description":null,"feature_image":"https://images.unsplash.com/photo-1535016120720-40c646be5580?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","meta_description":null,"meta_title":null},{"name":"WNFS","slug":"wnfs","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Community","slug":"community","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"web native","slug":"web-native","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"We held our first community meeting about interest in building out the\ndistributed database capabilities of the Web Native File System (WNFS).\n\nHere is the video from the January 7th, 2021 meeting:\n\nJames posted notes from the kickoff\n[https://talk.fission.codes/t/kicking-things-off/1372]:\n\n * As we had predicted, the group was a mix of people who are interested in\n   using WNDB as app developers (who have feature and API design interests) and\n   those interested in the protocol / “plumbing” of WNDB\n * There were not a lot of strong feelings about the nature of the API - rather,\n   WNDB needs features and documentation on how to implement them\n * There is a lot of interest / consensus around our initial event source-based\n   design ideas. Brooklyn highlighted datomic\n   [https://tonsky.me/blog/unofficial-guide-to-datomic-internals/]  and \n   datascript [https://github.com/tonsky/datascript].\n * A lot of good (early) discussion around schema management: developers should\n   be able to define them (but also share and re-use), they should be applied as\n   “views”, and lots of interest in project cambria\n   [https://www.inkandswitch.com/cambria.html]\n\nWe've got a new Webnative DB category in the forum\n[https://talk.fission.codes/c/developers/webnative-db/53]  that you can\nsubscribe to and follow along, as well as join the Fission Discord chat\n[https://fission.codes/discord].","html":"<p>We held our first community meeting about interest in building out the distributed database capabilities of the Web Native File System (WNFS).</p><p>Here is the video from the January 7th, 2021 meeting:</p><!--kg-card-begin: embed--><figure class=\"kg-card kg-embed-card\"><iframe src=\"https://player.vimeo.com/video/499093948?app_id=122963\" width=\"640\" height=\"295\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen title=\"WNDB Community R&amp;amp;D Kickoff\"></iframe></figure><!--kg-card-end: embed--><p>James posted <a href=\"https://talk.fission.codes/t/kicking-things-off/1372\">notes from the kickoff</a>:</p><ul><li>As we had predicted, the group was a mix of people who are interested in using WNDB as app developers (who have feature and API design interests) and those interested in the protocol / “plumbing” of WNDB</li><li>There were not a lot of strong feelings about the nature of the API - rather, WNDB needs features and documentation on how to implement them</li><li>There is a lot of interest / consensus around our initial event source-based design ideas. Brooklyn highlighted <a href=\"https://tonsky.me/blog/unofficial-guide-to-datomic-internals/\">datomic</a> and <a href=\"https://github.com/tonsky/datascript\">datascript</a>.</li><li>A lot of good (early) discussion around schema management: developers should be able to define them (but also share and re-use), they should be applied as “views”, and lots of interest in <a href=\"https://www.inkandswitch.com/cambria.html\">project cambria</a></li></ul><p>We've got a <a href=\"https://talk.fission.codes/c/developers/webnative-db/53\">new Webnative DB category in the forum</a> that you can subscribe to and follow along, as well as <a href=\"https://fission.codes/discord\">join the Fission Discord chat</a>.</p>","url":"https://blog.fission.codes/webnative-database-community-kickoff/","canonical_url":null,"uuid":"78e560d6-f386-4814-9d06-976b389a1e01","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5ffcad298c9ab6001e39307a","reading_time":null}},{"node":{"id":"Ghost__Post__5f7c83a7af9100001e524349","title":"Introduction to Web Native Apps","slug":"intro-web-native-apps","featured":true,"feature_image":"https://images.unsplash.com/photo-1483058712412-4245e9b90334?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","excerpt":"An initial intro to Fission's web native apps. Browser as operating system, with the addition of identity and files, like an open source iCloud.","custom_excerpt":"An initial intro to Fission's web native apps. Browser as operating system, with the addition of identity and files, like an open source iCloud.","created_at_pretty":"06 October, 2020","published_at_pretty":"07 October, 2020","updated_at_pretty":"07 October, 2020","created_at":"2020-10-06T07:48:07.000-07:00","published_at":"2020-10-06T17:52:18.000-07:00","updated_at":"2020-10-06T17:52:18.000-07:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"},{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"}],"primary_author":{"name":"Boris Mann","slug":"boris","bio":"Hand-waving web tinkerer who cares about open source and the decentralized web. Cooks & eats.","profile_image":"https://s3.fission.codes/2019/05/5A4DF670-6003-4612-B06B-A9DA17C6D6F3.jpeg","twitter":"@bmann","facebook":null,"website":"https://blog.bmannconsulting.com"},"primary_tag":{"name":"web native","slug":"web-native","description":null,"feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"web native","slug":"web-native","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"Fission builds on top of the web browser as an operating system, and enables web\nnative apps  with additional features that run locally: user controlled files\nand identity.\n\nTom MacWright's article, A clean start for the web\n[https://macwright.com/2020/08/22/clean-starts-for-the-web.html], introduced a\nuseful distinction: the \"document web\" vs. the \"application web\":\n\n> Then there’s the “application web”. This started as server applications, built\nwith things like Django and Ruby on Rails and before them a variety of\ntechnologies that will live forever in corporations, like Java Servlets.\n\nBackbone.js demonstrated that a lot of these applications could be moved into\nthe browser, and then React and its many SPA-style competitors established a new\norder for the web – highly-interactive, quite complex, client-side applications.\nWe don't necessarily agree with a lot of the changes that MacWright wishes for,\nbut we do think that the documentic-centric web  and the app-centric web  is a\nuseful way to think about the difference between websites that we access through\nour browsers.\n\nLike an operating system, your desktop or mobile browser now provides common\nservices for the many web sites – and increasingly web apps  – that you access\nevery day.\n\nWeb Native Apps\nAt Fission, we're both building on top of features that the browser provides,\nand adding additional features that can be used by Fission-powered apps. \n\nWe call these apps \"web native\" apps:\n\n * Works in all browsers, including mobile\n * Doesn't need browser plug-ins\n * Makes use of advanced web APIs in the browser, including on mobile\n * Has user owned data and storage\n * Gives users control over app permissions\n * Can function local-first, and in many cases, offline\n\nWeb native apps are designed to run on the web, taking advantage of all the\ncapabilities your browser has to offer, as well as native, local capabilities\nlike identity, storage, and computation.\n\nWe're also very inspired by Ink & Switch's research findings on local-first\nsoftware [https://www.inkandswitch.com/local-first.html], and continue to build\non and implement the concepts they outline.\n\nAsking Permission\nOne of the things that smartphone apps do is ask permission: can I use your\ncamera? Can I access your files? Can I see your photos? For security reasons,\nthese same sort of permissions are making their way into modern desktop\noperating systems as well.\n\nWith a regular web app, we don't get any of that. Or, even worse, we're clicking\nthrough an agreement for trackers and cookies to be used!\n\nAs a user, signing up for a hosted web app means agreeing to some terms of\nservice. You're using an app that is running on someone else's server, where\nyour data is stored. At best, you've got an export function, and hopefully a\nlowest common denominator format that you can import somewhere else. \n\nWant to work with a batch of your images? First step, upload them all to a\nserver. And hope that you can get export them later. Or that the developer has\nbacked up those files in case something goes wrong. And, that the developer\nhasn't made any mistakes around security and privacy.\n\nOn our smartphones, we feel more in control. Apps ask us for permission. We can\nattach three or four different apps to our photo library, and switch between\nthem, all the while having all of our photos available to us.\n\nThat's how we've built Fission's web native apps. Each app asks for permission,\ngets its own space to write files to. Everything is encrypted, and neither\nFission nor the app developer can see your files without permission.\n\nI'll quote MacWright again:\n\n> There was a time when we could install applications, give some sort of explicit\nagreement that something would run on our computers and use our hardware. \nUsing a web native app is more like installing an app. It uses your local\nidentity, your files, and in many cases can even run offline.\n\nIt is using your browser as an operating system.\n\nWeb Native Apps with Fission\nFission is building an app hosting marketplace for developers and users that\nsupports web native apps.\n\nFor developers, they can design a user app using only front end and design\nskills. The web native app can be installed by 10 or 10,000 users, just like\nmobile or desktop software. Because the app is running on the user's computer,\nyou can focus on finding new users and adding new features, rather than having\nto learn DevOps or server scaling. It's the fastest way to start sharing – and\nsoon, selling – your app on the web.\n\nUsers create a secure identity in their browsers. Every Fission account is\nlinked to a file system, available in any browser. Much like an open source\niCloud, users give permissions to apps, and can access their files from\nanywhere. Users can browse their file system, both public and private, and mix\nand match which apps they use, just like they're used to with mobile and desktop\napps.\n\n\n--------------------------------------------------------------------------------\n\nOur code is open source [https://github.com/fission-suite]. We're building on\ntop of commons infrastructure, and we're aiming to be a federated constellation\nprovider\n[https://blog.fission.codes/constellation-providers-at-decentralized-storage-summit/] \n rather than a cloud provider.\n\nOur 1.0 release is coming soon, sign up on the home page to get notified\n[https://fission.codes], or jump into our Discord chat\n[https://fission.codes/discord]  to get involved and ask questions.","html":"<p>Fission builds on top of the web browser as an operating system, and enables <strong>web native apps</strong> with additional features that run locally: user controlled files and identity.</p><p>Tom MacWright's article, <a href=\"https://macwright.com/2020/08/22/clean-starts-for-the-web.html\">A clean start for the web</a>, introduced a useful distinction: the \"document web\" vs. the \"application web\":</p><blockquote>Then there’s the “application web”. This started as server applications, built with things like Django and Ruby on Rails and before them a variety of technologies that will live forever in corporations, like Java Servlets.<br><br>Backbone.js demonstrated that a lot of these applications could be moved into the browser, and then React and its many SPA-style competitors established a new order for the web – highly-interactive, quite complex, client-side applications.</blockquote><p>We don't necessarily agree with a lot of the changes that MacWright wishes for, but we do think that the <strong>documentic-centric web</strong> and the <strong>app-centric web</strong> is a useful way to think about the difference between websites that we access through our browsers.</p><p>Like an operating system, your desktop or mobile browser now provides common services for the many web sites – and increasingly web <em>apps</em> – that you access every day.</p><h2 id=\"web-native-apps\">Web Native Apps</h2><p>At Fission, we're both building on top of features that the browser provides, and adding additional features that can be used by Fission-powered apps. </p><p>We call these apps \"web native\" apps:</p><ul><li>Works in all browsers, including mobile</li><li>Doesn't need browser plug-ins</li><li>Makes use of advanced web APIs in the browser, including on mobile</li><li>Has user owned data and storage</li><li>Gives users control over app permissions</li><li>Can function local-first, and in many cases, offline</li></ul><p>Web native apps are designed to run on the web, taking advantage of all the capabilities your browser has to offer, as well as native, local capabilities like identity, storage, and computation.</p><p>We're also very inspired by <a href=\"https://www.inkandswitch.com/local-first.html\">Ink &amp; Switch's research findings on local-first software</a>, and continue to build on and implement the concepts they outline.</p><h2 id=\"asking-permission\">Asking Permission</h2><p>One of the things that smartphone apps do is ask permission: can I use your camera? Can I access your files? Can I see your photos? For security reasons, these same sort of permissions are making their way into modern desktop operating systems as well.</p><p>With a regular web app, we don't get any of that. Or, even worse, we're clicking through an agreement for trackers and cookies to be used!</p><p>As a user, signing up for a hosted web app means agreeing to some terms of service. You're using an app that is running on someone else's server, where your data is stored. At best, you've got an export function, and hopefully a lowest common denominator format that you can import somewhere else. </p><p>Want to work with a batch of your images? First step, upload them all to a server. And hope that you can get export them later. Or that the developer has backed up those files in case something goes wrong. And, that the developer hasn't made any mistakes around security and privacy.</p><p>On our smartphones, we feel more in control. Apps ask us for permission. We can attach three or four different apps to our photo library, and switch between them, all the while having all of our photos available to us.</p><p>That's how we've built Fission's web native apps. Each app asks for permission, gets its own space to write files to. Everything is encrypted, and neither Fission nor the app developer can see your files without permission.</p><p>I'll quote MacWright again:</p><blockquote>There was a time when we could install applications, give some sort of explicit agreement that something would run on our computers and use our hardware. </blockquote><p>Using a web native app is more like installing an app. It uses your local identity, your files, and in many cases can even run offline.</p><p>It is using your browser as an operating system.</p><h2 id=\"web-native-apps-with-fission\">Web Native Apps with Fission</h2><p>Fission is building an app hosting marketplace for developers and users that supports web native apps.</p><p>For developers, they can design a user app using only front end and design skills. The web native app can be installed by 10 or 10,000 users, just like mobile or desktop software. Because the app is running on the user's computer, you can focus on finding new users and adding new features, rather than having to learn DevOps or server scaling. It's the fastest way to start sharing – and soon, selling – your app on the web.</p><p>Users create a secure identity in their browsers. Every Fission account is linked to a file system, available in any browser. Much like an open source iCloud, users give permissions to apps, and can access their files from anywhere. Users can browse their file system, both public and private, and mix and match which apps they use, just like they're used to with mobile and desktop apps.</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p>Our code is <a href=\"https://github.com/fission-suite\">open source</a>. We're building on top of commons infrastructure, and we're aiming to be a federated <a href=\"https://blog.fission.codes/constellation-providers-at-decentralized-storage-summit/\">constellation provider</a> rather than a cloud provider.</p><p>Our 1.0 release is coming soon, <a href=\"https://fission.codes\">sign up on the home page to get notified</a>, or jump into our <a href=\"https://fission.codes/discord\">Discord chat</a> to get involved and ask questions.</p>","url":"https://blog.fission.codes/intro-web-native-apps/","canonical_url":null,"uuid":"f6327283-e877-4625-b614-ef27605157a9","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5f7c83a7af9100001e524349","reading_time":null}},{"node":{"id":"Ghost__Post__5f7d56dc5117dc001edafbdf","title":"Web Native File System Technical Design Overview","slug":"web-native-file-system-presentation","featured":false,"feature_image":"https://images.unsplash.com/photo-1524351543168-8e38787614e9?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","excerpt":"Brooklyn and Daniel from the Fission team present a technical overview of the Web Native File System.","custom_excerpt":"Brooklyn and Daniel from the Fission team present a technical overview of the Web Native File System.","created_at_pretty":"07 October, 2020","published_at_pretty":"14 August, 2020","updated_at_pretty":"19 November, 2020","created_at":"2020-10-06T22:49:16.000-07:00","published_at":"2020-08-13T22:49:00.000-07:00","updated_at":"2020-11-19T11:58:53.000-08:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"},{"name":"Brooklyn Zelenka","slug":"expede","bio":"CTO at Fission ♥λ Programs with functions","profile_image":"https://s3.fission.codes/2019/05/IMG_2934-square.jpeg","twitter":"@expede","facebook":null,"website":null},{"name":"Daniel Holmgren","slug":"daniel","bio":null,"profile_image":"https://s3.fission.codes/2019/09/75f5c64c98dbaf2b49b86c299104ab06.png","twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"},"primary_tag":{"name":"web native","slug":"web-native","description":null,"feature_image":null,"meta_description":null,"meta_title":null},"tags":[{"name":"web native","slug":"web-native","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"WNFS","slug":"wnfs","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Presentations","slug":"presentation","description":null,"feature_image":"https://images.unsplash.com/photo-1535016120720-40c646be5580?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","meta_description":null,"meta_title":null},{"name":"IPFS","slug":"ipfs","description":"InterPlanetary File System","feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"Fission has designed a spec for what we call the Web Native File System (WNFS).\nIt is implemented on top of IPFS and can be loaded in any browser, including\nmobile.\n\nWe’ve designed the system to store metadata, encrypt private files, and offer a\nnumber of features for end users and developers using the file system to build\nweb apps with a web native file system, where files are owned by users. This\nalso leads to a style of single tenant architecture for web apps, but for this\npresentation we will focus mainly on the file system details.\n\nJoin Brooklyn Zelenka and Daniel Holmgren as they present a technical design\noverview of WNFS. Leave a comment in the forum\n[https://talk.fission.codes/t/fission-s-web-native-file-system-technical-design-overview-with-daniel-and-brooklyn/818https://talk.fission.codes/t/fission-s-web-native-file-system-technical-design-overview-with-daniel-and-brooklyn/818] \n if you have questions.\n\nSlides\nFull Slide deck available on Notist »\n[https://noti.st/expede/QAYFyW/webnative-file-system]Screencast\nSorry, your browser doesn't support embedded videos.Video\nResources\n * Slides on Notist [https://noti.st/expede/QAYFyW/webnative-file-system]\n * Fission Whitepaper\n   [https://whitepaper.fission.codes/file-system/file-system-basics]  (continues\n   to be a living document)\n * Implemented in webnative SDK on Github\n   [https://github.com/fission-suite/webnative], with basic info in the README \n * Extended usage and documentation in the Fission Guide\n   [https://guide.fission.codes/webnative-sdk/getting-started-webnative-sdk]","html":"<p>Fission has designed a spec for what we call the Web Native File System (WNFS). It is implemented on top of IPFS and can be loaded in any browser, including mobile.</p><p>We’ve designed the system to store metadata, encrypt private files, and offer a number of features for end users and developers using the file system to build web apps with a web native file system, where files are owned by users. This also leads to a style of single tenant architecture for web apps, but for this presentation we will focus mainly on the file system details.</p><p>Join Brooklyn Zelenka and Daniel Holmgren as they present a technical design overview of WNFS. Leave a <a href=\"https://talk.fission.codes/t/fission-s-web-native-file-system-technical-design-overview-with-daniel-and-brooklyn/818https://talk.fission.codes/t/fission-s-web-native-file-system-technical-design-overview-with-daniel-and-brooklyn/818\">comment in the forum</a> if you have questions.</p><h2 id=\"slides\">Slides</h2><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://s3.fission.codes/2020/10/common-concepts-virtual-nodes-large-34.png\" class=\"kg-image\"><figcaption><a href=\"https://noti.st/expede/QAYFyW/webnative-file-system\">Full Slide deck available on Notist »</a></figcaption></figure><!--kg-card-end: image--><h2 id=\"screencast\">Screencast</h2><!--kg-card-begin: html--><video width=\"100%\" height=\"100%\" controls>\n\n    <source src=\"https://ipfs.runfission.com/ipfs/QmaLfohLFTdBu3SU7H3CX6vT8qMZHjUQ8v2mYqcXosBnYY/Screencast_from_08-12-2020_090507_PM.webm\" type=\"video/webm\">\n\n    Sorry, your browser doesn't support embedded videos.\n</video>\n\n<!--kg-card-end: html--><h2 id=\"video\">Video</h2><!--kg-card-begin: embed--><figure class=\"kg-card kg-embed-card\"><iframe src=\"https://player.vimeo.com/video/479944561?app_id=122963\" width=\"426\" height=\"240\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen title=\"Technical Overview of the Web Native File System with Brooklyn Zelenka, Daniel Holmgren - Fission Video Chat Aug 13, 2020\"></iframe></figure><!--kg-card-end: embed--><h2 id=\"resources\">Resources</h2><ul><li><a href=\"https://noti.st/expede/QAYFyW/webnative-file-system\">Slides on Notist</a></li><li><a href=\"https://whitepaper.fission.codes/file-system/file-system-basics\">Fission Whitepaper</a> (continues to be a living document)</li><li>Implemented in <a href=\"https://github.com/fission-suite/webnative\">webnative SDK on Github</a>, with basic info in the README </li><li>Extended usage and documentation in the <a href=\"https://guide.fission.codes/webnative-sdk/getting-started-webnative-sdk\">Fission Guide</a></li></ul>","url":"https://blog.fission.codes/web-native-file-system-presentation/","canonical_url":null,"uuid":"6f6ff611-83a0-4e6f-a8ef-8290044743d3","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5f7d56dc5117dc001edafbdf","reading_time":null}},{"node":{"id":"Ghost__Post__5e6687c859c1cc001e896fc2","title":"Fission on the IPFS Community Call","slug":"fission-on-the-ipfs-community-call","featured":true,"feature_image":"https://s3.fission.codes/2020/03/ipfsbot-twitter-header-community-call.png","excerpt":"Fission presented what we've been up to on the IPFS Weekly Call on March 9th, 2020.","custom_excerpt":"Fission presented what we've been up to on the IPFS Weekly Call on March 9th, 2020.","created_at_pretty":"09 March, 2020","published_at_pretty":"09 March, 2020","updated_at_pretty":"31 March, 2020","created_at":"2020-03-09T11:15:36.000-07:00","published_at":"2020-03-09T12:34:27.000-07:00","updated_at":"2020-03-31T13:46:57.000-07:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"}],"primary_author":{"name":"FISSION Team","slug":"fission","bio":"Exploring fundamental shifts in the way we host, deploy, and run software for humans, using decentralized web technologies.","profile_image":"https://s3.fission.codes/2019/05/fission-logo-white-350px-1.png","twitter":"@fissioncodes","facebook":null,"website":"https://fission.codes"},"primary_tag":{"name":"Presentations","slug":"presentation","description":null,"feature_image":"https://images.unsplash.com/photo-1535016120720-40c646be5580?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","meta_description":null,"meta_title":null},"tags":[{"name":"Presentations","slug":"presentation","description":null,"feature_image":"https://images.unsplash.com/photo-1535016120720-40c646be5580?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","meta_description":null,"meta_title":null},{"name":"IPFS","slug":"ipfs","description":"InterPlanetary File System","feature_image":null,"meta_description":null,"meta_title":null},{"name":"web native","slug":"web-native","description":null,"feature_image":null,"meta_description":null,"meta_title":null},{"name":"Community Call","slug":"community-call","description":null,"feature_image":null,"meta_description":null,"meta_title":null}],"plaintext":"Thanks to the IPFS team for hosting us on the weekly community call! These \ncommunity calls happen weekly on Mondays at 1600 UTC\n[https://talk.fission.codes/t/ipfs-weekly-community-calls/521].\n\nWe presented an intro to what we're building at Fission, including our hosted\nservices, open source contributions, and more.\n\nWe've started to use the phrase \"web native apps\" to describe Fission's app\ncreation platform that decouples storage from apps, with user controlled data,\nand secure by default. Which is what is expected by users  from native mobile\napps.\n\nYou can watch the video – stored on IPFS! – here:\n\nhttps://ipfs.runfission.com/ipfs/QmdAdEPac3X41pVZE2m3EUJibg5mXqtW6sE5LuMDV5mR7x/Fission%20Building%20Web%20Native%20Apps%20IPFS%20Weekly%20Call%202020-03-09.mp4\n\n Originally from the IPFS YouTube [https://youtu.be/wvmZj7IE9Bo]The slides are available on IPFS as a PDF\n[https://events.fission.name/2020/ipfs-community-call/Fission-IPFS-Community-Call-March2020.pdf]\n:\n\nAlso on Notist [https://noti.st/bmann/TltFLG/fission-building-web-native-apps]\n--------------------------------------------------------------------------------\n\nFrom the final slide, here are all the places where you can find out more and\nconnect with us:\n\n * Github: fission-suite [https://github.com/fission-suite]\n * Install Guide & Docs: guide.fission.codes [https://guide.fission.codes]\n * Technical Whitepaper: whitepaper.fission.codes\n   [https://whitepaper.fission.codes]   – this is a work in progress! 🚧 👷‍♀️✍️\n * Discourse forum: talk.fission.codes [https://talk.fission.codes]\n * Discord chat: fission.codes/discourse [https://fission.codes/discourse]\n * Twitter: @fissioncodes [https://twitter.com/fissioncodes], team accounts \n   @expede [https://twitter.com/expede],@bmann [https://twitter.com/bmann], \n   @icidasset [https://twitter.com/icidasset], and @dholms on Github\n   [https://github.com/dholms]","html":"<p>Thanks to the IPFS team for hosting us on the weekly community call! These <a href=\"https://talk.fission.codes/t/ipfs-weekly-community-calls/521\">community calls happen weekly on Mondays at 1600 UTC</a>.</p><p>We presented an intro to what we're building at Fission, including our hosted services, open source contributions, and more.</p><p>We've started to use the phrase \"web native apps\" to describe Fission's app creation platform that decouples storage from apps, with user controlled data, and secure by default. Which is what is expected by users  from native mobile apps.</p><p>You can watch the video – stored on IPFS! – here:</p><!--kg-card-begin: html--><figure class=\"kg-card kg-card-hascaption\">\n<video width=\"100%\" height=\"100%\" controls>\n              <source src=\"https://ipfs.runfission.com/ipfs/QmdAdEPac3X41pVZE2m3EUJibg5mXqtW6sE5LuMDV5mR7x/Fission%20Building%20Web%20Native%20Apps%20IPFS%20Weekly%20Call%202020-03-09.mp4\">\n              <a href=\"https://ipfs.runfission.com/ipfs/QmdAdEPac3X41pVZE2m3EUJibg5mXqtW6sE5LuMDV5mR7x/Fission%20Building%20Web%20Native%20Apps%20IPFS%20Weekly%20Call%202020-03-09.mp4\">https://ipfs.runfission.com/ipfs/QmdAdEPac3X41pVZE2m3EUJibg5mXqtW6sE5LuMDV5mR7x/Fission%20Building%20Web%20Native%20Apps%20IPFS%20Weekly%20Call%202020-03-09.mp4</a>\n            </video>\n    <figcaption>Originally from the <a href=\"https://youtu.be/wvmZj7IE9Bo\">IPFS YouTube</a></figcaption>\n</figure><!--kg-card-end: html--><p>The slides are <a href=\"https://events.fission.name/2020/ipfs-community-call/Fission-IPFS-Community-Call-March2020.pdf\">available on IPFS as a PDF</a>:</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://s3.fission.codes/2020/03/Screen-Shot-2020-03-09-at-12.19.32-PM.png\" class=\"kg-image\"><figcaption><a href=\"https://noti.st/bmann/TltFLG/fission-building-web-native-apps\">Also on Notist</a></figcaption></figure><!--kg-card-end: image--><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><p>From the final slide, here are all the places where you can find out more and connect with us:</p><ul><li>Github: <a href=\"https://github.com/fission-suite\">fission-suite</a></li><li>Install Guide &amp; Docs: <a href=\"https://guide.fission.codes\">guide.fission.codes</a></li><li>Technical Whitepaper: <a href=\"https://whitepaper.fission.codes\">whitepaper.fission.codes</a>  – this is a work in progress! 🚧 👷‍♀️✍️</li><li>Discourse forum: <a href=\"https://talk.fission.codes\">talk.fission.codes</a></li><li>Discord chat: <a href=\"https://fission.codes/discourse\">fission.codes/discourse</a></li><li>Twitter: <a href=\"https://twitter.com/fissioncodes\">@fissioncodes</a>, team accounts <a href=\"https://twitter.com/expede\">@expede</a>,  <a href=\"https://twitter.com/bmann\">@bmann</a>, <a href=\"https://twitter.com/icidasset\">@icidasset</a>, and <a href=\"https://github.com/dholms\">@dholms on Github</a></li></ul>","url":"https://blog.fission.codes/fission-on-the-ipfs-community-call/","canonical_url":null,"uuid":"9ee77a98-26c4-4879-b9e3-349650be7806","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5e6687c859c1cc001e896fc2","reading_time":null}}]}},"pageContext":{"slug":"web-native","pageNumber":0,"humanPageNumber":1,"skip":0,"limit":12,"numberOfPages":1,"previousPagePath":"","nextPagePath":""}}